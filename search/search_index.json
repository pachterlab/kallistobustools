{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"kallisto | bustools for single-cell RNA-seq pre-processing \u00b6 kallisto | bustools is a workflow for pre-processing single-cell RNA-seq data. Pre-processing single-cell RNA-seq involves: (1) association of reads with their cells of origin, (2) collapsing of reads according to unique molecular identifiers (UMIs), and (3) generation of gene or feature counts from the reads to generate a cell x gene matrix. With kallisto | bustools you can Generate a cell x gene or cell x transcript equivalence class count matrix Perform RNA velocity and single-nuclei RNA-seq analsis Quantify data from numerous technologies such as 10x, inDrops, and Dropseq. Customize workflows for new technologies and protocols. Process feature barcoding data such as CITE-seq, REAP-seq, MULTI-seq, Clicktags, and Perturb-seq. Obtain QC reports from single-cell RNA-seq data The kallisto | bustools workflow is described in: P\u00e1ll Melsted*, A. Sina Booeshaghi*, Lauren Liu, Fan Gao, Lambda Lu, Kyung Hoi (Joseph) Min, Eduardo da Veiga Beltrame, Kristj\u00e1n Eldj\u00e1rn Hj\u00f6rleifsson, Jase Gehring & Lior Pachter\u2020 Modular and efficient pre-processing of single-cell RNA-seq , Nature Biotechnology (2021). *Authors contributed equally \u2020Corresponding author","title":"Home"},{"location":"index.html#kallisto-bustools-for-single-cell-rna-seq-pre-processing","text":"kallisto | bustools is a workflow for pre-processing single-cell RNA-seq data. Pre-processing single-cell RNA-seq involves: (1) association of reads with their cells of origin, (2) collapsing of reads according to unique molecular identifiers (UMIs), and (3) generation of gene or feature counts from the reads to generate a cell x gene matrix. With kallisto | bustools you can Generate a cell x gene or cell x transcript equivalence class count matrix Perform RNA velocity and single-nuclei RNA-seq analsis Quantify data from numerous technologies such as 10x, inDrops, and Dropseq. Customize workflows for new technologies and protocols. Process feature barcoding data such as CITE-seq, REAP-seq, MULTI-seq, Clicktags, and Perturb-seq. Obtain QC reports from single-cell RNA-seq data The kallisto | bustools workflow is described in: P\u00e1ll Melsted*, A. Sina Booeshaghi*, Lauren Liu, Fan Gao, Lambda Lu, Kyung Hoi (Joseph) Min, Eduardo da Veiga Beltrame, Kristj\u00e1n Eldj\u00e1rn Hj\u00f6rleifsson, Jase Gehring & Lior Pachter\u2020 Modular and efficient pre-processing of single-cell RNA-seq , Nature Biotechnology (2021). *Authors contributed equally \u2020Corresponding author","title":"kallisto | bustools for single-cell RNA-seq pre-processing"},{"location":"applications.html","text":"Applications of kallisto and bustools \u00b6 Counting antibody derived tags Improving oligo-conjugated antibody signal in multimodal single-cell analysis RNA velocity from single-nuclei RNA-seq Single-Nucleus Sequencing of an Entire Mammalian Heart: Cell Type Composition and Velocity Analysis of scATAC-seq Fast analysis of scATAC-seq data using a predefined set of genomic regions Multi-tech barcoding Building the Mega Single Cell Transcriptome Ocular Meta-Atlas Fully reproducible non-model organism cell type atlas Whole Animal Multiplexed Single-Cell RNA-Seq Reveals Plasticity of Clytia Medusa Cell Types SwabSeq Covid19 high-throughput sequencing based testing Reliable and accurate diagnostics from highly multiplexed sequencing assays Large-scale Covid19 scRNAseq based transcriptome atlas processing COVID-19 immune features revealed by a large-scale single-cell transcriptome atlas Isoform analysis of single-cell RNA-seq Isoform cell type specificity in the mouse primary motor cortex","title":"Applications"},{"location":"applications.html#applications-of-kallisto-and-bustools","text":"Counting antibody derived tags Improving oligo-conjugated antibody signal in multimodal single-cell analysis RNA velocity from single-nuclei RNA-seq Single-Nucleus Sequencing of an Entire Mammalian Heart: Cell Type Composition and Velocity Analysis of scATAC-seq Fast analysis of scATAC-seq data using a predefined set of genomic regions Multi-tech barcoding Building the Mega Single Cell Transcriptome Ocular Meta-Atlas Fully reproducible non-model organism cell type atlas Whole Animal Multiplexed Single-Cell RNA-Seq Reveals Plasticity of Clytia Medusa Cell Types SwabSeq Covid19 high-throughput sequencing based testing Reliable and accurate diagnostics from highly multiplexed sequencing assays Large-scale Covid19 scRNAseq based transcriptome atlas processing COVID-19 immune features revealed by a large-scale single-cell transcriptome atlas Isoform analysis of single-cell RNA-seq Isoform cell type specificity in the mouse primary motor cortex","title":"Applications of kallisto and bustools"},{"location":"kb_usage/kb_count.html","text":"Quantifying a dataset \u00b6 Once an index has been generated or downloaded, kb count uses kallisto to pseudoalign reads and bustools to quantify the data: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 usage: kb count [-h] [--tmp TMP] [--keep-tmp] [--verbose] -i INDEX -g T2G -x TECHNOLOGY [-o OUT] [-w WHITELIST] [-t THREADS] [-m MEMORY] [--workflow {standard,lamanno,nucleus,kite,kite:10xFB}] [--mm | --tcc] [--filter [{bustools}]] [-c1 T2C] [-c2 T2C] [--overwrite] [--dry-run] [--lamanno | --nucleus] [--loom | --h5ad] fastqs [fastqs ...] Generate count matrices from a set of single-cell FASTQ files. Run `kb --list` to view single-cell technology information. positional arguments: fastqs FASTQ files optional arguments: -h, --help Show this help message and exit --tmp TMP Override default temporary directory --keep-tmp Do not delete the tmp directory --verbose Print debugging information -o OUT Path to output directory (default: current directory) -w WHITELIST Path to file of whitelisted barcodes to correct to. If not provided and bustools supports the technology, a pre-packaged whitelist is used. If not, the bustools whitelist command is used. (`kb --list` to view whitelists) -t THREADS Number of threads to use (default: 8) -m MEMORY Maximum memory used (default: 4G) --workflow {standard,lamanno,nucleus,kite,kite:10xFB} Type of workflow. Use `lamanno` for RNA velocity based on La Manno et al. 2018 logic. Use `nucleus` for RNA velocity on single-nucleus RNA-seq reads. Use `kite` for feature barcoding. Use `kite:10xFB` for 10x Genomics Feature Barcoding technology. (default: standard) --mm Include reads that pseudoalign to multiple genes. --tcc Generate a TCC matrix instead of a gene count matrix. --filter [{bustools}] Produce a filtered gene count matrix (default: bustools) --overwrite Overwrite existing output.bus file --dry-run Dry run --lamanno Deprecated. Use `--workflow lamanno` instead. --nucleus Deprecated. Use `--workflow nucleus` instead. --loom Generate loom file from count matrix --h5ad Generate h5ad file from count matrix required arguments: -i INDEX Path to kallisto index/indices, comma-delimited -g T2G Path to transcript-to-gene mapping -x TECHNOLOGY Single-cell technology used (`kb --list` to view) required arguments for `lamanno` and `nucleus` workflows: -c1 T2C Path to cDNA transcripts-to-capture -c2 T2C Path to intron transcripts-to-captured","title":"Quantifying a dataset"},{"location":"kb_usage/kb_count.html#quantifying-a-dataset","text":"Once an index has been generated or downloaded, kb count uses kallisto to pseudoalign reads and bustools to quantify the data: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 usage: kb count [-h] [--tmp TMP] [--keep-tmp] [--verbose] -i INDEX -g T2G -x TECHNOLOGY [-o OUT] [-w WHITELIST] [-t THREADS] [-m MEMORY] [--workflow {standard,lamanno,nucleus,kite,kite:10xFB}] [--mm | --tcc] [--filter [{bustools}]] [-c1 T2C] [-c2 T2C] [--overwrite] [--dry-run] [--lamanno | --nucleus] [--loom | --h5ad] fastqs [fastqs ...] Generate count matrices from a set of single-cell FASTQ files. Run `kb --list` to view single-cell technology information. positional arguments: fastqs FASTQ files optional arguments: -h, --help Show this help message and exit --tmp TMP Override default temporary directory --keep-tmp Do not delete the tmp directory --verbose Print debugging information -o OUT Path to output directory (default: current directory) -w WHITELIST Path to file of whitelisted barcodes to correct to. If not provided and bustools supports the technology, a pre-packaged whitelist is used. If not, the bustools whitelist command is used. (`kb --list` to view whitelists) -t THREADS Number of threads to use (default: 8) -m MEMORY Maximum memory used (default: 4G) --workflow {standard,lamanno,nucleus,kite,kite:10xFB} Type of workflow. Use `lamanno` for RNA velocity based on La Manno et al. 2018 logic. Use `nucleus` for RNA velocity on single-nucleus RNA-seq reads. Use `kite` for feature barcoding. Use `kite:10xFB` for 10x Genomics Feature Barcoding technology. (default: standard) --mm Include reads that pseudoalign to multiple genes. --tcc Generate a TCC matrix instead of a gene count matrix. --filter [{bustools}] Produce a filtered gene count matrix (default: bustools) --overwrite Overwrite existing output.bus file --dry-run Dry run --lamanno Deprecated. Use `--workflow lamanno` instead. --nucleus Deprecated. Use `--workflow nucleus` instead. --loom Generate loom file from count matrix --h5ad Generate h5ad file from count matrix required arguments: -i INDEX Path to kallisto index/indices, comma-delimited -g T2G Path to transcript-to-gene mapping -x TECHNOLOGY Single-cell technology used (`kb --list` to view) required arguments for `lamanno` and `nucleus` workflows: -c1 T2C Path to cDNA transcripts-to-capture -c2 T2C Path to intron transcripts-to-captured","title":"Quantifying a dataset"},{"location":"kb_usage/kb_ref.html","text":"Building a reference \u00b6 Starting with a genome and a genome annotation a transcriptome index can be built with kallisto via kb ref . This allows flexibility in building a transcriptomes from genomes and associated genome annotations. In addition kb ref can be used to download pre-built indices: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 $ kb ref usage: kb ref [-h] [--tmp TMP] [--keep-tmp] [--verbose] -i INDEX -g T2G -f1 FASTA [-f2 FASTA] [-c1 T2C] [-c2 T2C] [-n N] [-d {human,mouse,linnarsson}] [-k K] [--workflow {standard,lamanno,nucleus,kite}] [--lamanno] [--overwrite] fasta gtf [feature] Build a kallisto index and transcript-to-gene mapping positional arguments: fasta Genomic FASTA file(s), comma-delimited gtf Reference GTF file(s), comma-delimited feature [`kite` workflow only] Path to TSV containing barcodes and feature names. optional arguments: -h, --help Show this help message and exit --tmp TMP Override default temporary directory --keep-tmp Do not delete the tmp directory --verbose Print debugging information -n N Number of files to split the index into. If this option is specified, the FASTA that is normally used to create an index is split into `N` approximately- equal parts. Each of these FASTAs are indexed separately. -d {human,mouse,linnarsson} Download a pre-built kallisto index (along with all necessary files) instead of building it locally -k K Use this option to override the k-mer length of the index. Usually, the k-mer length automatically calculated by `kb` provides the best results. --workflow {standard,lamanno,nucleus,kite} Type of workflow to prepare files for. Use `lamanno` for RNA velocity based on La Manno et al. 2018 logic. Use `nucleus` for RNA velocity on single-nucleus RNA- seq reads. Use `kite` for feature barcoding. (default: standard) --lamanno Deprecated. Use `--workflow lamanno` instead. --overwrite Overwrite existing kallisto index required arguments: -i INDEX Path to the kallisto index to be constructed. If `-n` is also specified, this is the prefix for the n indices to construct. -g T2G Path to transcript-to-gene mapping to be generated -f1 FASTA [Optional with -d] Path to the cDNA FASTA (lamanno, nucleus) or mismatch FASTA (kite) to be generated required arguments for `lamanno` and `nucleus` workflows: -f2 FASTA Path to the intron FASTA to be generated -c1 T2C Path to generate cDNA transcripts-to-capture -c2 T2C Path to generate intron transcripts-to-capture","title":"Building a reference"},{"location":"kb_usage/kb_ref.html#building-a-reference","text":"Starting with a genome and a genome annotation a transcriptome index can be built with kallisto via kb ref . This allows flexibility in building a transcriptomes from genomes and associated genome annotations. In addition kb ref can be used to download pre-built indices: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 $ kb ref usage: kb ref [-h] [--tmp TMP] [--keep-tmp] [--verbose] -i INDEX -g T2G -f1 FASTA [-f2 FASTA] [-c1 T2C] [-c2 T2C] [-n N] [-d {human,mouse,linnarsson}] [-k K] [--workflow {standard,lamanno,nucleus,kite}] [--lamanno] [--overwrite] fasta gtf [feature] Build a kallisto index and transcript-to-gene mapping positional arguments: fasta Genomic FASTA file(s), comma-delimited gtf Reference GTF file(s), comma-delimited feature [`kite` workflow only] Path to TSV containing barcodes and feature names. optional arguments: -h, --help Show this help message and exit --tmp TMP Override default temporary directory --keep-tmp Do not delete the tmp directory --verbose Print debugging information -n N Number of files to split the index into. If this option is specified, the FASTA that is normally used to create an index is split into `N` approximately- equal parts. Each of these FASTAs are indexed separately. -d {human,mouse,linnarsson} Download a pre-built kallisto index (along with all necessary files) instead of building it locally -k K Use this option to override the k-mer length of the index. Usually, the k-mer length automatically calculated by `kb` provides the best results. --workflow {standard,lamanno,nucleus,kite} Type of workflow to prepare files for. Use `lamanno` for RNA velocity based on La Manno et al. 2018 logic. Use `nucleus` for RNA velocity on single-nucleus RNA- seq reads. Use `kite` for feature barcoding. (default: standard) --lamanno Deprecated. Use `--workflow lamanno` instead. --overwrite Overwrite existing kallisto index required arguments: -i INDEX Path to the kallisto index to be constructed. If `-n` is also specified, this is the prefix for the n indices to construct. -g T2G Path to transcript-to-gene mapping to be generated -f1 FASTA [Optional with -d] Path to the cDNA FASTA (lamanno, nucleus) or mismatch FASTA (kite) to be generated required arguments for `lamanno` and `nucleus` workflows: -f2 FASTA Path to the intron FASTA to be generated -c1 T2C Path to generate cDNA transcripts-to-capture -c2 T2C Path to generate intron transcripts-to-capture","title":"Building a reference"},{"location":"kb_usage/kb_usage.html","text":"kallisto and bustools are wrapped in an easy-to-use program called kb which is part of the kb-python package, and that can be installed on any machine by typing pip install kb-python on the command line. This installs everything needed to process single-cell RNA-seq reads with two simple commands. The first is kb ref and the second kb count : 1 2 $ kb ref -i transcriptome.idx -g transcripts_to_genes.txt -f1 cdna.fa dna.primary_assembly.fa.gz gtf.gz $ kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 read_1.fastq.gz read_2.fastq.gz For an in-depth overview of kb see the docs . kallisto and bustools \u00b6 kb-python utilizes the kallisto and bustools programs. Details on the use of these tools can be found below: The kallisto manual is available at: https://pachterlab.github.io/kallisto/download The bustools manual is available at: https://bustools.github.io/manual","title":"Introduction"},{"location":"kb_usage/kb_usage.html#kallisto-and-bustools","text":"kb-python utilizes the kallisto and bustools programs. Details on the use of these tools can be found below: The kallisto manual is available at: https://pachterlab.github.io/kallisto/download The bustools manual is available at: https://bustools.github.io/manual","title":"kallisto and bustools"},{"location":"tutorials/download_data/data_download.html","text":"Data downloading \u00b6 This tutorial provides information on where to find single-cell RNA-seq data, and how to download it for processing with the kallisto | bustools workflow. Databases \u00b6 There are multiple databases that are important repositories for sequencing data and metadata, and that are relevant for obtaining single-cell RNA-seq data. For each archive we provide an example of how the data is organized and how to download it. Biological Project Library (BioProject): The Biological Project Library organizes metadata for research projects involving genomic data types. This repository, which was started in 2016, is similar to the Gene Expression Omnibus. As an example, the data from the paper Peng et al. 2019 is organized under project accession PRJCA001063 . Each single-cell RNA-seq dataset has a \u201cBioSample accession\u201d, e.g. SAMC047103 . A further link to the Genome Sequencing Archive provides access to FASTQ files. Genome Sequence Archive (GSA): This repository contains reads for projects in FASTQ format. For example, reads for SAMC047103 from the PRJCA001063 in the BioProject repository are accessible under accession CRA001160 . A specific run accession, e.g. CRR034516 provides direct access to FASTQ files. Gene Expression Omnibus (GEO): The Gene Expression Omnibus is a repository for MIAME (Minimum Infomration about a Microarray Experiment) compliant data. While the MIAME standards were established during a time when gene expression data was primarily collected with microarrays, the standards also apply to sequencing data and the GEO repository hosts project metadata for both types of research projects. As an example, the project link for the paper Wolock et al. 2019 is GSE132151 . Most papers refer to their data via GEO accessions, so GEO is a useful repository for searching for data from projects. European Nucelotide Archive (ENA): The ENA provides access to nucleotide sequences associated with genomic projects. In the case of GSE132151 mentioned above, the nucleotide sequences are at PRJNA546231 . The ENA provides direct access to FASTQ files from the project page. It also links to NCBI Sequence Read Archive format data. Sequence Read Archive (SRA): The SRA is a sequence repository for genomic data. Files are stored in SRA format, which must be downloaded and converted to FASTQ format prior to pre-processing using the fasterq-dump program available as part of SRA tools . For example, the data in Rossi et al., 2019 can be located in the SRA via GEO , then to the SRA , and finally a sequence data page for one of the runs, SRX5779290 has information about the traces (reads). The SRA tools operate directly on SRA accessions. Searching \u00b6 The sra-explorer website is an effective and easy to use utility for searching the SRA and for downloading files. The utility finds SRA entires by keywords or accession numbers and produces links to the FASTQs and to commands for downloading them. Streaming \u00b6 Single-cell RNA-seq data from sequence repositories can be streamed into kb making possible a workflow that does not require saving files to disk prior to pre-processing. For example, the following command can be used to stream data from the a URL: Note : Streaming is not supported on Windows. Install kb \u00b6 1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 76 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 55 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 47 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 347 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 39 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 7 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 3 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 7 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 49 . 7 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Download a pre-built mouse index \u00b6 The only required file that must be locally stored on disk prior to pre-processing is the index, which is why we download it here. 1 2 %%time !kb ref -d mouse -i index.idx -g t2g.txt [ 2021 - 03 - 31 19 : 33 : 26 , 151 ] INFO Downloading files for mouse from https : // caltech . box . com / shared / static / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz to tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz 100 % 1.89 G / 1.89 G [ 01 : 30 < 00 : 00 , 22.4 MB / s ] [ 2021 - 03 - 31 19 : 34 : 58 , 426 ] INFO Extracting files from tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz CPU times : user 1.28 s , sys : 218 ms , total : 1.5 s Wall time : 2 min 6 s 1 2 3 4 %%time !kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 \\ https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz \\ https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz [2021-03-31 19:35:32,311] INFO Piping https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz to ./tmp/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz [2021-03-31 19:35:32,313] INFO Piping https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz to ./tmp/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz [2021-03-31 19:35:32,314] INFO Using index index.idx to generate BUS file to . from [2021-03-31 19:35:32,314] INFO ./tmp/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz [2021-03-31 19:35:32,314] INFO ./tmp/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz [2021-03-31 19:38:44,775] INFO Sorting BUS file ./output.bus to ./tmp/output.s.bus [2021-03-31 19:38:50,622] INFO Whitelist not provided [2021-03-31 19:38:50,622] INFO Copying pre-packaged 10XV2 whitelist to . [2021-03-31 19:38:50,752] INFO Inspecting BUS file ./tmp/output.s.bus [2021-03-31 19:38:53,602] INFO Correcting BUS records in ./tmp/output.s.bus to ./tmp/output.s.c.bus with whitelist ./10xv2_whitelist.txt [2021-03-31 19:38:55,827] INFO Sorting BUS file ./tmp/output.s.c.bus to ./output.unfiltered.bus [2021-03-31 19:39:00,448] INFO Generating count matrix ./counts_unfiltered/cells_x_genes from BUS file ./output.unfiltered.bus [2021-03-31 19:39:06,425] INFO Reading matrix ./counts_unfiltered/cells_x_genes.mtx [2021-03-31 19:39:09,811] INFO Writing matrix to h5ad ./counts_unfiltered/adata.h5ad CPU times: user 1.41 s, sys: 188 ms, total: 1.6 s Wall time: 3min 39s 1","title":"Find & download data"},{"location":"tutorials/download_data/data_download.html#data-downloading","text":"This tutorial provides information on where to find single-cell RNA-seq data, and how to download it for processing with the kallisto | bustools workflow.","title":"Data downloading"},{"location":"tutorials/download_data/data_download.html#databases","text":"There are multiple databases that are important repositories for sequencing data and metadata, and that are relevant for obtaining single-cell RNA-seq data. For each archive we provide an example of how the data is organized and how to download it. Biological Project Library (BioProject): The Biological Project Library organizes metadata for research projects involving genomic data types. This repository, which was started in 2016, is similar to the Gene Expression Omnibus. As an example, the data from the paper Peng et al. 2019 is organized under project accession PRJCA001063 . Each single-cell RNA-seq dataset has a \u201cBioSample accession\u201d, e.g. SAMC047103 . A further link to the Genome Sequencing Archive provides access to FASTQ files. Genome Sequence Archive (GSA): This repository contains reads for projects in FASTQ format. For example, reads for SAMC047103 from the PRJCA001063 in the BioProject repository are accessible under accession CRA001160 . A specific run accession, e.g. CRR034516 provides direct access to FASTQ files. Gene Expression Omnibus (GEO): The Gene Expression Omnibus is a repository for MIAME (Minimum Infomration about a Microarray Experiment) compliant data. While the MIAME standards were established during a time when gene expression data was primarily collected with microarrays, the standards also apply to sequencing data and the GEO repository hosts project metadata for both types of research projects. As an example, the project link for the paper Wolock et al. 2019 is GSE132151 . Most papers refer to their data via GEO accessions, so GEO is a useful repository for searching for data from projects. European Nucelotide Archive (ENA): The ENA provides access to nucleotide sequences associated with genomic projects. In the case of GSE132151 mentioned above, the nucleotide sequences are at PRJNA546231 . The ENA provides direct access to FASTQ files from the project page. It also links to NCBI Sequence Read Archive format data. Sequence Read Archive (SRA): The SRA is a sequence repository for genomic data. Files are stored in SRA format, which must be downloaded and converted to FASTQ format prior to pre-processing using the fasterq-dump program available as part of SRA tools . For example, the data in Rossi et al., 2019 can be located in the SRA via GEO , then to the SRA , and finally a sequence data page for one of the runs, SRX5779290 has information about the traces (reads). The SRA tools operate directly on SRA accessions.","title":"Databases"},{"location":"tutorials/download_data/data_download.html#searching","text":"The sra-explorer website is an effective and easy to use utility for searching the SRA and for downloading files. The utility finds SRA entires by keywords or accession numbers and produces links to the FASTQs and to commands for downloading them.","title":"Searching"},{"location":"tutorials/download_data/data_download.html#streaming","text":"Single-cell RNA-seq data from sequence repositories can be streamed into kb making possible a workflow that does not require saving files to disk prior to pre-processing. For example, the following command can be used to stream data from the a URL: Note : Streaming is not supported on Windows.","title":"Streaming"},{"location":"tutorials/download_data/data_download.html#install-kb","text":"1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 76 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 55 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 47 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 347 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 39 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 7 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 3 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 7 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 49 . 7 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone","title":"Install kb"},{"location":"tutorials/download_data/data_download.html#download-a-pre-built-mouse-index","text":"The only required file that must be locally stored on disk prior to pre-processing is the index, which is why we download it here. 1 2 %%time !kb ref -d mouse -i index.idx -g t2g.txt [ 2021 - 03 - 31 19 : 33 : 26 , 151 ] INFO Downloading files for mouse from https : // caltech . box . com / shared / static / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz to tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz 100 % 1.89 G / 1.89 G [ 01 : 30 < 00 : 00 , 22.4 MB / s ] [ 2021 - 03 - 31 19 : 34 : 58 , 426 ] INFO Extracting files from tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz CPU times : user 1.28 s , sys : 218 ms , total : 1.5 s Wall time : 2 min 6 s 1 2 3 4 %%time !kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 \\ https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz \\ https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz [2021-03-31 19:35:32,311] INFO Piping https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz to ./tmp/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz [2021-03-31 19:35:32,313] INFO Piping https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz to ./tmp/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz [2021-03-31 19:35:32,314] INFO Using index index.idx to generate BUS file to . from [2021-03-31 19:35:32,314] INFO ./tmp/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz [2021-03-31 19:35:32,314] INFO ./tmp/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz [2021-03-31 19:38:44,775] INFO Sorting BUS file ./output.bus to ./tmp/output.s.bus [2021-03-31 19:38:50,622] INFO Whitelist not provided [2021-03-31 19:38:50,622] INFO Copying pre-packaged 10XV2 whitelist to . [2021-03-31 19:38:50,752] INFO Inspecting BUS file ./tmp/output.s.bus [2021-03-31 19:38:53,602] INFO Correcting BUS records in ./tmp/output.s.bus to ./tmp/output.s.c.bus with whitelist ./10xv2_whitelist.txt [2021-03-31 19:38:55,827] INFO Sorting BUS file ./tmp/output.s.c.bus to ./output.unfiltered.bus [2021-03-31 19:39:00,448] INFO Generating count matrix ./counts_unfiltered/cells_x_genes from BUS file ./output.unfiltered.bus [2021-03-31 19:39:06,425] INFO Reading matrix ./counts_unfiltered/cells_x_genes.mtx [2021-03-31 19:39:09,811] INFO Writing matrix to h5ad ./counts_unfiltered/adata.h5ad CPU times: user 1.41 s, sys: 188 ms, total: 1.6 s Wall time: 3min 39s 1","title":"Download a pre-built mouse index"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html","text":"Aggregating multiple count matrices tutorial \u00b6 This tutorial describes how to aggregate multiple count matrices by concatenating them into a single AnnData object with batch labels for different samples. This is similar to the Cell Ranger aggr function, however no normalization is performed. cellranger aggr is described at https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/using/aggregate For this tutorial we use dataset E-MTAB-6108. The notebook will take some time to run. To ensure that Google Colab does not shut down because of inactivity paste the following code into the console of this tab ( Cntrl [Mac: Cmd] + Option + i -> Console tab -> paste code -> press Enter ). 1 2 3 4 5 function ConnectButton (){ console . log ( \"Connect pushed\" ); document . querySelector ( \"#top-toolbar > colab-connect-button\" ). shadowRoot . querySelector ( \"#connect\" ). click () } setInterval ( ConnectButton , 60000 ); Download the raw data \u00b6 The raw data for E-MTAB-6108 is available at https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-6108/ 1 2 3 4 5 %%time !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample1_L005_R1.fastq.gz !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample1_L005_R2.fastq.gz !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample2_L005_R1.fastq.gz !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample2_L005_R2.fastq.gz CPU times: user 5.42 s, sys: 839 ms, total: 6.25 s Wall time: 15min 30s Install kb \u00b6 Install kb for running the kallisto|bustools workflow. 1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 77 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 34 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 50 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 6 . 8 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 56 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 6 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 50 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5 . 0 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Download a pre-built human index \u00b6 Note: See this notebook for a tutorial on how to build custom transcriptome or RNA velocity indices. 1 2 %%time !kb ref -d human -i index.idx -g t2g.txt [ 2021 - 03 - 31 20 : 50 : 10 , 750 ] INFO Downloading files for human from https : // caltech . box . com / shared / static / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz to tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz 100 % 2.23 G / 2.23 G [ 01 : 35 < 00 : 00 , 25.0 MB / s ] [ 2021 - 03 - 31 20 : 51 : 47 , 840 ] INFO Extracting files from tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz CPU times : user 1.51 s , sys : 288 ms , total : 1.8 s Wall time : 2 min 15 s Generate an RNA count matrices in H5AD format \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . The --filter flag is used to filter out barcodes with low UMI counts. This will generate two matrices, one in the counts_unfiltered directory and another in the counts_filtered directory. Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. Sample 1 \u00b6 1 2 3 4 %%time !kb count -i index.idx -g t2g.txt -x 10xv2 -o sample1 --h5ad -t 2 --filter bustools \\ iPSC_RGCscRNAseq_Sample1_L005_R1.fastq.gz \\ iPSC_RGCscRNAseq_Sample1_L005_R2.fastq.gz [ 2021 - 03 - 31 20 : 52 : 24 , 861 ] INFO Using index index . idx to generate BUS file to sample1 from [ 2021 - 03 - 31 20 : 52 : 24 , 861 ] INFO iPSC_RGCscRNAseq_Sample1_L005_R1 . fastq . gz [ 2021 - 03 - 31 20 : 52 : 24 , 861 ] INFO iPSC_RGCscRNAseq_Sample1_L005_R2 . fastq . gz [ 2021 - 03 - 31 21 : 15 : 29 , 824 ] INFO Sorting BUS file sample1 / output . bus to sample1 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 16 : 21 , 667 ] INFO Whitelist not provided [ 2021 - 03 - 31 21 : 16 : 21 , 668 ] INFO Copying pre - packaged 10 XV2 whitelist to sample1 [ 2021 - 03 - 31 21 : 16 : 22 , 484 ] INFO Inspecting BUS file sample1 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 16 : 36 , 519 ] INFO Correcting BUS records in sample1 / tmp / output . s . bus to sample1 / tmp / output . s . c . bus with whitelist sample1 / 10 xv2_whitelist . txt [ 2021 - 03 - 31 21 : 16 : 46 , 573 ] INFO Sorting BUS file sample1 / tmp / output . s . c . bus to sample1 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 17 : 25 , 239 ] INFO Generating count matrix sample1 / counts_unfiltered / cells_x_genes from BUS file sample1 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 17 : 48 , 992 ] INFO Reading matrix sample1 / counts_unfiltered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 18 : 00 , 111 ] INFO Writing matrix to h5ad sample1 / counts_unfiltered / adata . h5ad [ 2021 - 03 - 31 21 : 18 : 00 , 914 ] INFO Filtering with bustools [ 2021 - 03 - 31 21 : 18 : 00 , 915 ] INFO Generating whitelist sample1 / filter_barcodes . txt from BUS file sample1 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 18 : 01 , 259 ] INFO Correcting BUS records in sample1 / output . unfiltered . bus to sample1 / tmp / output . unfiltered . c . bus with whitelist sample1 / filter_barcodes . txt [ 2021 - 03 - 31 21 : 18 : 09 , 292 ] INFO Sorting BUS file sample1 / tmp / output . unfiltered . c . bus to sample1 / output . filtered . bus [ 2021 - 03 - 31 21 : 18 : 46 , 457 ] INFO Generating count matrix sample1 / counts_filtered / cells_x_genes from BUS file sample1 / output . filtered . bus [ 2021 - 03 - 31 21 : 19 : 09 , 724 ] INFO Reading matrix sample1 / counts_filtered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 19 : 18 , 183 ] INFO Writing matrix to h5ad sample1 / counts_filtered / adata . h5ad CPU times : user 9.95 s , sys : 1.39 s , total : 11.3 s Wall time : 26 min 56 s Sample 2 \u00b6 1 2 3 4 %%time !kb count -i index.idx -g t2g.txt -x 10xv2 -o sample2 --h5ad -t 2 --filter bustools \\ iPSC_RGCscRNAseq_Sample2_L005_R1.fastq.gz \\ iPSC_RGCscRNAseq_Sample2_L005_R2.fastq.gz [ 2021 - 03 - 31 21 : 19 : 22 , 185 ] INFO Using index index . idx to generate BUS file to sample2 from [ 2021 - 03 - 31 21 : 19 : 22 , 185 ] INFO iPSC_RGCscRNAseq_Sample2_L005_R1 . fastq . gz [ 2021 - 03 - 31 21 : 19 : 22 , 185 ] INFO iPSC_RGCscRNAseq_Sample2_L005_R2 . fastq . gz [ 2021 - 03 - 31 21 : 37 : 11 , 095 ] INFO Sorting BUS file sample2 / output . bus to sample2 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 37 : 35 , 255 ] INFO Whitelist not provided [ 2021 - 03 - 31 21 : 37 : 35 , 255 ] INFO Copying pre - packaged 10 XV2 whitelist to sample2 [ 2021 - 03 - 31 21 : 37 : 35 , 379 ] INFO Inspecting BUS file sample2 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 37 : 43 , 363 ] INFO Correcting BUS records in sample2 / tmp / output . s . bus to sample2 / tmp / output . s . c . bus with whitelist sample2 / 10 xv2_whitelist . txt [ 2021 - 03 - 31 21 : 37 : 47 , 960 ] INFO Sorting BUS file sample2 / tmp / output . s . c . bus to sample2 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 37 : 58 , 445 ] INFO Generating count matrix sample2 / counts_unfiltered / cells_x_genes from BUS file sample2 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 38 : 08 , 901 ] INFO Reading matrix sample2 / counts_unfiltered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 38 : 13 , 045 ] INFO Writing matrix to h5ad sample2 / counts_unfiltered / adata . h5ad [ 2021 - 03 - 31 21 : 38 : 13 , 797 ] INFO Filtering with bustools [ 2021 - 03 - 31 21 : 38 : 13 , 798 ] INFO Generating whitelist sample2 / filter_barcodes . txt from BUS file sample2 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 38 : 13 , 965 ] INFO Correcting BUS records in sample2 / output . unfiltered . bus to sample2 / tmp / output . unfiltered . c . bus with whitelist sample2 / filter_barcodes . txt [ 2021 - 03 - 31 21 : 38 : 16 , 943 ] INFO Sorting BUS file sample2 / tmp / output . unfiltered . c . bus to sample2 / output . filtered . bus [ 2021 - 03 - 31 21 : 38 : 25 , 772 ] INFO Generating count matrix sample2 / counts_filtered / cells_x_genes from BUS file sample2 / output . filtered . bus [ 2021 - 03 - 31 21 : 38 : 33 , 900 ] INFO Reading matrix sample2 / counts_filtered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 38 : 36 , 553 ] INFO Writing matrix to h5ad sample2 / counts_filtered / adata . h5ad CPU times : user 7.29 s , sys : 1.04 s , total : 8.33 s Wall time : 19 min 17 s Install anndata \u00b6 1 !pip install --quiet anndata Read sample1 and sample2 gene counts into anndata \u00b6 1 2 3 import anndata sample1 = anndata.read_h5ad('sample1/counts_filtered/adata.h5ad') sample2 = anndata.read_h5ad('sample2/counts_filtered/adata.h5ad') 1 sample1 AnnData object with n_obs \u00d7 n_vars = 1424 \u00d7 60623 var : 'gene_name' 1 sample1.X <1424x60623 sparse matrix of type '<class 'numpy.float32'>' with 4829530 stored elements in Compressed Sparse Row format> 1 sample1.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } barcode AAACCTGAGCTGTTCA AAACCTGCAATTCCTT AAACCTGGTCTACCTC AAACCTGGTTTCCACC AAACCTGTCCTATGTT 1 sample1.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gene_name gene_id ENSG00000223972.5 DDX11L1 ENSG00000227232.5 WASH7P ENSG00000278267.1 MIR6859-1 ENSG00000243485.5 MIR1302-2HG ENSG00000284332.1 MIR1302-2 1 sample2 AnnData object with n_obs \u00d7 n_vars = 281 \u00d7 60623 var : 'gene_name' 1 sample2.X <281x60623 sparse matrix of type '<class 'numpy.float32'>' with 1282359 stored elements in Compressed Sparse Row format> 1 sample2.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } barcode AAACCTGAGACCACGA AAACCTGTCTGATACG AAACGGGAGTGTTGAA AAAGATGTCAGAGACG AAAGATGTCCGAACGC 1 sample2.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gene_name gene_id ENSG00000223972.5 DDX11L1 ENSG00000227232.5 WASH7P ENSG00000278267.1 MIR6859-1 ENSG00000243485.5 MIR1302-2HG ENSG00000284332.1 MIR1302-2 Concatenate the anndatas \u00b6 1 2 3 concat_samples = sample1.concatenate( sample2, join='outer', batch_categories=['sample1', 'sample2'], index_unique='-' ) 1 concat_samples AnnData object with n_obs \u00d7 n_vars = 1705 \u00d7 60623 obs : 'batch' var : 'gene_name' 1 concat_samples.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gene_name gene_id ENSG00000223972.5 DDX11L1 ENSG00000227232.5 WASH7P ENSG00000278267.1 MIR6859-1 ENSG00000243485.5 MIR1302-2HG ENSG00000284332.1 MIR1302-2 1 concat_samples.obs .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } batch barcode AAACCTGAGCTGTTCA-sample1 sample1 AAACCTGCAATTCCTT-sample1 sample1 AAACCTGGTCTACCTC-sample1 sample1 AAACCTGGTTTCCACC-sample1 sample1 AAACCTGTCCTATGTT-sample1 sample1 ... ... TTTGCGCGTTGACGTT-sample2 sample2 TTTGCGCGTTGTCTTT-sample2 sample2 TTTGGTTGTCATGCAT-sample2 sample2 TTTGTCAGTGAGTGAC-sample2 sample2 TTTGTCATCTTCATGT-sample2 sample2 1705 rows \u00d7 1 columns 1","title":"Python"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#aggregating-multiple-count-matrices-tutorial","text":"This tutorial describes how to aggregate multiple count matrices by concatenating them into a single AnnData object with batch labels for different samples. This is similar to the Cell Ranger aggr function, however no normalization is performed. cellranger aggr is described at https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/using/aggregate For this tutorial we use dataset E-MTAB-6108. The notebook will take some time to run. To ensure that Google Colab does not shut down because of inactivity paste the following code into the console of this tab ( Cntrl [Mac: Cmd] + Option + i -> Console tab -> paste code -> press Enter ). 1 2 3 4 5 function ConnectButton (){ console . log ( \"Connect pushed\" ); document . querySelector ( \"#top-toolbar > colab-connect-button\" ). shadowRoot . querySelector ( \"#connect\" ). click () } setInterval ( ConnectButton , 60000 );","title":"Aggregating multiple count matrices tutorial"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#download-the-raw-data","text":"The raw data for E-MTAB-6108 is available at https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-6108/ 1 2 3 4 5 %%time !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample1_L005_R1.fastq.gz !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample1_L005_R2.fastq.gz !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample2_L005_R1.fastq.gz !wget -q https://www.ebi.ac.uk/arrayexpress/files/E-MTAB-6108/iPSC_RGCscRNAseq_Sample2_L005_R2.fastq.gz CPU times: user 5.42 s, sys: 839 ms, total: 6.25 s Wall time: 15min 30s","title":"Download the raw data"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#install-kb","text":"Install kb for running the kallisto|bustools workflow. 1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 77 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 34 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 50 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 6 . 8 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 56 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 6 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 50 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5 . 0 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone","title":"Install kb"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#download-a-pre-built-human-index","text":"Note: See this notebook for a tutorial on how to build custom transcriptome or RNA velocity indices. 1 2 %%time !kb ref -d human -i index.idx -g t2g.txt [ 2021 - 03 - 31 20 : 50 : 10 , 750 ] INFO Downloading files for human from https : // caltech . box . com / shared / static / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz to tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz 100 % 2.23 G / 2.23 G [ 01 : 35 < 00 : 00 , 25.0 MB / s ] [ 2021 - 03 - 31 20 : 51 : 47 , 840 ] INFO Extracting files from tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz CPU times : user 1.51 s , sys : 288 ms , total : 1.8 s Wall time : 2 min 15 s","title":"Download a pre-built human index"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#generate-an-rna-count-matrices-in-h5ad-format","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . The --filter flag is used to filter out barcodes with low UMI counts. This will generate two matrices, one in the counts_unfiltered directory and another in the counts_filtered directory. Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags.","title":"Generate an RNA count matrices in H5AD format"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#sample-1","text":"1 2 3 4 %%time !kb count -i index.idx -g t2g.txt -x 10xv2 -o sample1 --h5ad -t 2 --filter bustools \\ iPSC_RGCscRNAseq_Sample1_L005_R1.fastq.gz \\ iPSC_RGCscRNAseq_Sample1_L005_R2.fastq.gz [ 2021 - 03 - 31 20 : 52 : 24 , 861 ] INFO Using index index . idx to generate BUS file to sample1 from [ 2021 - 03 - 31 20 : 52 : 24 , 861 ] INFO iPSC_RGCscRNAseq_Sample1_L005_R1 . fastq . gz [ 2021 - 03 - 31 20 : 52 : 24 , 861 ] INFO iPSC_RGCscRNAseq_Sample1_L005_R2 . fastq . gz [ 2021 - 03 - 31 21 : 15 : 29 , 824 ] INFO Sorting BUS file sample1 / output . bus to sample1 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 16 : 21 , 667 ] INFO Whitelist not provided [ 2021 - 03 - 31 21 : 16 : 21 , 668 ] INFO Copying pre - packaged 10 XV2 whitelist to sample1 [ 2021 - 03 - 31 21 : 16 : 22 , 484 ] INFO Inspecting BUS file sample1 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 16 : 36 , 519 ] INFO Correcting BUS records in sample1 / tmp / output . s . bus to sample1 / tmp / output . s . c . bus with whitelist sample1 / 10 xv2_whitelist . txt [ 2021 - 03 - 31 21 : 16 : 46 , 573 ] INFO Sorting BUS file sample1 / tmp / output . s . c . bus to sample1 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 17 : 25 , 239 ] INFO Generating count matrix sample1 / counts_unfiltered / cells_x_genes from BUS file sample1 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 17 : 48 , 992 ] INFO Reading matrix sample1 / counts_unfiltered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 18 : 00 , 111 ] INFO Writing matrix to h5ad sample1 / counts_unfiltered / adata . h5ad [ 2021 - 03 - 31 21 : 18 : 00 , 914 ] INFO Filtering with bustools [ 2021 - 03 - 31 21 : 18 : 00 , 915 ] INFO Generating whitelist sample1 / filter_barcodes . txt from BUS file sample1 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 18 : 01 , 259 ] INFO Correcting BUS records in sample1 / output . unfiltered . bus to sample1 / tmp / output . unfiltered . c . bus with whitelist sample1 / filter_barcodes . txt [ 2021 - 03 - 31 21 : 18 : 09 , 292 ] INFO Sorting BUS file sample1 / tmp / output . unfiltered . c . bus to sample1 / output . filtered . bus [ 2021 - 03 - 31 21 : 18 : 46 , 457 ] INFO Generating count matrix sample1 / counts_filtered / cells_x_genes from BUS file sample1 / output . filtered . bus [ 2021 - 03 - 31 21 : 19 : 09 , 724 ] INFO Reading matrix sample1 / counts_filtered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 19 : 18 , 183 ] INFO Writing matrix to h5ad sample1 / counts_filtered / adata . h5ad CPU times : user 9.95 s , sys : 1.39 s , total : 11.3 s Wall time : 26 min 56 s","title":"Sample 1"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#sample-2","text":"1 2 3 4 %%time !kb count -i index.idx -g t2g.txt -x 10xv2 -o sample2 --h5ad -t 2 --filter bustools \\ iPSC_RGCscRNAseq_Sample2_L005_R1.fastq.gz \\ iPSC_RGCscRNAseq_Sample2_L005_R2.fastq.gz [ 2021 - 03 - 31 21 : 19 : 22 , 185 ] INFO Using index index . idx to generate BUS file to sample2 from [ 2021 - 03 - 31 21 : 19 : 22 , 185 ] INFO iPSC_RGCscRNAseq_Sample2_L005_R1 . fastq . gz [ 2021 - 03 - 31 21 : 19 : 22 , 185 ] INFO iPSC_RGCscRNAseq_Sample2_L005_R2 . fastq . gz [ 2021 - 03 - 31 21 : 37 : 11 , 095 ] INFO Sorting BUS file sample2 / output . bus to sample2 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 37 : 35 , 255 ] INFO Whitelist not provided [ 2021 - 03 - 31 21 : 37 : 35 , 255 ] INFO Copying pre - packaged 10 XV2 whitelist to sample2 [ 2021 - 03 - 31 21 : 37 : 35 , 379 ] INFO Inspecting BUS file sample2 / tmp / output . s . bus [ 2021 - 03 - 31 21 : 37 : 43 , 363 ] INFO Correcting BUS records in sample2 / tmp / output . s . bus to sample2 / tmp / output . s . c . bus with whitelist sample2 / 10 xv2_whitelist . txt [ 2021 - 03 - 31 21 : 37 : 47 , 960 ] INFO Sorting BUS file sample2 / tmp / output . s . c . bus to sample2 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 37 : 58 , 445 ] INFO Generating count matrix sample2 / counts_unfiltered / cells_x_genes from BUS file sample2 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 38 : 08 , 901 ] INFO Reading matrix sample2 / counts_unfiltered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 38 : 13 , 045 ] INFO Writing matrix to h5ad sample2 / counts_unfiltered / adata . h5ad [ 2021 - 03 - 31 21 : 38 : 13 , 797 ] INFO Filtering with bustools [ 2021 - 03 - 31 21 : 38 : 13 , 798 ] INFO Generating whitelist sample2 / filter_barcodes . txt from BUS file sample2 / output . unfiltered . bus [ 2021 - 03 - 31 21 : 38 : 13 , 965 ] INFO Correcting BUS records in sample2 / output . unfiltered . bus to sample2 / tmp / output . unfiltered . c . bus with whitelist sample2 / filter_barcodes . txt [ 2021 - 03 - 31 21 : 38 : 16 , 943 ] INFO Sorting BUS file sample2 / tmp / output . unfiltered . c . bus to sample2 / output . filtered . bus [ 2021 - 03 - 31 21 : 38 : 25 , 772 ] INFO Generating count matrix sample2 / counts_filtered / cells_x_genes from BUS file sample2 / output . filtered . bus [ 2021 - 03 - 31 21 : 38 : 33 , 900 ] INFO Reading matrix sample2 / counts_filtered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 38 : 36 , 553 ] INFO Writing matrix to h5ad sample2 / counts_filtered / adata . h5ad CPU times : user 7.29 s , sys : 1.04 s , total : 8.33 s Wall time : 19 min 17 s","title":"Sample 2"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#install-anndata","text":"1 !pip install --quiet anndata","title":"Install anndata"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#read-sample1-and-sample2-gene-counts-into-anndata","text":"1 2 3 import anndata sample1 = anndata.read_h5ad('sample1/counts_filtered/adata.h5ad') sample2 = anndata.read_h5ad('sample2/counts_filtered/adata.h5ad') 1 sample1 AnnData object with n_obs \u00d7 n_vars = 1424 \u00d7 60623 var : 'gene_name' 1 sample1.X <1424x60623 sparse matrix of type '<class 'numpy.float32'>' with 4829530 stored elements in Compressed Sparse Row format> 1 sample1.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } barcode AAACCTGAGCTGTTCA AAACCTGCAATTCCTT AAACCTGGTCTACCTC AAACCTGGTTTCCACC AAACCTGTCCTATGTT 1 sample1.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gene_name gene_id ENSG00000223972.5 DDX11L1 ENSG00000227232.5 WASH7P ENSG00000278267.1 MIR6859-1 ENSG00000243485.5 MIR1302-2HG ENSG00000284332.1 MIR1302-2 1 sample2 AnnData object with n_obs \u00d7 n_vars = 281 \u00d7 60623 var : 'gene_name' 1 sample2.X <281x60623 sparse matrix of type '<class 'numpy.float32'>' with 1282359 stored elements in Compressed Sparse Row format> 1 sample2.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } barcode AAACCTGAGACCACGA AAACCTGTCTGATACG AAACGGGAGTGTTGAA AAAGATGTCAGAGACG AAAGATGTCCGAACGC 1 sample2.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gene_name gene_id ENSG00000223972.5 DDX11L1 ENSG00000227232.5 WASH7P ENSG00000278267.1 MIR6859-1 ENSG00000243485.5 MIR1302-2HG ENSG00000284332.1 MIR1302-2","title":"Read sample1 and sample2 gene counts into anndata"},{"location":"tutorials/kb_aggregate/python/kb_aggregating_count_matrices.html#concatenate-the-anndatas","text":"1 2 3 concat_samples = sample1.concatenate( sample2, join='outer', batch_categories=['sample1', 'sample2'], index_unique='-' ) 1 concat_samples AnnData object with n_obs \u00d7 n_vars = 1705 \u00d7 60623 obs : 'batch' var : 'gene_name' 1 concat_samples.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gene_name gene_id ENSG00000223972.5 DDX11L1 ENSG00000227232.5 WASH7P ENSG00000278267.1 MIR6859-1 ENSG00000243485.5 MIR1302-2HG ENSG00000284332.1 MIR1302-2 1 concat_samples.obs .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } batch barcode AAACCTGAGCTGTTCA-sample1 sample1 AAACCTGCAATTCCTT-sample1 sample1 AAACCTGGTCTACCTC-sample1 sample1 AAACCTGGTTTCCACC-sample1 sample1 AAACCTGTCCTATGTT-sample1 sample1 ... ... TTTGCGCGTTGACGTT-sample2 sample2 TTTGCGCGTTGTCTTT-sample2 sample2 TTTGGTTGTCATGCAT-sample2 sample2 TTTGTCAGTGAGTGAC-sample2 sample2 TTTGTCATCTTCATGT-sample2 sample2 1705 rows \u00d7 1 columns 1","title":"Concatenate the anndatas"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html","text":"Analysis of single-cell RNA-seq data: building and annotating an atlas \u00b6 This R notebook pre-processes the pbmc_1k v3 dataset from 10X Genomics with kallisto and bustools using kb , and then performs an analysis of the cell types and their marker genes. The notebook was written by A. Sina Booeshaghi, Lambda Lu and Lior Pachter and is based on three noteboks: - The kallisto | bustools Introduction to single-cell RNA-seq I notebook. - The kallisto | bustools Introduction to single-cell RNA-seq II notebook. - The Seurat Guided Clustering Tutorial . If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Stuart, Butler et al. Comprehensive Integration of Single-cell Data. Cell (2019). doi:10.1016/j.cell.2019.05.031 A Python notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses. Setup \u00b6 1 2 # This is used to time the running of the notebook start_time <- Sys.time () Install R packages \u00b6 A large fraction of the running time of this notebook is in installing the Seurat R package, since it has lots of dependencies and many of them use Rcpp which results in the need to compile lots of C++ code. Compilation is required because CRAN does not distribute binaries for Linux, which is the operating system here. 1 2 3 system.time ({ install.packages ( \"Seurat\" , Ncpus = 2 ) }) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) also installing the dependencies \u2018 bitops \u2019 , \u2018 gtools \u2019 , \u2018 caTools \u2019 , \u2018 sass \u2019 , \u2018 jquerylib \u2019 , \u2018 sitmo \u2019 , \u2018 globals \u2019 , \u2018 listenv \u2019 , \u2018 parallelly \u2019 , \u2018 plyr \u2019 , \u2018 zoo \u2019 , \u2018 data . table \u2019 , \u2018 gplots \u2019 , \u2018 reshape2 \u2019 , \u2018 gridExtra \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 httpuv \u2019 , \u2018 xtable \u2019 , \u2018 sourcetools \u2019 , \u2018 bslib \u2019 , \u2018 spatstat . data \u2019 , \u2018 spatstat . utils \u2019 , \u2018 spatstat . sparse \u2019 , \u2018 abind \u2019 , \u2018 tensor \u2019 , \u2018 goftest \u2019 , \u2018 deldir \u2019 , \u2018 polyclip \u2019 , \u2018 FNN \u2019 , \u2018 RSpectra \u2019 , \u2018 dqrng \u2019 , \u2018 cowplot \u2019 , \u2018 fitdistrplus \u2019 , \u2018 future \u2019 , \u2018 future . apply \u2019 , \u2018 ggrepel \u2019 , \u2018 ggridges \u2019 , \u2018 ica \u2019 , \u2018 igraph \u2019 , \u2018 irlba \u2019 , \u2018 leiden \u2019 , \u2018 lmtest \u2019 , \u2018 matrixStats \u2019 , \u2018 miniUI \u2019 , \u2018 patchwork \u2019 , \u2018 pbapply \u2019 , \u2018 plotly \u2019 , \u2018 png \u2019 , \u2018 RANN \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 reticulate \u2019 , \u2018 ROCR \u2019 , \u2018 Rtsne \u2019 , \u2018 scattermore \u2019 , \u2018 sctransform \u2019 , \u2018 SeuratObject \u2019 , \u2018 shiny \u2019 , \u2018 spatstat . core \u2019 , \u2018 spatstat . geom \u2019 , \u2018 uwot \u2019 , \u2018 RcppEigen \u2019 , \u2018 RcppProgress \u2019 user system elapsed 1923.767 192.391 1168.018 The package installation took 20 minutes (elapsed) which is 40% of the running time of the entire notebook. The user time is nearly twice the elapsed time here because 2 cores were used to install all those packages. Install kb-python \u00b6 1 2 # Install kb (includes installing kallisto and bustools) system ( \"pip3 install kb-python\" , intern = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'Collecting kb-python' ' Downloading https://files.pythonhosted.org/packages/29/94/855ed1c11110a65a466cd95a6fef64958bad055f2678270b80a32e42cdb1/kb_python-0.25.1-py3-none-any.whl (59.1MB)' 'Requirement already satisfied: tqdm>=4.39.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (4.41.1)' 'Collecting loompy>=3.0.6' ' Downloading https://files.pythonhosted.org/packages/36/52/74ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9/loompy-3.0.6.tar.gz (41kB)' 'Requirement already satisfied: nbformat>=4.4.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (5.1.2)' 'Requirement already satisfied: h5py>=2.10.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (2.10.0)' 'Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (2.23.0)' 'Requirement already satisfied: nbconvert>=5.6.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (5.6.1)' 'Requirement already satisfied: numpy>=1.17.2 in /usr/local/lib/python3.7/dist-packages (from kb-python) (1.19.5)' 'Collecting anndata>=0.6.22.post1' ' Downloading https://files.pythonhosted.org/packages/81/b1/743cc79f89d9db6dccbfb7e6000795acb218a6c6320b7a2337cad99bd047/anndata-0.7.5-py3-none-any.whl (119kB)' 'Collecting scanpy>=1.4.4.post1' ' Downloading https://files.pythonhosted.org/packages/c1/f4/a7848e6f990cf5bcbedade93702baf3e99ae704714563fe9bdceb3d597c7/scanpy-1.7.1-py3-none-any.whl (10.3MB)' 'Requirement already satisfied: Jinja2>2.10.1 in /usr/local/lib/python3.7/dist-packages (from kb-python) (2.11.3)' 'Collecting plotly>=4.5.0' ' Downloading https://files.pythonhosted.org/packages/1f/f6/bd3c17c8003b6641df1228e80e1acac97ed8402635e46c2571f8e1ef63af/plotly-4.14.3-py2.py3-none-any.whl (13.2MB)' 'Requirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.7/dist-packages (from kb-python) (0.22.2.post1)' 'Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (1.4.1)' 'Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (54.2.0)' 'Requirement already satisfied: numba in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (0.51.2)' 'Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (7.1.2)' 'Collecting numpy-groupies' ' Downloading https://files.pythonhosted.org/packages/99/eb/fc72b507219957cffdf2c5952e396cc04a30c2223e2fd789f4a744ffc52f/numpy_groupies-0.9.13.tar.gz (109kB)' 'Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (2.6.0)' 'Requirement already satisfied: traitlets>=4.1 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (5.0.5)' 'Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (4.7.1)' 'Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (0.2.0)' 'Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from h5py>=2.10.0->kb-python) (1.15.0)' 'Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (1.24.3)' 'Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (2.10)' 'Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (2020.12.5)' 'Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (3.0.4)' 'Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.3)' 'Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (2.6.1)' 'Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (3.3.0)' 'Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (1.4.3)' 'Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.4.4)' 'Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.8.4)' 'Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.7.1)' 'Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (20.9)' 'Requirement already satisfied: importlib-metadata>=0.7; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (3.8.1)' 'Requirement already satisfied: pandas!=1.1,>=1.0 in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (1.1.5)' 'Requirement already satisfied: natsort in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (5.5.0)' 'Collecting umap-learn>=0.3.10' ' Downloading https://files.pythonhosted.org/packages/75/69/85e7f950bb75792ad5d666d86c5f3e62eedbb942848e7e3126513af9999c/umap-learn-0.5.1.tar.gz (80kB)' 'Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (1.0.1)' 'Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (0.11.1)' 'Requirement already satisfied: statsmodels>=0.10.0rc2 in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (0.10.2)' 'Requirement already satisfied: patsy in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (0.5.1)' 'Requirement already satisfied: matplotlib>=3.1.2 in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (3.2.2)' 'Collecting sinfo' ' Downloading https://files.pythonhosted.org/packages/e1/4c/aef8456284f1a1c3645b938d9ca72388c9c4878e6e67b8a349c7d22fac78/sinfo-0.3.1.tar.gz' 'Collecting legacy-api-wrap' ' Downloading https://files.pythonhosted.org/packages/a4/68/da997bc56bb69dcdcee4054f0bc42266909307b905389fbc54c9158f42da/legacy_api_wrap-1.2-py3-none-any.whl' 'Requirement already satisfied: tables in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (3.4.4)' 'Requirement already satisfied: networkx>=2.3 in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (2.5)' 'Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2>2.10.1->kb-python) (1.1.1)' 'Requirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.7/dist-packages (from plotly>=4.5.0->kb-python) (1.3.3)' 'Requirement already satisfied: llvmlite<0.35,>=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba->loompy>=3.0.6->kb-python) (0.34.0)' 'Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert>=5.6.0->kb-python) (0.5.1)' 'Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->anndata>=0.6.22.post1->kb-python) (2.4.7)' 'Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.7; python_version < \"3.8\"->anndata>=0.6.22.post1->kb-python) (3.7.4.3)' 'Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.7; python_version < \"3.8\"->anndata>=0.6.22.post1->kb-python) (3.4.1)' 'Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas!=1.1,>=1.0->anndata>=0.6.22.post1->kb-python) (2.8.1)' 'Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas!=1.1,>=1.0->anndata>=0.6.22.post1->kb-python) (2018.9)' 'Collecting pynndescent>=0.5' ' Downloading https://files.pythonhosted.org/packages/af/65/8189298dd3a05bbad716ee8e249764ff8800e365d8dc652ad2192ca01b4a/pynndescent-0.5.2.tar.gz (1.1MB)' 'Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.2->scanpy>=1.4.4.post1->kb-python) (0.10.0)' 'Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.2->scanpy>=1.4.4.post1->kb-python) (1.3.1)' 'Collecting stdlib_list' ' Downloading https://files.pythonhosted.org/packages/7a/b1/52f59dcf31ead2f0ceff8976288449608d912972b911f55dff712cef5719/stdlib_list-0.8.0-py3-none-any.whl (63kB)' 'Collecting get-version>=2.0.4' ' Downloading https://files.pythonhosted.org/packages/23/48/7610e884e62fff2183e7bc8592397c39a020267fb5147905fcd3f9cc820c/get_version-2.1-py3-none-any.whl (43kB)' 'Requirement already satisfied: numexpr>=2.5.2 in /usr/local/lib/python3.7/dist-packages (from tables->scanpy>=1.4.4.post1->kb-python) (2.7.3)' 'Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from networkx>=2.3->scanpy>=1.4.4.post1->kb-python) (4.4.2)' 'Building wheels for collected packages: loompy, numpy-groupies, umap-learn, sinfo, pynndescent' ' Building wheel for loompy (setup.py): started' ' Building wheel for loompy (setup.py): finished with status \\'done\\'' ' Created wheel for loompy: filename=loompy-3.0.6-cp37-none-any.whl size=47896 sha256=9a9ab62e41414913f9bbfb2eef13596a38bc9dd39316cabab892f51143ed4d10' ' Stored in directory: /root/.cache/pip/wheels/f9/a4/90/5a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9' ' Building wheel for numpy-groupies (setup.py): started' ' Building wheel for numpy-groupies (setup.py): finished with status \\'done\\'' ' Created wheel for numpy-groupies: filename=numpy_groupies-0.9.13-cp37-none-any.whl size=24068 sha256=bb4d7f7f96af13b58c827bf94f338dd2559b83522f750c17546667d33088ca2e' ' Stored in directory: /root/.cache/pip/wheels/ef/97/d7/270bc85eb8b1b84629caac97a3900bff23edb7f834f6ed729e' ' Building wheel for umap-learn (setup.py): started' ' Building wheel for umap-learn (setup.py): finished with status \\'done\\'' ' Created wheel for umap-learn: filename=umap_learn-0.5.1-cp37-none-any.whl size=76569 sha256=627ba759b3e6d1787390e59be46a8ee88ea2f8e3961907069df003122d8e052c' ' Stored in directory: /root/.cache/pip/wheels/ad/df/d5/a3691296ff779f25cd1cf415a3af954b987fb53111e3392cf4' ' Building wheel for sinfo (setup.py): started' ' Building wheel for sinfo (setup.py): finished with status \\'done\\'' ' Created wheel for sinfo: filename=sinfo-0.3.1-cp37-none-any.whl size=7012 sha256=0a7ca4b4b981f9ff8c0ebc0f677119dfa8e32cb5746fca18b261ae01f0f18e7e' ' Stored in directory: /root/.cache/pip/wheels/11/f0/23/347d6d8e59787c2bc272162d18223dc3b45bd6dc40aceee6af' ' Building wheel for pynndescent (setup.py): started' ' Building wheel for pynndescent (setup.py): finished with status \\'done\\'' ' Created wheel for pynndescent: filename=pynndescent-0.5.2-cp37-none-any.whl size=51351 sha256=46d4d6df8cbd2dabd69c0f051626ff9b8978fb9141ff68278e7c7d83ec086277' ' Stored in directory: /root/.cache/pip/wheels/ba/52/4e/4c28d04d144a28f89e2575fb63628df6e6d49b56c5ddd0c74e' 'Successfully built loompy numpy-groupies umap-learn sinfo pynndescent' 'Installing collected packages: numpy-groupies, loompy, anndata, pynndescent, umap-learn, stdlib-list, sinfo, get-version, legacy-api-wrap, scanpy, plotly, kb-python' ' Found existing installation: plotly 4.4.1' ' Uninstalling plotly-4.4.1:' ' Successfully uninstalled plotly-4.4.1' 'Successfully installed anndata-0.7.5 get-version-2.1 kb-python-0.25.1 legacy-api-wrap-1.2 loompy-3.0.6 numpy-groupies-0.9.13 plotly-4.14.3 pynndescent-0.5.2 scanpy-1.7.1 sinfo-0.3.1 stdlib-list-0.8.0 umap-learn-0.5.1' Download the data \u00b6 1 2 3 # Download the data from the 10x website system ( \"wget http://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_v3/pbmc_1k_v3_fastqs.tar\" , intern = TRUE ) system ( \"tar -xvf pbmc_1k_v3_fastqs.tar\" , intern = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'pbmc_1k_v3_fastqs/' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_I1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_I1_001.fastq.gz' Download an index \u00b6 1 system ( \"kb ref -d human -i index.idx -g t2g.txt -f1 transcriptome.fasta\" , intern = TRUE ) Pseudoalignment and counting \u00b6 Run kallisto and bustools \u00b6 1 system ( \"kb count -i index.idx -g t2g.txt -x 10xv3 -o output --filter bustools -t 2 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz\" , intern = TRUE ) Basic QC \u00b6 1 2 3 4 5 library ( Seurat ) library ( Matrix ) library ( tidyverse ) library ( patchwork ) theme_set ( theme_bw ()) Attaching SeuratObject Warning message in system(\"timedatectl\", intern = TRUE): \u201crunning command 'timedatectl' had status 1\u201d Registered S3 method overwritten by 'cli': method from print.boxx spatstat.geom \u2500\u2500 \u001b[1mAttaching packages\u001b[22m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3.0 \u2500\u2500 \u001b[32m\u2714\u001b[39m \u001b[34mggplot2\u001b[39m 3.3.3 \u001b[32m\u2714\u001b[39m \u001b[34mpurrr \u001b[39m 0.3.4 \u001b[32m\u2714\u001b[39m \u001b[34mtibble \u001b[39m 3.1.0 \u001b[32m\u2714\u001b[39m \u001b[34mdplyr \u001b[39m 1.0.5 \u001b[32m\u2714\u001b[39m \u001b[34mtidyr \u001b[39m 1.1.3 \u001b[32m\u2714\u001b[39m \u001b[34mstringr\u001b[39m 1.4.0 \u001b[32m\u2714\u001b[39m \u001b[34mreadr \u001b[39m 1.4.0 \u001b[32m\u2714\u001b[39m \u001b[34mforcats\u001b[39m 0.5.1 \u2500\u2500 \u001b[1mConflicts\u001b[22m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts() \u2500\u2500 \u001b[31m\u2716\u001b[39m \u001b[34mtidyr\u001b[39m::\u001b[32mexpand()\u001b[39m masks \u001b[34mMatrix\u001b[39m::expand() \u001b[31m\u2716\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter() \u001b[31m\u2716\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m masks \u001b[34mstats\u001b[39m::lag() \u001b[31m\u2716\u001b[39m \u001b[34mtidyr\u001b[39m::\u001b[32mpack()\u001b[39m masks \u001b[34mMatrix\u001b[39m::pack() \u001b[31m\u2716\u001b[39m \u001b[34mtidyr\u001b[39m::\u001b[32munpack()\u001b[39m masks \u001b[34mMatrix\u001b[39m::unpack() 1 list.files ( \".\" , recursive = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'index.idx' 'output/10xv3_whitelist.txt' 'output/counts_filtered/cells_x_genes.barcodes.txt' 'output/counts_filtered/cells_x_genes.genes.txt' 'output/counts_filtered/cells_x_genes.mtx' 'output/counts_unfiltered/cells_x_genes.barcodes.txt' 'output/counts_unfiltered/cells_x_genes.genes.txt' 'output/counts_unfiltered/cells_x_genes.mtx' 'output/filter_barcodes.txt' 'output/inspect.json' 'output/kb_info.json' 'output/matrix.ec' 'output/output.bus' 'output/output.filtered.bus' 'output/output.unfiltered.bus' 'output/run_info.json' 'output/transcripts.txt' 'pbmc_1k_v3_fastqs.tar' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_I1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_I1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz' 'sample_data/anscombe.json' 'sample_data/california_housing_test.csv' 'sample_data/california_housing_train.csv' 'sample_data/mnist_test.csv' 'sample_data/mnist_train_small.csv' 'sample_data/README.md' 't2g.txt' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Slightly modified from BUSpaRse, just to avoid installing a few dependencies not used here read_count_output <- function ( dir , name ) { dir <- normalizePath ( dir , mustWork = TRUE ) m <- readMM ( paste0 ( dir , \"/\" , name , \".mtx\" )) m <- Matrix :: t ( m ) m <- as ( m , \"dgCMatrix\" ) # The matrix read has cells in rows ge <- \".genes.txt\" genes <- readLines ( file ( paste0 ( dir , \"/\" , name , ge ))) barcodes <- readLines ( file ( paste0 ( dir , \"/\" , name , \".barcodes.txt\" ))) colnames ( m ) <- barcodes rownames ( m ) <- genes return ( m ) } 1 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" ) 1 dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 60623 259615 Test for library saturation \u00b6 1 2 3 tot_counts <- colSums ( res_mat ) lib_sat <- tibble ( nCount = tot_counts , nGene = colSums ( res_mat > 0 )) 1 2 3 4 options ( repr.plot.width = 9 , repr.plot.height = 6 ) ggplot ( lib_sat , aes ( nCount , nGene )) + geom_point ( alpha = 0.1 , size = 0.5 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d Warning message: \u201cTransformation introduced infinite values in continuous y-axis\u201d This plot is very misleading, as even the small alpha can't accurately show how many points are stacked at one location. 1 2 3 4 ggplot ( lib_sat , aes ( nCount , nGene )) + geom_bin2d ( bins = 50 ) + scale_fill_distiller ( palette = \"Blues\" , direction = 1 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d Warning message: \u201cTransformation introduced infinite values in continuous y-axis\u201d Warning message: \u201cRemoved 19583 rows containing non-finite values (stat_bin2d).\u201d Lots of points are piled at around 1 gene and 1 count, and those with 0 gene or count were removed for introducing -Inf in log transform. These correspond to empty or near empty droplets. Examine the knee plot \u00b6 The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 43.64 6.00 60120.00 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 #' @rdname knee_plot #' @param mat Gene count matrix, a dgCMatrix. #' @return `get_knee_df` returns a tibble with two columns: \\code{total} for #' total UMI counts for each barcode, and \\code{rank} for rank of the total #' counts, with number 1 for the barcode with the most counts. #' @export #' @importFrom dplyr row_number desc arrange #' @importFrom Matrix colSums get_knee_df <- function ( mat ) { total <- rank <- NULL tibble ( total = Matrix :: colSums ( mat ), rank = row_number ( desc ( total ))) %>% distinct () %>% dplyr :: filter ( total > 0 ) %>% arrange ( rank ) } #' @rdname knee_plot #' @param df The data frame from \\code{\\link{get_knee_df}}. #' @param lower Minimum total UMI counts for barcode for it to be considered #' when calculating the inflection point; this helps to avoid the noisy part of #' the curve for barcodes with very few counts. #' @return `get_inflection` returns a \\code{numeric(1)} for the total UMI count #' at the inflection point. #' @note Code in part adapted from \\code{barcodeRanks} from \\code{DropetUtils}. #' @export #' @importFrom dplyr transmute #' get_inflection <- function ( df , lower = 100 ) { log_total <- log_rank <- total <- NULL df_fit <- df %>% dplyr :: filter ( total > lower ) %>% transmute ( log_total = log10 ( total ), log_rank = log10 ( rank )) d1n <- diff ( df_fit $ log_total ) / diff ( df_fit $ log_rank ) right.edge <- which.min ( d1n ) 10 ^ ( df_fit $ log_total [ right.edge ]) } #' Plot the transposed knee plot and inflection point #' #' Plot a transposed knee plot, showing the inflection point and #' the number of remaining cells after inflection point filtering. It's #' transposed since it's more generalizable to multi-modal data. Taken from the #' BUSpaRse package. #' #' @param df The data frame from \\code{\\link{get_knee_df}}. #' @param inflection Output of \\code{\\link{get_inflection}}. #' @return `knee_plot` returns a \\code{ggplot2} object. #' @export #' @importFrom ggplot2 ggplot aes geom_path geom_vline geom_hline #' scale_x_log10 scale_y_log10 labs annotation_logticks geom_text knee_plot <- function ( df , inflection ) { total <- rank_cutoff <- NULL annot <- tibble ( inflection = inflection , rank_cutoff = max ( df $ rank [ df $ total > inflection ])) ggplot ( df , aes ( total , rank )) + geom_path () + geom_vline ( aes ( xintercept = inflection ), data = annot , linetype = 2 , color = \"gray40\" ) + geom_hline ( aes ( yintercept = rank_cutoff ), data = annot , linetype = 2 , color = \"gray40\" ) + geom_text ( aes ( inflection , rank_cutoff , label = paste ( rank_cutoff , \"'cells'\" )), data = annot , vjust = 1 ) + scale_x_log10 () + scale_y_log10 () + labs ( y = \"Rank\" , x = \"Total UMIs\" ) + annotation_logticks () } 1 2 3 4 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_df <- get_knee_df ( res_mat ) inflection <- get_inflection ( knee_df ) knee_plot ( knee_df , inflection ) Analysis \u00b6 We begin by asking for genes with the highest proportions in droplets (prior to filtering out empty droplets). 1 2 tr2g <- read_tsv ( \"t2g.txt\" , col_names = c ( \"transcript\" , \"gene\" , \"gene_name\" )) tr2g <- distinct ( tr2g [, c ( \"gene\" , \"gene_name\" )]) \u001b[36m\u2500\u2500\u001b[39m \u001b[1m\u001b[1mColumn specification\u001b[1m\u001b[22m \u001b[36m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[39m cols( transcript = \u001b[31mcol_character()\u001b[39m, gene = \u001b[31mcol_character()\u001b[39m, gene_name = \u001b[31mcol_character()\u001b[39m ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 plot_pct_genes <- function ( mat , tr2g , top_n = 20 , symbol = \"ensembl\" ) { pct_tx <- rowSums ( mat ) gs <- rownames ( mat )[ order ( - pct_tx )] df <- as.data.frame ( t ( mat [ gs [ 1 : 20 ],])) df <- df %>% mutate_all ( function ( x ) x / colSums ( mat )) %>% pivot_longer ( everything (), names_to = \"gene\" ) if ( symbol == \"ensembl\" ) { df <- left_join ( df , tr2g , by = \"gene\" ) } else { df <- rename ( df , gene_name = gene ) } df %>% mutate ( gene = fct_reorder ( gene_name , value , .fun = median )) %>% ggplot ( aes ( gene , value )) + geom_boxplot () + labs ( x = \"\" , y = \"Proportion of total counts\" ) + coord_flip () } 1 2 options ( repr.plot.width = 6 , repr.plot.height = 10 ) plot_pct_genes ( res_mat , tr2g ) Warning message: \u201cRemoved 391660 rows containing non-finite values (stat_boxplot).\u201d For many barcodes, the top genes by proportion of all counts are ribosomal or mitochondrial genes. Also, the proportions plotted above seem to have some discrete values; this effect is a result of computing fractions with small denominator, which happens when droplets produce very few UMI counts. Filter \u00b6 1 2 3 res_mat <- res_mat [, tot_counts > inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 31861 1322 1 2 # Convert from Ensembl gene ID to gene symbol rownames ( res_mat ) <- tr2g $ gene_name [ match ( rownames ( res_mat ), tr2g $ gene )] 1 ( pbmc <- CreateSeuratObject ( counts = res_mat , project = \"pbmc1k\" , min.cells = 3 , min.features = 200 )) Warning message : \u201c Non - unique features ( rownames ) present in the input matrix , making unique \u201d Warning message : \u201c Feature names cannot have underscores ( '_' ), replacing with dashes ( '-' ) \u201d An object of class Seurat 25966 features across 1208 samples within 1 assay Active assay : RNA ( 25966 features , 0 variable features ) The steps below constitute a standard analysis worklow for single-cell RNA-seq data. 1 2 # The [[ operator can add columns to object metadata. This is a great place to stash QC stats pbmc [[ \"percent.mt\" ]] <- PercentageFeatureSet ( pbmc , pattern = \"^MT-\" ) The number of unique genes and total molecules are automatically calculated when running the CreateSeuratObject command. The associated data is stored in the object metadata. 1 2 # Show QC metrics for the first 5 cells head ( pbmc @ meta.data , 5 ) A data.frame: 5 \u00d7 4 orig.ident nCount_RNA nFeature_RNA percent.mt <fct> <dbl> <int> <dbl> AAACCCAAGGAGAGTA pbmc1k 9289 3198 11.271396 AAACGCTTCAGCCCAG pbmc1k 6483 2513 8.252352 AAAGAACAGACGACTG pbmc1k 5011 2082 6.166434 AAAGAACCAATGGCAG pbmc1k 3264 1555 6.893382 AAAGAACGTCTGCAAT pbmc1k 7488 2508 6.610577 Next, we visualize some QC metrics and use the results to set filtering criteria. 1 2 3 # Visualize QC metrics as a violin plot options ( repr.plot.width = 12 , repr.plot.height = 6 ) VlnPlot ( pbmc , features = c ( \"nFeature_RNA\" , \"nCount_RNA\" , \"percent.mt\" ), ncol = 3 ) 1 2 3 4 5 # FeatureScatter is typically used to visualize feature-feature relationships, but can be used # for anything calculated by the object, i.e. columns in object metadata, PC scores etc. plot1 <- FeatureScatter ( pbmc , feature1 = \"nCount_RNA\" , feature2 = \"percent.mt\" ) plot2 <- FeatureScatter ( pbmc , feature1 = \"nCount_RNA\" , feature2 = \"nFeature_RNA\" ) plot1 + plot2 1 pbmc <- subset ( pbmc , subset = nFeature_RNA > 200 & nFeature_RNA < 6500 & percent.mt < 20 ) Normalize \u00b6 After removing unwanted cells from the dataset, the next step is to normalize the data. A standard choice is LogNormalize which normalizes the UMI counts for each cell by the total counts, multiplies this by a scale factor (10,000 by default), and finally log-transforms the result. We recommend the preprint - Breda, J., Zavolan, M. and van Nimwegen, E. Bayesian inference of the gene expression states of single cells from scRNA-seq data. bioRxiv (2019). doi.org/10.1101/2019.12.28.889956 for a thorough discussion of normalization. 1 pbmc <- NormalizeData ( pbmc , normalization.method = \"LogNormalize\" , scale.factor = 10000 ) For clarity, in this previous line of code (and in future commands), we provide the default values for certain parameters in the function call. However, this isn\u2019t required and the same behavior can be achieved with: 1 # pbmc <- NormalizeData(pbmc) Highly expressed genes \u00b6 To identify a subset of genes that exhibit high cell-to-cell variation in the dataset we apply a procedure implemented in the FindVariableFeatures function. By default, it returns 2,000 genes per dataset. These will be used in downstream analysis. Seurat documentation describes the method used to find highly variable genes here as such: First, fits a line to the relationship of log(variance) and log(mean) using local polynomial regression (loess). Then standardizes the feature values using the observed mean and expected variance (given by the fitted line). Feature variance is then calculated on the standardized values after clipping to a maximum (see clip.max parameter). 1 2 options ( repr.plot.width = 6 , repr.plot.height = 10 ) plot_pct_genes ( GetAssayData ( pbmc , slot = \"counts\" ), tr2g , symbol = \"symbol\" ) 1 2 3 4 5 6 7 8 9 options ( repr.plot.width = 9 , repr.plot.height = 6 ) pbmc <- FindVariableFeatures ( pbmc , selection.method = \"vst\" , nfeatures = 2000 ) # Identify the 10 most highly variable genes top10 <- head ( VariableFeatures ( pbmc ), 10 ) # plot variable features with and without labels plot1 <- VariableFeaturePlot ( pbmc , log = FALSE ) LabelPoints ( plot = plot1 , points = top10 , repel = TRUE ) When using repel , set xnudge and ynudge to 0 for optimal results Scaling the data \u00b6 Next, we apply a linear transformation (\u2018scaling\u2019) that is a standard pre-processing step prior to dimensional reduction techniques like PCA. The ScaleData function shifts the expression of each gene, so that the mean expression across cells is 0 and the variance across cells is 1 This step gives equal weight to genes in downstream analyses, so that highly-expressed genes do not dominate. 1 2 all.genes <- rownames ( pbmc ) pbmc <- ScaleData ( pbmc , features = all.genes ) Centering and scaling data matrix We apply this only to the genes identified as highly variable: 1 # pbmc <- ScaleData(pbmc) The scaling does not affect PCA or clustering results. However, Seurat heatmaps (produced as shown below with DoHeatmap) require genes in the heatmap to be scaled so that highly-expressed genes don\u2019t dominate. To make sure we don\u2019t leave any genes out of the heatmap later, we are scaling all genes in this tutorial. In Seurat v2 we also use the ScaleData function to remove unwanted sources of variation from a single-cell dataset. For example, we could \u2018regress out\u2019 heterogeneity associated with (for example) cell cycle stage, or mitochondrial contamination. These features are still supported in ScaleData in Seurat v3, i.e.: 1 # pbmc <- ScaleData(pbmc, vars.to.regress = \"percent.mt\") Principal component analysis \u00b6 Next we perform PCA on the scaled data. By default, only the previously determined variable features are used as input. 1 pbmc <- RunPCA ( pbmc , features = VariableFeatures ( object = pbmc )) PC_ 1 Positive: S100A9, FCN1, MNDA, FGL2, S100A8, CTSS, CST3, SERPINA1, PSAP, NCF2 LYZ, AIF1, TYMP, VCAN, KLF4, GRN, CSTA, MPEG1, CPVL, CLEC7A LST1, MS4A6A, CD14, LGALS1, S100A12, TYROBP, TNFAIP2, FCER1G, CD36, CSF3R Negative: LTB, TRAC, TRBC2, CD3D, IL32, BCL11B, CD3G, IL7R, TCF7, CD69 ISG20, CD247, CD27, SPOCK2, ARL4C, CD7, CD2, GZMM, TRBC1, CD6 PRKCQ-AS1, NOSIP, AC058791.1, RORA, CTSW, CCR7, AQP3, ITM2A, PEBP1, SAMD3 PC_ 2 Positive: CD79A, MS4A1, IGHM, BANK1, BCL11A, LINC00926, CD79B, TNFRSF13C, IGHD, CD74 HLA-DQB1, CD22, HLA-DQA1, HLA-DRB1, HLA-DRA, HLA-DPA1, HLA-DPB1, TCL1A, FCER2, AFF3 PAX5, IGKC, VPREB3, SPIB, MEF2C, RALGPS2, HVCN1, FCRL1, HLA-DOB, HLA-DMA Negative: IL32, CD247, GZMM, CD7, CTSW, CD3D, GZMA, NKG7, S100A4, TRAC ANXA1, BCL11B, PRF1, CST7, KLRB1, CD3G, IL7R, ARL4C, SAMD3, CD2 TRBC1, CCL5, KLRG1, A2M, MT2A, RORA, ITGB2, GNLY, TCF7, MATK PC_ 3 Positive: CAVIN2, GP9, PF4, GNG11, PPBP, CD9, TREML1, CMTM5, TUBB1, SPARC CLU, HIST1H2AC, ACRBP, PTCRA, PRKAR2B, NRGN, ITGA2B, CTTN, TMEM40, TSC22D1 AC147651.1, GMPR, PF4V1, CLDN5, CA2, MAP3K7CL, PGRMC1, CXCR2P1, HIST1H3H, MMD Negative: CYBA, VIM, FOS, ITGB2, NEAT1, HNRNPU, CALR, LSP1, LCP1, DUSP1 S100A10, S100A6, KLF6, CD74, PLAC8, LTB, ZFP36L1, S100A4, IFITM2, ISG20 SPCS1, SEC61B, ANXA1, MCL1, EVI2B, HSPA5, APOBEC3G, HSP90B1, PEBP1, AC020916.1 PC_ 4 Positive: LEF1, TCF7, IL7R, MAL, CCR7, BCL11B, CD3D, NOSIP, LTB, CD3G TRAC, CAMK4, NELL2, PASK, CD27, EGR1, SLC2A3, RGCC, FHIT, RGS10 CD6, CD40LG, VIM, INPP4B, ADTRP, TRAT1, NOG, TSHZ2, PRKCQ-AS1, TESPA1 Negative: GZMB, GNLY, CLIC3, NKG7, KLRF1, PRF1, CST7, SPON2, FGFBP2, KLRD1 GZMA, ADGRG1, CCL4, TRDC, HOPX, MATK, IL2RB, TTC38, APOBEC3G, CTSW TBX21, RHOC, C12orf75, S1PR5, FCGR3A, SH2D1B, PTGDR, MYOM2, CMC1, GZMH PC_ 5 Positive: LILRA4, SCT, PACSIN1, SMPD3, LRRC26, SERPINF1, TPM2, AL096865.1, IL3RA, DNASE1L3 TNFRSF21, CUX2, PLD4, ITM2C, GAS6, MYBL2, CLEC4C, PPP1R14B, EPHA2, UGCG PPP1R14B-AS1, CUEDC1, LAMP5, RUNX2, PPM1J, SERPINF2, NRP1, DERL3, LINC02812, CIB2 Negative: GNLY, FGFBP2, KLRF1, PRF1, NKG7, CCL4, CST7, KLRD1, MS4A1, IGHD LINC00926, ADGRG1, CD79B, CD79A, TRDC, CD22, GZMA, TBX21, SPON2, TNFRSF13C MATK, FCER2, IL2RB, PAX5, MYOM2, HOPX, S1PR5, TTC38, SH2D1B, BANK1 Seurat provides several useful ways of visualizing both cells and features that define the PCA, including VizDimReduction, DimPlot, and DimHeatmap 1 2 # Examine and visualize PCA results a few different ways print ( pbmc [[ \"pca\" ]], dims = 1 : 5 , nfeatures = 5 ) PC_ 1 Positive: S100A9, FCN1, MNDA, FGL2, S100A8 Negative: LTB, TRAC, TRBC2, CD3D, IL32 PC_ 2 Positive: CD79A, MS4A1, IGHM, BANK1, BCL11A Negative: IL32, CD247, GZMM, CD7, CTSW PC_ 3 Positive: CAVIN2, GP9, PF4, GNG11, PPBP Negative: CYBA, VIM, FOS, ITGB2, NEAT1 PC_ 4 Positive: LEF1, TCF7, IL7R, MAL, CCR7 Negative: GZMB, GNLY, CLIC3, NKG7, KLRF1 PC_ 5 Positive: LILRA4, SCT, PACSIN1, SMPD3, LRRC26 Negative: GNLY, FGFBP2, KLRF1, PRF1, NKG7 Which genes are contributing the most to the first 2 PCs? 1 2 options ( repr.plot.width = 6 , repr.plot.height = 8 ) VizDimLoadings ( pbmc , dims = 1 : 2 , reduction = \"pca\" ) 1 2 options ( repr.plot.width = 7 , repr.plot.height = 6 ) FeaturePlot ( pbmc , reduction = \"pca\" , feature = \"CST3\" ) Determining dimensionality \u00b6 To overcome the extensive technical noise in any single feature for scRNA-seq data, one can cluster cells based on their PCA projections, with each PC essentially representing a \u2018metafeature\u2019 that combines information across a correlated feature set. A common heuristic method generates an \u2018Elbow plot\u2019: a ranking of principle components based on the percentage of variance explained by each one (ElbowPlot function). In this example, we can observe an \u2018elbow\u2019 around PC9-10, suggesting that the majority of true signal is captured in the first 10 PCs. 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) ElbowPlot ( pbmc ) The neighborhood graph \u00b6 We cluster cells using the Louvain algorithm (a default in Seurat), which iteratively group cells together, with the goal of optimizing the standard modularity function. The FindClusters function implements this procedure, and contains a resolution parameter that sets the \u2018granularity\u2019 of the downstream clustering, with increased values leading to a greater number of clusters. We find that setting this parameter between 0.4-1.2 typically returns good results for single-cell datasets of around 3K cells. Optimal resolution often increases for larger datasets. The clusters can be found using the Idents function. 1 2 pbmc <- FindNeighbors ( pbmc , dims = 1 : 10 , k.param = 20 ) pbmc <- FindClusters ( pbmc , resolution = 0.6 ) Computing nearest neighbor graph Computing SNN Modularity Optimizer version 1 . 3 . 0 by Ludo Waltman and Nees Jan van Eck Number of nodes : 1138 Number of edges : 35679 Running Louvain algorithm ... Maximum modularity in 10 random starts : 0 . 8720 Number of communities : 9 Elapsed time : 0 seconds 1 2 # Look at cluster IDs of the first 5 cells head ( Idents ( pbmc ), 5 ) .dl-inline {width: auto; margin:0; padding: 0} .dl-inline>dt, .dl-inline>dd {float: none; width: auto; display: inline-block} .dl-inline>dt::after {content: \":\\0020\"; padding-right: .5ex} .dl-inline>dt:not(:first-of-type) {padding-left: .5ex} AAACCCAAGGAGAGTA 0 AAACGCTTCAGCCCAG 3 AAAGAACAGACGACTG 5 AAAGAACCAATGGCAG 5 AAAGAACGTCTGCAAT 1 Levels : .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} '0' '1' '2' '3' '4' '5' '6' '7' '8' UMAP and t-SNE \u00b6 tSNE and UMAP can be used to visualize and explore non-linear aspects of high-dimensional data. Here we apply these methods to the PC projection of the data (with same dimension as used for clustering). UMAP (UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction) is a manifold learning technique that can also be used to visualize cells. It was published in: McInnes, Leland, John Healy, and James Melville. \"Umap: Uniform manifold approximation and projection for dimension reduction.\" arXiv preprint arXiv:1802.03426 (2018). t-SNE is a non-linear dimensionality reduction technique described in: Maaten, Laurens van der, and Geoffrey Hinton. \"Visualizing data using t-SNE.\" Journal of machine learning research 9.Nov (2008): 2579-2605. 1 pbmc <- RunUMAP ( pbmc , dims = 1 : 10 , verbose = FALSE ) Warning message : \u201c The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R - native UWOT using the cosine metric To use Python UMAP via reticulate , set umap . method to ' umap-learn ' and metric to ' correlation ' This message will be shown once per session \u201d 1 2 3 # note that you can set `label = TRUE` or use the LabelClusters function to help label # individual clusters DimPlot ( pbmc , reduction = \"umap\" ) 1 2 3 options ( repr.plot.width = 16 , repr.plot.height = 5 ) FeaturePlot ( pbmc , reduction = \"umap\" , features = c ( \"CST3\" , \"NKG7\" , \"PPBP\" ), ncol = 3 ) Finding differentially expressed features (cluster biomarkers) \u00b6 A key follow-up step to clustering cells is to find gene markers that are associated with them. We used Seurat's FindAllMarkers function which automates the process for all clusters. The min.pct argument requires a feature to be detected at a minimum percentage in either of the two groups of cells, and the thresh.test argument requires a feature to be differentially expressed (on average) by some amount between the two groups. You can set both of these to 0, but with a dramatic increase in time - since this will test a large number of features that are unlikely to be highly discriminatory. As another option to speed up these computations, max.cells.per.ident can be set. This will downsample each identity class to have no more cells than whatever this is set to. While there is generally going to be a loss in power, the speed increases can be significiant and the most highly differentially expressed features will likely still rise to the top. 1 2 3 4 5 6 7 8 9 10 11 # Scanpy style gene rank plot plot_gene_rank <- function ( markers , n ) { df_plot <- markers %>% group_by ( cluster ) %>% top_n ( 25 , avg_log2FC ) %>% mutate ( rank = factor ( row_number ( desc ( avg_log2FC )))) ggplot ( df_plot , aes ( rank , avg_log2FC )) + geom_text ( aes ( label = gene ), angle = -90 , hjust = 1 ) + facet_wrap ( ~ cluster ) + scale_y_continuous ( expand = expansion ( mult = c ( 0.05 , 0.25 ))) } Several methods for differential expression are supported by Seurat. The default is Wilcoxon rank sum test. 1 2 3 # find markers for every cluster compared to all remaining cells, report only the positive ones pbmc.markers <- FindAllMarkers ( pbmc , test.use = \"wilcox\" , only.pos = TRUE , min.pct = 0.25 , logfc.threshold = 0.25 ) Calculating cluster 0 For a more efficient implementation of the Wilcoxon Rank Sum Test , ( default method for FindMarkers ) please install the limma package -------------------------------------------- install . packages ( ' BiocManager ' ) BiocManager :: install ( ' limma ' ) -------------------------------------------- After installation of limma , Seurat will automatically use the more efficient implementation ( no further action necessary ) . This message will be shown once per session Calculating cluster 1 Calculating cluster 2 Calculating cluster 3 Calculating cluster 4 Calculating cluster 5 Calculating cluster 6 Calculating cluster 7 Calculating cluster 8 1 head ( pbmc.markers ) A data.frame: 6 \u00d7 7 p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene <dbl> <dbl> <dbl> <dbl> <dbl> <fct> <chr> S100A12 4.064804e-197 4.213263 0.978 0.076 1.055467e-192 0 S100A12 VCAN 3.352042e-189 3.484980 0.996 0.104 8.703913e-185 0 VCAN S100A8 4.318649e-186 5.520490 1.000 0.143 1.121380e-181 0 S100A8 CD14 7.936720e-173 2.574749 0.944 0.088 2.060849e-168 0 CD14 S100A9 7.548587e-171 4.954452 0.996 0.197 1.960066e-166 0 S100A9 MNDA 4.262766e-170 3.039318 0.981 0.130 1.106870e-165 0 MNDA 1 2 options ( repr.plot.width = 12 , repr.plot.height = 8 ) plot_gene_rank ( pbmc.markers , 25 ) Student's t test is also supported 1 2 pbmc.markers.t <- FindAllMarkers ( pbmc , test.use = \"t\" , only.pos = TRUE , min.pct = 0.25 , logfc.threshold = 0.25 ) Calculating cluster 0 Calculating cluster 1 Calculating cluster 2 Calculating cluster 3 Calculating cluster 4 Calculating cluster 5 Calculating cluster 6 Calculating cluster 7 Calculating cluster 8 1 plot_gene_rank ( pbmc.markers.t , 25 ) Also logistic regression to test how good each gene is for deciding whether a cell is in a cluster. 1 2 pbmc.markers.lr <- FindAllMarkers ( pbmc , test.use = \"LR\" , only.pos = TRUE , min.pct = 0.25 , logfc.threshold = 0.25 ) Calculating cluster 0 Calculating cluster 1 Calculating cluster 2 Calculating cluster 3 Calculating cluster 4 Calculating cluster 5 Calculating cluster 6 Calculating cluster 7 Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Calculating cluster 8 Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d 1 plot_gene_rank ( pbmc.markers.lr , 25 ) Seurat includes several tools for visualizing marker expression. VlnPlot (shows expression probability distributions across clusters), and FeaturePlot (visualizes feature expression on a tSNE or PCA plot) are our most commonly used visualizations. We also suggest exploring RidgePlot, CellScatter, and DotPlot as additional methods to view your dataset. 1 2 3 4 marker_genes <- sort ( c ( 'IL7R' , 'CD79A' , 'MS4A1' , 'CD8A' , 'CD8B' , 'LYZ' , 'CD14' , 'LGALS3' , 'S100A8' , 'GNLY' , 'NKG7' , 'KLRB1' , 'FCGR3A' , 'MS4A7' , 'FCER1A' , 'CST3' , 'PPBP' , 'CCR7' , 'S100A4' )) 1 2 options ( repr.plot.width = 16 , repr.plot.height = 20 ) VlnPlot ( pbmc , features = marker_genes , ncol = 4 ) 1 2 options ( repr.plot.width = 16 , repr.plot.height = 20 ) FeaturePlot ( pbmc , features = marker_genes , ncol = 4 ) Assigning cell type identity to clusters \u00b6 In this dataset, we can use canonical markers to easily match the de novo clustering to known cell types: Cluster ID Markers Cell Type 0 CD14, LYZ CD14+ Mono 1 IL7R, S100A4 Memory CD4+ T 2 IL7R, CCR7 Naive CD4+ 3 MS4A1, CD79A B 4 FCGR3A, MS4A7 FCGR3A+ Mono 5 GNLY, NKG7 NK 6 CD8A CD8+ T 7 MS4A1, CD79A B 8 PPBP Platelet 1 2 3 options ( repr.plot.width = 6 , repr.plot.height = 7 ) DotPlot ( pbmc , assay = \"RNA\" , features = marker_genes , scale.by = \"size\" ) + coord_flip () 1 2 3 4 5 6 options ( repr.plot.width = 9 , repr.plot.height = 6 ) new.cluster.ids <- c ( \"CD14+ Mono\" , \"Memory CD4 T\" , \"Naive CD4 T\" , \"B1\" , \"FCGR3A+ Mono\" , \"NK\" , \"CD8+ T\" , \"B2\" , \"Platelet\" ) names ( new.cluster.ids ) <- levels ( pbmc ) pbmc <- RenameIdents ( pbmc , new.cluster.ids ) DimPlot ( pbmc , reduction = \"umap\" , label = TRUE , pt.size = 0.5 , label.size = 6 ) + NoLegend () 1 Sys.time () - start_time Time difference of 50.73962 mins 1 sessionInfo () R version 4.0 . 4 ( 2021 - 02 - 15 ) Platform : x86_64 - pc - linux - gnu ( 64 - bit ) Running under : Ubuntu 18.04 . 5 LTS Matrix products : default BLAS : / usr / lib / x86_64 - linux - gnu / openblas / libblas . so . 3 LAPACK : / usr / lib / x86_64 - linux - gnu / libopenblasp - r0 . 2.20 . so locale : [ 1 ] LC_CTYPE = en_US . UTF - 8 LC_NUMERIC = C [ 3 ] LC_TIME = en_US . UTF - 8 LC_COLLATE = en_US . UTF - 8 [ 5 ] LC_MONETARY = en_US . UTF - 8 LC_MESSAGES = en_US . UTF - 8 [ 7 ] LC_PAPER = en_US . UTF - 8 LC_NAME = C [ 9 ] LC_ADDRESS = C LC_TELEPHONE = C [ 11 ] LC_MEASUREMENT = en_US . UTF - 8 LC_IDENTIFICATION = C attached base packages : [ 1 ] stats graphics grDevices utils datasets methods base other attached packages : [ 1 ] patchwork_1 . 1.1 forcats_0 . 5.1 stringr_1 . 4.0 dplyr_1 . 0.5 [ 5 ] purrr_0 . 3.4 readr_1 . 4.0 tidyr_1 . 1.3 tibble_3 . 1.0 [ 9 ] ggplot2_3 . 3.3 tidyverse_1 . 3.0 Matrix_1 . 3 - 2 SeuratObject_4 . 0.0 [ 13 ] Seurat_4 . 0.1 loaded via a namespace ( and not attached ): [ 1 ] Rtsne_0 . 15 colorspace_2 . 0 - 0 deldir_0 . 2 - 10 [ 4 ] ellipsis_0 . 3.1 ggridges_0 . 5.3 IRdisplay_1 . 0 [ 7 ] fs_1 . 5.0 base64enc_0 . 1 - 3 rstudioapi_0 . 13 [ 10 ] spatstat . data_2 . 1 - 0 farver_2 . 1.0 leiden_0 . 3.7 [ 13 ] listenv_0 . 8.0 ggrepel_0 . 9.1 RSpectra_0 . 16 - 0 [ 16 ] lubridate_1 . 7.10 fansi_0 . 4.2 xml2_1 . 3.2 [ 19 ] codetools_0 . 2 - 18 splines_4 . 0.4 polyclip_1 . 10 - 0 [ 22 ] IRkernel_1 . 1.1 jsonlite_1 . 7.2 broom_0 . 7.5 [ 25 ] ica_1 . 0 - 2 cluster_2 . 1.1 dbplyr_2 . 1.0 [ 28 ] png_0 . 1 - 7 uwot_0 . 1.10 shiny_1 . 6.0 [ 31 ] sctransform_0 . 3.2 spatstat . sparse_2 . 0 - 0 compiler_4 . 0.4 [ 34 ] httr_1 . 4.2 backports_1 . 2.1 assertthat_0 . 2.1 [ 37 ] fastmap_1 . 1.0 lazyeval_0 . 2.2 cli_2 . 3.1 [ 40 ] later_1 . 1.0 . 1 htmltools_0 . 5.1 . 1 tools_4 . 0.4 [ 43 ] igraph_1 . 2.6 gtable_0 . 3.0 glue_1 . 4.2 [ 46 ] RANN_2 . 6.1 reshape2_1 . 4.4 Rcpp_1 . 0.6 [ 49 ] scattermore_0 . 7 cellranger_1 . 1.0 vctrs_0 . 3.6 [ 52 ] nlme_3 . 1 - 152 lmtest_0 . 9 - 38 ps_1 . 6.0 [ 55 ] globals_0 . 14.0 rvest_1 . 0.0 mime_0 . 10 [ 58 ] miniUI_0 . 1.1 . 1 lifecycle_1 . 0.0 irlba_2 . 3.3 [ 61 ] goftest_1 . 2 - 2 future_1 . 21.0 MASS_7 . 3 - 53.1 [ 64 ] zoo_1 . 8 - 9 scales_1 . 1.1 spatstat . core_2 . 0 - 0 [ 67 ] hms_1 . 0.0 promises_1 . 2.0 . 1 spatstat . utils_2 . 1 - 0 [ 70 ] parallel_4 . 0.4 RColorBrewer_1 . 1 - 2 reticulate_1 . 18 [ 73 ] pbapply_1 . 4 - 3 gridExtra_2 . 3 rpart_4 . 1 - 15 [ 76 ] stringi_1 . 5.3 repr_1 . 1.3 rlang_0 . 4.10 [ 79 ] pkgconfig_2 . 0.3 matrixStats_0 . 58.0 evaluate_0 . 14 [ 82 ] lattice_0 . 20 - 41 ROCR_1 . 0 - 11 tensor_1 . 5 [ 85 ] labeling_0 . 4.2 htmlwidgets_1 . 5.3 cowplot_1 . 1.1 [ 88 ] tidyselect_1 . 1.0 parallelly_1 . 24.0 RcppAnnoy_0 . 0.18 [ 91 ] plyr_1 . 8.6 magrittr_2 . 0.1 R6_2 . 5.0 [ 94 ] generics_0 . 1.0 pbdZMQ_0 . 3 - 5 DBI_1 . 1.1 [ 97 ] withr_2 . 4.1 haven_2 . 3.1 pillar_1 . 5.1 [ 100 ] mgcv_1 . 8 - 34 fitdistrplus_1 . 1 - 3 survival_3 . 2 - 10 [ 103 ] abind_1 . 4 - 5 future . apply_1 . 7.0 modelr_0 . 1.8 [ 106 ] crayon_1 . 4.1 uuid_0 . 1 - 4 KernSmooth_2 . 23 - 18 [ 109 ] utf8_1 . 2.1 spatstat . geom_2 . 0 - 1 plotly_4 . 9.3 [ 112 ] readxl_1 . 3.1 grid_4 . 0.4 data . table_1 . 14.0 [ 115 ] reprex_1 . 0.0 digest_0 . 6.27 xtable_1 . 8 - 4 [ 118 ] httpuv_1 . 5.5 munsell_0 . 5.0 viridisLite_0 . 3.0 Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"R"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#analysis-of-single-cell-rna-seq-data-building-and-annotating-an-atlas","text":"This R notebook pre-processes the pbmc_1k v3 dataset from 10X Genomics with kallisto and bustools using kb , and then performs an analysis of the cell types and their marker genes. The notebook was written by A. Sina Booeshaghi, Lambda Lu and Lior Pachter and is based on three noteboks: - The kallisto | bustools Introduction to single-cell RNA-seq I notebook. - The kallisto | bustools Introduction to single-cell RNA-seq II notebook. - The Seurat Guided Clustering Tutorial . If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Stuart, Butler et al. Comprehensive Integration of Single-cell Data. Cell (2019). doi:10.1016/j.cell.2019.05.031 A Python notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses.","title":"Analysis of single-cell RNA-seq data: building and annotating an atlas"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#setup","text":"1 2 # This is used to time the running of the notebook start_time <- Sys.time ()","title":"Setup"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#install-r-packages","text":"A large fraction of the running time of this notebook is in installing the Seurat R package, since it has lots of dependencies and many of them use Rcpp which results in the need to compile lots of C++ code. Compilation is required because CRAN does not distribute binaries for Linux, which is the operating system here. 1 2 3 system.time ({ install.packages ( \"Seurat\" , Ncpus = 2 ) }) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) also installing the dependencies \u2018 bitops \u2019 , \u2018 gtools \u2019 , \u2018 caTools \u2019 , \u2018 sass \u2019 , \u2018 jquerylib \u2019 , \u2018 sitmo \u2019 , \u2018 globals \u2019 , \u2018 listenv \u2019 , \u2018 parallelly \u2019 , \u2018 plyr \u2019 , \u2018 zoo \u2019 , \u2018 data . table \u2019 , \u2018 gplots \u2019 , \u2018 reshape2 \u2019 , \u2018 gridExtra \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 httpuv \u2019 , \u2018 xtable \u2019 , \u2018 sourcetools \u2019 , \u2018 bslib \u2019 , \u2018 spatstat . data \u2019 , \u2018 spatstat . utils \u2019 , \u2018 spatstat . sparse \u2019 , \u2018 abind \u2019 , \u2018 tensor \u2019 , \u2018 goftest \u2019 , \u2018 deldir \u2019 , \u2018 polyclip \u2019 , \u2018 FNN \u2019 , \u2018 RSpectra \u2019 , \u2018 dqrng \u2019 , \u2018 cowplot \u2019 , \u2018 fitdistrplus \u2019 , \u2018 future \u2019 , \u2018 future . apply \u2019 , \u2018 ggrepel \u2019 , \u2018 ggridges \u2019 , \u2018 ica \u2019 , \u2018 igraph \u2019 , \u2018 irlba \u2019 , \u2018 leiden \u2019 , \u2018 lmtest \u2019 , \u2018 matrixStats \u2019 , \u2018 miniUI \u2019 , \u2018 patchwork \u2019 , \u2018 pbapply \u2019 , \u2018 plotly \u2019 , \u2018 png \u2019 , \u2018 RANN \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 reticulate \u2019 , \u2018 ROCR \u2019 , \u2018 Rtsne \u2019 , \u2018 scattermore \u2019 , \u2018 sctransform \u2019 , \u2018 SeuratObject \u2019 , \u2018 shiny \u2019 , \u2018 spatstat . core \u2019 , \u2018 spatstat . geom \u2019 , \u2018 uwot \u2019 , \u2018 RcppEigen \u2019 , \u2018 RcppProgress \u2019 user system elapsed 1923.767 192.391 1168.018 The package installation took 20 minutes (elapsed) which is 40% of the running time of the entire notebook. The user time is nearly twice the elapsed time here because 2 cores were used to install all those packages.","title":"Install R packages"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#install-kb-python","text":"1 2 # Install kb (includes installing kallisto and bustools) system ( \"pip3 install kb-python\" , intern = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'Collecting kb-python' ' Downloading https://files.pythonhosted.org/packages/29/94/855ed1c11110a65a466cd95a6fef64958bad055f2678270b80a32e42cdb1/kb_python-0.25.1-py3-none-any.whl (59.1MB)' 'Requirement already satisfied: tqdm>=4.39.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (4.41.1)' 'Collecting loompy>=3.0.6' ' Downloading https://files.pythonhosted.org/packages/36/52/74ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9/loompy-3.0.6.tar.gz (41kB)' 'Requirement already satisfied: nbformat>=4.4.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (5.1.2)' 'Requirement already satisfied: h5py>=2.10.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (2.10.0)' 'Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (2.23.0)' 'Requirement already satisfied: nbconvert>=5.6.0 in /usr/local/lib/python3.7/dist-packages (from kb-python) (5.6.1)' 'Requirement already satisfied: numpy>=1.17.2 in /usr/local/lib/python3.7/dist-packages (from kb-python) (1.19.5)' 'Collecting anndata>=0.6.22.post1' ' Downloading https://files.pythonhosted.org/packages/81/b1/743cc79f89d9db6dccbfb7e6000795acb218a6c6320b7a2337cad99bd047/anndata-0.7.5-py3-none-any.whl (119kB)' 'Collecting scanpy>=1.4.4.post1' ' Downloading https://files.pythonhosted.org/packages/c1/f4/a7848e6f990cf5bcbedade93702baf3e99ae704714563fe9bdceb3d597c7/scanpy-1.7.1-py3-none-any.whl (10.3MB)' 'Requirement already satisfied: Jinja2>2.10.1 in /usr/local/lib/python3.7/dist-packages (from kb-python) (2.11.3)' 'Collecting plotly>=4.5.0' ' Downloading https://files.pythonhosted.org/packages/1f/f6/bd3c17c8003b6641df1228e80e1acac97ed8402635e46c2571f8e1ef63af/plotly-4.14.3-py2.py3-none-any.whl (13.2MB)' 'Requirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.7/dist-packages (from kb-python) (0.22.2.post1)' 'Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (1.4.1)' 'Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (54.2.0)' 'Requirement already satisfied: numba in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (0.51.2)' 'Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from loompy>=3.0.6->kb-python) (7.1.2)' 'Collecting numpy-groupies' ' Downloading https://files.pythonhosted.org/packages/99/eb/fc72b507219957cffdf2c5952e396cc04a30c2223e2fd789f4a744ffc52f/numpy_groupies-0.9.13.tar.gz (109kB)' 'Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (2.6.0)' 'Requirement already satisfied: traitlets>=4.1 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (5.0.5)' 'Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (4.7.1)' 'Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.4.0->kb-python) (0.2.0)' 'Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from h5py>=2.10.0->kb-python) (1.15.0)' 'Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (1.24.3)' 'Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (2.10)' 'Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (2020.12.5)' 'Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->kb-python) (3.0.4)' 'Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.3)' 'Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (2.6.1)' 'Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (3.3.0)' 'Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (1.4.3)' 'Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.4.4)' 'Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.8.4)' 'Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert>=5.6.0->kb-python) (0.7.1)' 'Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (20.9)' 'Requirement already satisfied: importlib-metadata>=0.7; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (3.8.1)' 'Requirement already satisfied: pandas!=1.1,>=1.0 in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (1.1.5)' 'Requirement already satisfied: natsort in /usr/local/lib/python3.7/dist-packages (from anndata>=0.6.22.post1->kb-python) (5.5.0)' 'Collecting umap-learn>=0.3.10' ' Downloading https://files.pythonhosted.org/packages/75/69/85e7f950bb75792ad5d666d86c5f3e62eedbb942848e7e3126513af9999c/umap-learn-0.5.1.tar.gz (80kB)' 'Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (1.0.1)' 'Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (0.11.1)' 'Requirement already satisfied: statsmodels>=0.10.0rc2 in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (0.10.2)' 'Requirement already satisfied: patsy in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (0.5.1)' 'Requirement already satisfied: matplotlib>=3.1.2 in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (3.2.2)' 'Collecting sinfo' ' Downloading https://files.pythonhosted.org/packages/e1/4c/aef8456284f1a1c3645b938d9ca72388c9c4878e6e67b8a349c7d22fac78/sinfo-0.3.1.tar.gz' 'Collecting legacy-api-wrap' ' Downloading https://files.pythonhosted.org/packages/a4/68/da997bc56bb69dcdcee4054f0bc42266909307b905389fbc54c9158f42da/legacy_api_wrap-1.2-py3-none-any.whl' 'Requirement already satisfied: tables in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (3.4.4)' 'Requirement already satisfied: networkx>=2.3 in /usr/local/lib/python3.7/dist-packages (from scanpy>=1.4.4.post1->kb-python) (2.5)' 'Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2>2.10.1->kb-python) (1.1.1)' 'Requirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.7/dist-packages (from plotly>=4.5.0->kb-python) (1.3.3)' 'Requirement already satisfied: llvmlite<0.35,>=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba->loompy>=3.0.6->kb-python) (0.34.0)' 'Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert>=5.6.0->kb-python) (0.5.1)' 'Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->anndata>=0.6.22.post1->kb-python) (2.4.7)' 'Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.7; python_version < \"3.8\"->anndata>=0.6.22.post1->kb-python) (3.7.4.3)' 'Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.7; python_version < \"3.8\"->anndata>=0.6.22.post1->kb-python) (3.4.1)' 'Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas!=1.1,>=1.0->anndata>=0.6.22.post1->kb-python) (2.8.1)' 'Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas!=1.1,>=1.0->anndata>=0.6.22.post1->kb-python) (2018.9)' 'Collecting pynndescent>=0.5' ' Downloading https://files.pythonhosted.org/packages/af/65/8189298dd3a05bbad716ee8e249764ff8800e365d8dc652ad2192ca01b4a/pynndescent-0.5.2.tar.gz (1.1MB)' 'Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.2->scanpy>=1.4.4.post1->kb-python) (0.10.0)' 'Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.1.2->scanpy>=1.4.4.post1->kb-python) (1.3.1)' 'Collecting stdlib_list' ' Downloading https://files.pythonhosted.org/packages/7a/b1/52f59dcf31ead2f0ceff8976288449608d912972b911f55dff712cef5719/stdlib_list-0.8.0-py3-none-any.whl (63kB)' 'Collecting get-version>=2.0.4' ' Downloading https://files.pythonhosted.org/packages/23/48/7610e884e62fff2183e7bc8592397c39a020267fb5147905fcd3f9cc820c/get_version-2.1-py3-none-any.whl (43kB)' 'Requirement already satisfied: numexpr>=2.5.2 in /usr/local/lib/python3.7/dist-packages (from tables->scanpy>=1.4.4.post1->kb-python) (2.7.3)' 'Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from networkx>=2.3->scanpy>=1.4.4.post1->kb-python) (4.4.2)' 'Building wheels for collected packages: loompy, numpy-groupies, umap-learn, sinfo, pynndescent' ' Building wheel for loompy (setup.py): started' ' Building wheel for loompy (setup.py): finished with status \\'done\\'' ' Created wheel for loompy: filename=loompy-3.0.6-cp37-none-any.whl size=47896 sha256=9a9ab62e41414913f9bbfb2eef13596a38bc9dd39316cabab892f51143ed4d10' ' Stored in directory: /root/.cache/pip/wheels/f9/a4/90/5a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9' ' Building wheel for numpy-groupies (setup.py): started' ' Building wheel for numpy-groupies (setup.py): finished with status \\'done\\'' ' Created wheel for numpy-groupies: filename=numpy_groupies-0.9.13-cp37-none-any.whl size=24068 sha256=bb4d7f7f96af13b58c827bf94f338dd2559b83522f750c17546667d33088ca2e' ' Stored in directory: /root/.cache/pip/wheels/ef/97/d7/270bc85eb8b1b84629caac97a3900bff23edb7f834f6ed729e' ' Building wheel for umap-learn (setup.py): started' ' Building wheel for umap-learn (setup.py): finished with status \\'done\\'' ' Created wheel for umap-learn: filename=umap_learn-0.5.1-cp37-none-any.whl size=76569 sha256=627ba759b3e6d1787390e59be46a8ee88ea2f8e3961907069df003122d8e052c' ' Stored in directory: /root/.cache/pip/wheels/ad/df/d5/a3691296ff779f25cd1cf415a3af954b987fb53111e3392cf4' ' Building wheel for sinfo (setup.py): started' ' Building wheel for sinfo (setup.py): finished with status \\'done\\'' ' Created wheel for sinfo: filename=sinfo-0.3.1-cp37-none-any.whl size=7012 sha256=0a7ca4b4b981f9ff8c0ebc0f677119dfa8e32cb5746fca18b261ae01f0f18e7e' ' Stored in directory: /root/.cache/pip/wheels/11/f0/23/347d6d8e59787c2bc272162d18223dc3b45bd6dc40aceee6af' ' Building wheel for pynndescent (setup.py): started' ' Building wheel for pynndescent (setup.py): finished with status \\'done\\'' ' Created wheel for pynndescent: filename=pynndescent-0.5.2-cp37-none-any.whl size=51351 sha256=46d4d6df8cbd2dabd69c0f051626ff9b8978fb9141ff68278e7c7d83ec086277' ' Stored in directory: /root/.cache/pip/wheels/ba/52/4e/4c28d04d144a28f89e2575fb63628df6e6d49b56c5ddd0c74e' 'Successfully built loompy numpy-groupies umap-learn sinfo pynndescent' 'Installing collected packages: numpy-groupies, loompy, anndata, pynndescent, umap-learn, stdlib-list, sinfo, get-version, legacy-api-wrap, scanpy, plotly, kb-python' ' Found existing installation: plotly 4.4.1' ' Uninstalling plotly-4.4.1:' ' Successfully uninstalled plotly-4.4.1' 'Successfully installed anndata-0.7.5 get-version-2.1 kb-python-0.25.1 legacy-api-wrap-1.2 loompy-3.0.6 numpy-groupies-0.9.13 plotly-4.14.3 pynndescent-0.5.2 scanpy-1.7.1 sinfo-0.3.1 stdlib-list-0.8.0 umap-learn-0.5.1'","title":"Install kb-python"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#download-the-data","text":"1 2 3 # Download the data from the 10x website system ( \"wget http://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_v3/pbmc_1k_v3_fastqs.tar\" , intern = TRUE ) system ( \"tar -xvf pbmc_1k_v3_fastqs.tar\" , intern = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'pbmc_1k_v3_fastqs/' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_I1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_I1_001.fastq.gz'","title":"Download the data"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#download-an-index","text":"1 system ( \"kb ref -d human -i index.idx -g t2g.txt -f1 transcriptome.fasta\" , intern = TRUE )","title":"Download an index"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#pseudoalignment-and-counting","text":"","title":"Pseudoalignment and counting"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#run-kallisto-and-bustools","text":"1 system ( \"kb count -i index.idx -g t2g.txt -x 10xv3 -o output --filter bustools -t 2 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz\" , intern = TRUE )","title":"Run kallisto and bustools"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#basic-qc","text":"1 2 3 4 5 library ( Seurat ) library ( Matrix ) library ( tidyverse ) library ( patchwork ) theme_set ( theme_bw ()) Attaching SeuratObject Warning message in system(\"timedatectl\", intern = TRUE): \u201crunning command 'timedatectl' had status 1\u201d Registered S3 method overwritten by 'cli': method from print.boxx spatstat.geom \u2500\u2500 \u001b[1mAttaching packages\u001b[22m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3.0 \u2500\u2500 \u001b[32m\u2714\u001b[39m \u001b[34mggplot2\u001b[39m 3.3.3 \u001b[32m\u2714\u001b[39m \u001b[34mpurrr \u001b[39m 0.3.4 \u001b[32m\u2714\u001b[39m \u001b[34mtibble \u001b[39m 3.1.0 \u001b[32m\u2714\u001b[39m \u001b[34mdplyr \u001b[39m 1.0.5 \u001b[32m\u2714\u001b[39m \u001b[34mtidyr \u001b[39m 1.1.3 \u001b[32m\u2714\u001b[39m \u001b[34mstringr\u001b[39m 1.4.0 \u001b[32m\u2714\u001b[39m \u001b[34mreadr \u001b[39m 1.4.0 \u001b[32m\u2714\u001b[39m \u001b[34mforcats\u001b[39m 0.5.1 \u2500\u2500 \u001b[1mConflicts\u001b[22m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts() \u2500\u2500 \u001b[31m\u2716\u001b[39m \u001b[34mtidyr\u001b[39m::\u001b[32mexpand()\u001b[39m masks \u001b[34mMatrix\u001b[39m::expand() \u001b[31m\u2716\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter() \u001b[31m\u2716\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m masks \u001b[34mstats\u001b[39m::lag() \u001b[31m\u2716\u001b[39m \u001b[34mtidyr\u001b[39m::\u001b[32mpack()\u001b[39m masks \u001b[34mMatrix\u001b[39m::pack() \u001b[31m\u2716\u001b[39m \u001b[34mtidyr\u001b[39m::\u001b[32munpack()\u001b[39m masks \u001b[34mMatrix\u001b[39m::unpack() 1 list.files ( \".\" , recursive = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'index.idx' 'output/10xv3_whitelist.txt' 'output/counts_filtered/cells_x_genes.barcodes.txt' 'output/counts_filtered/cells_x_genes.genes.txt' 'output/counts_filtered/cells_x_genes.mtx' 'output/counts_unfiltered/cells_x_genes.barcodes.txt' 'output/counts_unfiltered/cells_x_genes.genes.txt' 'output/counts_unfiltered/cells_x_genes.mtx' 'output/filter_barcodes.txt' 'output/inspect.json' 'output/kb_info.json' 'output/matrix.ec' 'output/output.bus' 'output/output.filtered.bus' 'output/output.unfiltered.bus' 'output/run_info.json' 'output/transcripts.txt' 'pbmc_1k_v3_fastqs.tar' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_I1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_I1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz' 'pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz' 'sample_data/anscombe.json' 'sample_data/california_housing_test.csv' 'sample_data/california_housing_train.csv' 'sample_data/mnist_test.csv' 'sample_data/mnist_train_small.csv' 'sample_data/README.md' 't2g.txt' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Slightly modified from BUSpaRse, just to avoid installing a few dependencies not used here read_count_output <- function ( dir , name ) { dir <- normalizePath ( dir , mustWork = TRUE ) m <- readMM ( paste0 ( dir , \"/\" , name , \".mtx\" )) m <- Matrix :: t ( m ) m <- as ( m , \"dgCMatrix\" ) # The matrix read has cells in rows ge <- \".genes.txt\" genes <- readLines ( file ( paste0 ( dir , \"/\" , name , ge ))) barcodes <- readLines ( file ( paste0 ( dir , \"/\" , name , \".barcodes.txt\" ))) colnames ( m ) <- barcodes rownames ( m ) <- genes return ( m ) } 1 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" ) 1 dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 60623 259615","title":"Basic QC"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#test-for-library-saturation","text":"1 2 3 tot_counts <- colSums ( res_mat ) lib_sat <- tibble ( nCount = tot_counts , nGene = colSums ( res_mat > 0 )) 1 2 3 4 options ( repr.plot.width = 9 , repr.plot.height = 6 ) ggplot ( lib_sat , aes ( nCount , nGene )) + geom_point ( alpha = 0.1 , size = 0.5 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d Warning message: \u201cTransformation introduced infinite values in continuous y-axis\u201d This plot is very misleading, as even the small alpha can't accurately show how many points are stacked at one location. 1 2 3 4 ggplot ( lib_sat , aes ( nCount , nGene )) + geom_bin2d ( bins = 50 ) + scale_fill_distiller ( palette = \"Blues\" , direction = 1 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d Warning message: \u201cTransformation introduced infinite values in continuous y-axis\u201d Warning message: \u201cRemoved 19583 rows containing non-finite values (stat_bin2d).\u201d Lots of points are piled at around 1 gene and 1 count, and those with 0 gene or count were removed for introducing -Inf in log transform. These correspond to empty or near empty droplets.","title":"Test for library saturation"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#examine-the-knee-plot","text":"The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 43.64 6.00 60120.00 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 #' @rdname knee_plot #' @param mat Gene count matrix, a dgCMatrix. #' @return `get_knee_df` returns a tibble with two columns: \\code{total} for #' total UMI counts for each barcode, and \\code{rank} for rank of the total #' counts, with number 1 for the barcode with the most counts. #' @export #' @importFrom dplyr row_number desc arrange #' @importFrom Matrix colSums get_knee_df <- function ( mat ) { total <- rank <- NULL tibble ( total = Matrix :: colSums ( mat ), rank = row_number ( desc ( total ))) %>% distinct () %>% dplyr :: filter ( total > 0 ) %>% arrange ( rank ) } #' @rdname knee_plot #' @param df The data frame from \\code{\\link{get_knee_df}}. #' @param lower Minimum total UMI counts for barcode for it to be considered #' when calculating the inflection point; this helps to avoid the noisy part of #' the curve for barcodes with very few counts. #' @return `get_inflection` returns a \\code{numeric(1)} for the total UMI count #' at the inflection point. #' @note Code in part adapted from \\code{barcodeRanks} from \\code{DropetUtils}. #' @export #' @importFrom dplyr transmute #' get_inflection <- function ( df , lower = 100 ) { log_total <- log_rank <- total <- NULL df_fit <- df %>% dplyr :: filter ( total > lower ) %>% transmute ( log_total = log10 ( total ), log_rank = log10 ( rank )) d1n <- diff ( df_fit $ log_total ) / diff ( df_fit $ log_rank ) right.edge <- which.min ( d1n ) 10 ^ ( df_fit $ log_total [ right.edge ]) } #' Plot the transposed knee plot and inflection point #' #' Plot a transposed knee plot, showing the inflection point and #' the number of remaining cells after inflection point filtering. It's #' transposed since it's more generalizable to multi-modal data. Taken from the #' BUSpaRse package. #' #' @param df The data frame from \\code{\\link{get_knee_df}}. #' @param inflection Output of \\code{\\link{get_inflection}}. #' @return `knee_plot` returns a \\code{ggplot2} object. #' @export #' @importFrom ggplot2 ggplot aes geom_path geom_vline geom_hline #' scale_x_log10 scale_y_log10 labs annotation_logticks geom_text knee_plot <- function ( df , inflection ) { total <- rank_cutoff <- NULL annot <- tibble ( inflection = inflection , rank_cutoff = max ( df $ rank [ df $ total > inflection ])) ggplot ( df , aes ( total , rank )) + geom_path () + geom_vline ( aes ( xintercept = inflection ), data = annot , linetype = 2 , color = \"gray40\" ) + geom_hline ( aes ( yintercept = rank_cutoff ), data = annot , linetype = 2 , color = \"gray40\" ) + geom_text ( aes ( inflection , rank_cutoff , label = paste ( rank_cutoff , \"'cells'\" )), data = annot , vjust = 1 ) + scale_x_log10 () + scale_y_log10 () + labs ( y = \"Rank\" , x = \"Total UMIs\" ) + annotation_logticks () } 1 2 3 4 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_df <- get_knee_df ( res_mat ) inflection <- get_inflection ( knee_df ) knee_plot ( knee_df , inflection )","title":"Examine the knee plot"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#analysis","text":"We begin by asking for genes with the highest proportions in droplets (prior to filtering out empty droplets). 1 2 tr2g <- read_tsv ( \"t2g.txt\" , col_names = c ( \"transcript\" , \"gene\" , \"gene_name\" )) tr2g <- distinct ( tr2g [, c ( \"gene\" , \"gene_name\" )]) \u001b[36m\u2500\u2500\u001b[39m \u001b[1m\u001b[1mColumn specification\u001b[1m\u001b[22m \u001b[36m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[39m cols( transcript = \u001b[31mcol_character()\u001b[39m, gene = \u001b[31mcol_character()\u001b[39m, gene_name = \u001b[31mcol_character()\u001b[39m ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 plot_pct_genes <- function ( mat , tr2g , top_n = 20 , symbol = \"ensembl\" ) { pct_tx <- rowSums ( mat ) gs <- rownames ( mat )[ order ( - pct_tx )] df <- as.data.frame ( t ( mat [ gs [ 1 : 20 ],])) df <- df %>% mutate_all ( function ( x ) x / colSums ( mat )) %>% pivot_longer ( everything (), names_to = \"gene\" ) if ( symbol == \"ensembl\" ) { df <- left_join ( df , tr2g , by = \"gene\" ) } else { df <- rename ( df , gene_name = gene ) } df %>% mutate ( gene = fct_reorder ( gene_name , value , .fun = median )) %>% ggplot ( aes ( gene , value )) + geom_boxplot () + labs ( x = \"\" , y = \"Proportion of total counts\" ) + coord_flip () } 1 2 options ( repr.plot.width = 6 , repr.plot.height = 10 ) plot_pct_genes ( res_mat , tr2g ) Warning message: \u201cRemoved 391660 rows containing non-finite values (stat_boxplot).\u201d For many barcodes, the top genes by proportion of all counts are ribosomal or mitochondrial genes. Also, the proportions plotted above seem to have some discrete values; this effect is a result of computing fractions with small denominator, which happens when droplets produce very few UMI counts.","title":"Analysis"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#filter","text":"1 2 3 res_mat <- res_mat [, tot_counts > inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 31861 1322 1 2 # Convert from Ensembl gene ID to gene symbol rownames ( res_mat ) <- tr2g $ gene_name [ match ( rownames ( res_mat ), tr2g $ gene )] 1 ( pbmc <- CreateSeuratObject ( counts = res_mat , project = \"pbmc1k\" , min.cells = 3 , min.features = 200 )) Warning message : \u201c Non - unique features ( rownames ) present in the input matrix , making unique \u201d Warning message : \u201c Feature names cannot have underscores ( '_' ), replacing with dashes ( '-' ) \u201d An object of class Seurat 25966 features across 1208 samples within 1 assay Active assay : RNA ( 25966 features , 0 variable features ) The steps below constitute a standard analysis worklow for single-cell RNA-seq data. 1 2 # The [[ operator can add columns to object metadata. This is a great place to stash QC stats pbmc [[ \"percent.mt\" ]] <- PercentageFeatureSet ( pbmc , pattern = \"^MT-\" ) The number of unique genes and total molecules are automatically calculated when running the CreateSeuratObject command. The associated data is stored in the object metadata. 1 2 # Show QC metrics for the first 5 cells head ( pbmc @ meta.data , 5 ) A data.frame: 5 \u00d7 4 orig.ident nCount_RNA nFeature_RNA percent.mt <fct> <dbl> <int> <dbl> AAACCCAAGGAGAGTA pbmc1k 9289 3198 11.271396 AAACGCTTCAGCCCAG pbmc1k 6483 2513 8.252352 AAAGAACAGACGACTG pbmc1k 5011 2082 6.166434 AAAGAACCAATGGCAG pbmc1k 3264 1555 6.893382 AAAGAACGTCTGCAAT pbmc1k 7488 2508 6.610577 Next, we visualize some QC metrics and use the results to set filtering criteria. 1 2 3 # Visualize QC metrics as a violin plot options ( repr.plot.width = 12 , repr.plot.height = 6 ) VlnPlot ( pbmc , features = c ( \"nFeature_RNA\" , \"nCount_RNA\" , \"percent.mt\" ), ncol = 3 ) 1 2 3 4 5 # FeatureScatter is typically used to visualize feature-feature relationships, but can be used # for anything calculated by the object, i.e. columns in object metadata, PC scores etc. plot1 <- FeatureScatter ( pbmc , feature1 = \"nCount_RNA\" , feature2 = \"percent.mt\" ) plot2 <- FeatureScatter ( pbmc , feature1 = \"nCount_RNA\" , feature2 = \"nFeature_RNA\" ) plot1 + plot2 1 pbmc <- subset ( pbmc , subset = nFeature_RNA > 200 & nFeature_RNA < 6500 & percent.mt < 20 )","title":"Filter"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#normalize","text":"After removing unwanted cells from the dataset, the next step is to normalize the data. A standard choice is LogNormalize which normalizes the UMI counts for each cell by the total counts, multiplies this by a scale factor (10,000 by default), and finally log-transforms the result. We recommend the preprint - Breda, J., Zavolan, M. and van Nimwegen, E. Bayesian inference of the gene expression states of single cells from scRNA-seq data. bioRxiv (2019). doi.org/10.1101/2019.12.28.889956 for a thorough discussion of normalization. 1 pbmc <- NormalizeData ( pbmc , normalization.method = \"LogNormalize\" , scale.factor = 10000 ) For clarity, in this previous line of code (and in future commands), we provide the default values for certain parameters in the function call. However, this isn\u2019t required and the same behavior can be achieved with: 1 # pbmc <- NormalizeData(pbmc)","title":"Normalize"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#highly-expressed-genes","text":"To identify a subset of genes that exhibit high cell-to-cell variation in the dataset we apply a procedure implemented in the FindVariableFeatures function. By default, it returns 2,000 genes per dataset. These will be used in downstream analysis. Seurat documentation describes the method used to find highly variable genes here as such: First, fits a line to the relationship of log(variance) and log(mean) using local polynomial regression (loess). Then standardizes the feature values using the observed mean and expected variance (given by the fitted line). Feature variance is then calculated on the standardized values after clipping to a maximum (see clip.max parameter). 1 2 options ( repr.plot.width = 6 , repr.plot.height = 10 ) plot_pct_genes ( GetAssayData ( pbmc , slot = \"counts\" ), tr2g , symbol = \"symbol\" ) 1 2 3 4 5 6 7 8 9 options ( repr.plot.width = 9 , repr.plot.height = 6 ) pbmc <- FindVariableFeatures ( pbmc , selection.method = \"vst\" , nfeatures = 2000 ) # Identify the 10 most highly variable genes top10 <- head ( VariableFeatures ( pbmc ), 10 ) # plot variable features with and without labels plot1 <- VariableFeaturePlot ( pbmc , log = FALSE ) LabelPoints ( plot = plot1 , points = top10 , repel = TRUE ) When using repel , set xnudge and ynudge to 0 for optimal results","title":"Highly expressed genes"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#scaling-the-data","text":"Next, we apply a linear transformation (\u2018scaling\u2019) that is a standard pre-processing step prior to dimensional reduction techniques like PCA. The ScaleData function shifts the expression of each gene, so that the mean expression across cells is 0 and the variance across cells is 1 This step gives equal weight to genes in downstream analyses, so that highly-expressed genes do not dominate. 1 2 all.genes <- rownames ( pbmc ) pbmc <- ScaleData ( pbmc , features = all.genes ) Centering and scaling data matrix We apply this only to the genes identified as highly variable: 1 # pbmc <- ScaleData(pbmc) The scaling does not affect PCA or clustering results. However, Seurat heatmaps (produced as shown below with DoHeatmap) require genes in the heatmap to be scaled so that highly-expressed genes don\u2019t dominate. To make sure we don\u2019t leave any genes out of the heatmap later, we are scaling all genes in this tutorial. In Seurat v2 we also use the ScaleData function to remove unwanted sources of variation from a single-cell dataset. For example, we could \u2018regress out\u2019 heterogeneity associated with (for example) cell cycle stage, or mitochondrial contamination. These features are still supported in ScaleData in Seurat v3, i.e.: 1 # pbmc <- ScaleData(pbmc, vars.to.regress = \"percent.mt\")","title":"Scaling the data"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#principal-component-analysis","text":"Next we perform PCA on the scaled data. By default, only the previously determined variable features are used as input. 1 pbmc <- RunPCA ( pbmc , features = VariableFeatures ( object = pbmc )) PC_ 1 Positive: S100A9, FCN1, MNDA, FGL2, S100A8, CTSS, CST3, SERPINA1, PSAP, NCF2 LYZ, AIF1, TYMP, VCAN, KLF4, GRN, CSTA, MPEG1, CPVL, CLEC7A LST1, MS4A6A, CD14, LGALS1, S100A12, TYROBP, TNFAIP2, FCER1G, CD36, CSF3R Negative: LTB, TRAC, TRBC2, CD3D, IL32, BCL11B, CD3G, IL7R, TCF7, CD69 ISG20, CD247, CD27, SPOCK2, ARL4C, CD7, CD2, GZMM, TRBC1, CD6 PRKCQ-AS1, NOSIP, AC058791.1, RORA, CTSW, CCR7, AQP3, ITM2A, PEBP1, SAMD3 PC_ 2 Positive: CD79A, MS4A1, IGHM, BANK1, BCL11A, LINC00926, CD79B, TNFRSF13C, IGHD, CD74 HLA-DQB1, CD22, HLA-DQA1, HLA-DRB1, HLA-DRA, HLA-DPA1, HLA-DPB1, TCL1A, FCER2, AFF3 PAX5, IGKC, VPREB3, SPIB, MEF2C, RALGPS2, HVCN1, FCRL1, HLA-DOB, HLA-DMA Negative: IL32, CD247, GZMM, CD7, CTSW, CD3D, GZMA, NKG7, S100A4, TRAC ANXA1, BCL11B, PRF1, CST7, KLRB1, CD3G, IL7R, ARL4C, SAMD3, CD2 TRBC1, CCL5, KLRG1, A2M, MT2A, RORA, ITGB2, GNLY, TCF7, MATK PC_ 3 Positive: CAVIN2, GP9, PF4, GNG11, PPBP, CD9, TREML1, CMTM5, TUBB1, SPARC CLU, HIST1H2AC, ACRBP, PTCRA, PRKAR2B, NRGN, ITGA2B, CTTN, TMEM40, TSC22D1 AC147651.1, GMPR, PF4V1, CLDN5, CA2, MAP3K7CL, PGRMC1, CXCR2P1, HIST1H3H, MMD Negative: CYBA, VIM, FOS, ITGB2, NEAT1, HNRNPU, CALR, LSP1, LCP1, DUSP1 S100A10, S100A6, KLF6, CD74, PLAC8, LTB, ZFP36L1, S100A4, IFITM2, ISG20 SPCS1, SEC61B, ANXA1, MCL1, EVI2B, HSPA5, APOBEC3G, HSP90B1, PEBP1, AC020916.1 PC_ 4 Positive: LEF1, TCF7, IL7R, MAL, CCR7, BCL11B, CD3D, NOSIP, LTB, CD3G TRAC, CAMK4, NELL2, PASK, CD27, EGR1, SLC2A3, RGCC, FHIT, RGS10 CD6, CD40LG, VIM, INPP4B, ADTRP, TRAT1, NOG, TSHZ2, PRKCQ-AS1, TESPA1 Negative: GZMB, GNLY, CLIC3, NKG7, KLRF1, PRF1, CST7, SPON2, FGFBP2, KLRD1 GZMA, ADGRG1, CCL4, TRDC, HOPX, MATK, IL2RB, TTC38, APOBEC3G, CTSW TBX21, RHOC, C12orf75, S1PR5, FCGR3A, SH2D1B, PTGDR, MYOM2, CMC1, GZMH PC_ 5 Positive: LILRA4, SCT, PACSIN1, SMPD3, LRRC26, SERPINF1, TPM2, AL096865.1, IL3RA, DNASE1L3 TNFRSF21, CUX2, PLD4, ITM2C, GAS6, MYBL2, CLEC4C, PPP1R14B, EPHA2, UGCG PPP1R14B-AS1, CUEDC1, LAMP5, RUNX2, PPM1J, SERPINF2, NRP1, DERL3, LINC02812, CIB2 Negative: GNLY, FGFBP2, KLRF1, PRF1, NKG7, CCL4, CST7, KLRD1, MS4A1, IGHD LINC00926, ADGRG1, CD79B, CD79A, TRDC, CD22, GZMA, TBX21, SPON2, TNFRSF13C MATK, FCER2, IL2RB, PAX5, MYOM2, HOPX, S1PR5, TTC38, SH2D1B, BANK1 Seurat provides several useful ways of visualizing both cells and features that define the PCA, including VizDimReduction, DimPlot, and DimHeatmap 1 2 # Examine and visualize PCA results a few different ways print ( pbmc [[ \"pca\" ]], dims = 1 : 5 , nfeatures = 5 ) PC_ 1 Positive: S100A9, FCN1, MNDA, FGL2, S100A8 Negative: LTB, TRAC, TRBC2, CD3D, IL32 PC_ 2 Positive: CD79A, MS4A1, IGHM, BANK1, BCL11A Negative: IL32, CD247, GZMM, CD7, CTSW PC_ 3 Positive: CAVIN2, GP9, PF4, GNG11, PPBP Negative: CYBA, VIM, FOS, ITGB2, NEAT1 PC_ 4 Positive: LEF1, TCF7, IL7R, MAL, CCR7 Negative: GZMB, GNLY, CLIC3, NKG7, KLRF1 PC_ 5 Positive: LILRA4, SCT, PACSIN1, SMPD3, LRRC26 Negative: GNLY, FGFBP2, KLRF1, PRF1, NKG7 Which genes are contributing the most to the first 2 PCs? 1 2 options ( repr.plot.width = 6 , repr.plot.height = 8 ) VizDimLoadings ( pbmc , dims = 1 : 2 , reduction = \"pca\" ) 1 2 options ( repr.plot.width = 7 , repr.plot.height = 6 ) FeaturePlot ( pbmc , reduction = \"pca\" , feature = \"CST3\" )","title":"Principal component analysis"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#determining-dimensionality","text":"To overcome the extensive technical noise in any single feature for scRNA-seq data, one can cluster cells based on their PCA projections, with each PC essentially representing a \u2018metafeature\u2019 that combines information across a correlated feature set. A common heuristic method generates an \u2018Elbow plot\u2019: a ranking of principle components based on the percentage of variance explained by each one (ElbowPlot function). In this example, we can observe an \u2018elbow\u2019 around PC9-10, suggesting that the majority of true signal is captured in the first 10 PCs. 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) ElbowPlot ( pbmc )","title":"Determining dimensionality"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#the-neighborhood-graph","text":"We cluster cells using the Louvain algorithm (a default in Seurat), which iteratively group cells together, with the goal of optimizing the standard modularity function. The FindClusters function implements this procedure, and contains a resolution parameter that sets the \u2018granularity\u2019 of the downstream clustering, with increased values leading to a greater number of clusters. We find that setting this parameter between 0.4-1.2 typically returns good results for single-cell datasets of around 3K cells. Optimal resolution often increases for larger datasets. The clusters can be found using the Idents function. 1 2 pbmc <- FindNeighbors ( pbmc , dims = 1 : 10 , k.param = 20 ) pbmc <- FindClusters ( pbmc , resolution = 0.6 ) Computing nearest neighbor graph Computing SNN Modularity Optimizer version 1 . 3 . 0 by Ludo Waltman and Nees Jan van Eck Number of nodes : 1138 Number of edges : 35679 Running Louvain algorithm ... Maximum modularity in 10 random starts : 0 . 8720 Number of communities : 9 Elapsed time : 0 seconds 1 2 # Look at cluster IDs of the first 5 cells head ( Idents ( pbmc ), 5 ) .dl-inline {width: auto; margin:0; padding: 0} .dl-inline>dt, .dl-inline>dd {float: none; width: auto; display: inline-block} .dl-inline>dt::after {content: \":\\0020\"; padding-right: .5ex} .dl-inline>dt:not(:first-of-type) {padding-left: .5ex} AAACCCAAGGAGAGTA 0 AAACGCTTCAGCCCAG 3 AAAGAACAGACGACTG 5 AAAGAACCAATGGCAG 5 AAAGAACGTCTGCAAT 1 Levels : .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} '0' '1' '2' '3' '4' '5' '6' '7' '8'","title":"The neighborhood graph"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#umap-and-t-sne","text":"tSNE and UMAP can be used to visualize and explore non-linear aspects of high-dimensional data. Here we apply these methods to the PC projection of the data (with same dimension as used for clustering). UMAP (UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction) is a manifold learning technique that can also be used to visualize cells. It was published in: McInnes, Leland, John Healy, and James Melville. \"Umap: Uniform manifold approximation and projection for dimension reduction.\" arXiv preprint arXiv:1802.03426 (2018). t-SNE is a non-linear dimensionality reduction technique described in: Maaten, Laurens van der, and Geoffrey Hinton. \"Visualizing data using t-SNE.\" Journal of machine learning research 9.Nov (2008): 2579-2605. 1 pbmc <- RunUMAP ( pbmc , dims = 1 : 10 , verbose = FALSE ) Warning message : \u201c The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R - native UWOT using the cosine metric To use Python UMAP via reticulate , set umap . method to ' umap-learn ' and metric to ' correlation ' This message will be shown once per session \u201d 1 2 3 # note that you can set `label = TRUE` or use the LabelClusters function to help label # individual clusters DimPlot ( pbmc , reduction = \"umap\" ) 1 2 3 options ( repr.plot.width = 16 , repr.plot.height = 5 ) FeaturePlot ( pbmc , reduction = \"umap\" , features = c ( \"CST3\" , \"NKG7\" , \"PPBP\" ), ncol = 3 )","title":"UMAP and t-SNE"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#finding-differentially-expressed-features-cluster-biomarkers","text":"A key follow-up step to clustering cells is to find gene markers that are associated with them. We used Seurat's FindAllMarkers function which automates the process for all clusters. The min.pct argument requires a feature to be detected at a minimum percentage in either of the two groups of cells, and the thresh.test argument requires a feature to be differentially expressed (on average) by some amount between the two groups. You can set both of these to 0, but with a dramatic increase in time - since this will test a large number of features that are unlikely to be highly discriminatory. As another option to speed up these computations, max.cells.per.ident can be set. This will downsample each identity class to have no more cells than whatever this is set to. While there is generally going to be a loss in power, the speed increases can be significiant and the most highly differentially expressed features will likely still rise to the top. 1 2 3 4 5 6 7 8 9 10 11 # Scanpy style gene rank plot plot_gene_rank <- function ( markers , n ) { df_plot <- markers %>% group_by ( cluster ) %>% top_n ( 25 , avg_log2FC ) %>% mutate ( rank = factor ( row_number ( desc ( avg_log2FC )))) ggplot ( df_plot , aes ( rank , avg_log2FC )) + geom_text ( aes ( label = gene ), angle = -90 , hjust = 1 ) + facet_wrap ( ~ cluster ) + scale_y_continuous ( expand = expansion ( mult = c ( 0.05 , 0.25 ))) } Several methods for differential expression are supported by Seurat. The default is Wilcoxon rank sum test. 1 2 3 # find markers for every cluster compared to all remaining cells, report only the positive ones pbmc.markers <- FindAllMarkers ( pbmc , test.use = \"wilcox\" , only.pos = TRUE , min.pct = 0.25 , logfc.threshold = 0.25 ) Calculating cluster 0 For a more efficient implementation of the Wilcoxon Rank Sum Test , ( default method for FindMarkers ) please install the limma package -------------------------------------------- install . packages ( ' BiocManager ' ) BiocManager :: install ( ' limma ' ) -------------------------------------------- After installation of limma , Seurat will automatically use the more efficient implementation ( no further action necessary ) . This message will be shown once per session Calculating cluster 1 Calculating cluster 2 Calculating cluster 3 Calculating cluster 4 Calculating cluster 5 Calculating cluster 6 Calculating cluster 7 Calculating cluster 8 1 head ( pbmc.markers ) A data.frame: 6 \u00d7 7 p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene <dbl> <dbl> <dbl> <dbl> <dbl> <fct> <chr> S100A12 4.064804e-197 4.213263 0.978 0.076 1.055467e-192 0 S100A12 VCAN 3.352042e-189 3.484980 0.996 0.104 8.703913e-185 0 VCAN S100A8 4.318649e-186 5.520490 1.000 0.143 1.121380e-181 0 S100A8 CD14 7.936720e-173 2.574749 0.944 0.088 2.060849e-168 0 CD14 S100A9 7.548587e-171 4.954452 0.996 0.197 1.960066e-166 0 S100A9 MNDA 4.262766e-170 3.039318 0.981 0.130 1.106870e-165 0 MNDA 1 2 options ( repr.plot.width = 12 , repr.plot.height = 8 ) plot_gene_rank ( pbmc.markers , 25 ) Student's t test is also supported 1 2 pbmc.markers.t <- FindAllMarkers ( pbmc , test.use = \"t\" , only.pos = TRUE , min.pct = 0.25 , logfc.threshold = 0.25 ) Calculating cluster 0 Calculating cluster 1 Calculating cluster 2 Calculating cluster 3 Calculating cluster 4 Calculating cluster 5 Calculating cluster 6 Calculating cluster 7 Calculating cluster 8 1 plot_gene_rank ( pbmc.markers.t , 25 ) Also logistic regression to test how good each gene is for deciding whether a cell is in a cluster. 1 2 pbmc.markers.lr <- FindAllMarkers ( pbmc , test.use = \"LR\" , only.pos = TRUE , min.pct = 0.25 , logfc.threshold = 0.25 ) Calculating cluster 0 Calculating cluster 1 Calculating cluster 2 Calculating cluster 3 Calculating cluster 4 Calculating cluster 5 Calculating cluster 6 Calculating cluster 7 Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Calculating cluster 8 Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: algorithm did not converge\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d Warning message: \u201cglm.fit: fitted probabilities numerically 0 or 1 occurred\u201d 1 plot_gene_rank ( pbmc.markers.lr , 25 ) Seurat includes several tools for visualizing marker expression. VlnPlot (shows expression probability distributions across clusters), and FeaturePlot (visualizes feature expression on a tSNE or PCA plot) are our most commonly used visualizations. We also suggest exploring RidgePlot, CellScatter, and DotPlot as additional methods to view your dataset. 1 2 3 4 marker_genes <- sort ( c ( 'IL7R' , 'CD79A' , 'MS4A1' , 'CD8A' , 'CD8B' , 'LYZ' , 'CD14' , 'LGALS3' , 'S100A8' , 'GNLY' , 'NKG7' , 'KLRB1' , 'FCGR3A' , 'MS4A7' , 'FCER1A' , 'CST3' , 'PPBP' , 'CCR7' , 'S100A4' )) 1 2 options ( repr.plot.width = 16 , repr.plot.height = 20 ) VlnPlot ( pbmc , features = marker_genes , ncol = 4 ) 1 2 options ( repr.plot.width = 16 , repr.plot.height = 20 ) FeaturePlot ( pbmc , features = marker_genes , ncol = 4 )","title":"Finding differentially expressed features (cluster biomarkers)"},{"location":"tutorials/kb_building_atlas/R/kb_analysis_0_R.html#assigning-cell-type-identity-to-clusters","text":"In this dataset, we can use canonical markers to easily match the de novo clustering to known cell types: Cluster ID Markers Cell Type 0 CD14, LYZ CD14+ Mono 1 IL7R, S100A4 Memory CD4+ T 2 IL7R, CCR7 Naive CD4+ 3 MS4A1, CD79A B 4 FCGR3A, MS4A7 FCGR3A+ Mono 5 GNLY, NKG7 NK 6 CD8A CD8+ T 7 MS4A1, CD79A B 8 PPBP Platelet 1 2 3 options ( repr.plot.width = 6 , repr.plot.height = 7 ) DotPlot ( pbmc , assay = \"RNA\" , features = marker_genes , scale.by = \"size\" ) + coord_flip () 1 2 3 4 5 6 options ( repr.plot.width = 9 , repr.plot.height = 6 ) new.cluster.ids <- c ( \"CD14+ Mono\" , \"Memory CD4 T\" , \"Naive CD4 T\" , \"B1\" , \"FCGR3A+ Mono\" , \"NK\" , \"CD8+ T\" , \"B2\" , \"Platelet\" ) names ( new.cluster.ids ) <- levels ( pbmc ) pbmc <- RenameIdents ( pbmc , new.cluster.ids ) DimPlot ( pbmc , reduction = \"umap\" , label = TRUE , pt.size = 0.5 , label.size = 6 ) + NoLegend () 1 Sys.time () - start_time Time difference of 50.73962 mins 1 sessionInfo () R version 4.0 . 4 ( 2021 - 02 - 15 ) Platform : x86_64 - pc - linux - gnu ( 64 - bit ) Running under : Ubuntu 18.04 . 5 LTS Matrix products : default BLAS : / usr / lib / x86_64 - linux - gnu / openblas / libblas . so . 3 LAPACK : / usr / lib / x86_64 - linux - gnu / libopenblasp - r0 . 2.20 . so locale : [ 1 ] LC_CTYPE = en_US . UTF - 8 LC_NUMERIC = C [ 3 ] LC_TIME = en_US . UTF - 8 LC_COLLATE = en_US . UTF - 8 [ 5 ] LC_MONETARY = en_US . UTF - 8 LC_MESSAGES = en_US . UTF - 8 [ 7 ] LC_PAPER = en_US . UTF - 8 LC_NAME = C [ 9 ] LC_ADDRESS = C LC_TELEPHONE = C [ 11 ] LC_MEASUREMENT = en_US . UTF - 8 LC_IDENTIFICATION = C attached base packages : [ 1 ] stats graphics grDevices utils datasets methods base other attached packages : [ 1 ] patchwork_1 . 1.1 forcats_0 . 5.1 stringr_1 . 4.0 dplyr_1 . 0.5 [ 5 ] purrr_0 . 3.4 readr_1 . 4.0 tidyr_1 . 1.3 tibble_3 . 1.0 [ 9 ] ggplot2_3 . 3.3 tidyverse_1 . 3.0 Matrix_1 . 3 - 2 SeuratObject_4 . 0.0 [ 13 ] Seurat_4 . 0.1 loaded via a namespace ( and not attached ): [ 1 ] Rtsne_0 . 15 colorspace_2 . 0 - 0 deldir_0 . 2 - 10 [ 4 ] ellipsis_0 . 3.1 ggridges_0 . 5.3 IRdisplay_1 . 0 [ 7 ] fs_1 . 5.0 base64enc_0 . 1 - 3 rstudioapi_0 . 13 [ 10 ] spatstat . data_2 . 1 - 0 farver_2 . 1.0 leiden_0 . 3.7 [ 13 ] listenv_0 . 8.0 ggrepel_0 . 9.1 RSpectra_0 . 16 - 0 [ 16 ] lubridate_1 . 7.10 fansi_0 . 4.2 xml2_1 . 3.2 [ 19 ] codetools_0 . 2 - 18 splines_4 . 0.4 polyclip_1 . 10 - 0 [ 22 ] IRkernel_1 . 1.1 jsonlite_1 . 7.2 broom_0 . 7.5 [ 25 ] ica_1 . 0 - 2 cluster_2 . 1.1 dbplyr_2 . 1.0 [ 28 ] png_0 . 1 - 7 uwot_0 . 1.10 shiny_1 . 6.0 [ 31 ] sctransform_0 . 3.2 spatstat . sparse_2 . 0 - 0 compiler_4 . 0.4 [ 34 ] httr_1 . 4.2 backports_1 . 2.1 assertthat_0 . 2.1 [ 37 ] fastmap_1 . 1.0 lazyeval_0 . 2.2 cli_2 . 3.1 [ 40 ] later_1 . 1.0 . 1 htmltools_0 . 5.1 . 1 tools_4 . 0.4 [ 43 ] igraph_1 . 2.6 gtable_0 . 3.0 glue_1 . 4.2 [ 46 ] RANN_2 . 6.1 reshape2_1 . 4.4 Rcpp_1 . 0.6 [ 49 ] scattermore_0 . 7 cellranger_1 . 1.0 vctrs_0 . 3.6 [ 52 ] nlme_3 . 1 - 152 lmtest_0 . 9 - 38 ps_1 . 6.0 [ 55 ] globals_0 . 14.0 rvest_1 . 0.0 mime_0 . 10 [ 58 ] miniUI_0 . 1.1 . 1 lifecycle_1 . 0.0 irlba_2 . 3.3 [ 61 ] goftest_1 . 2 - 2 future_1 . 21.0 MASS_7 . 3 - 53.1 [ 64 ] zoo_1 . 8 - 9 scales_1 . 1.1 spatstat . core_2 . 0 - 0 [ 67 ] hms_1 . 0.0 promises_1 . 2.0 . 1 spatstat . utils_2 . 1 - 0 [ 70 ] parallel_4 . 0.4 RColorBrewer_1 . 1 - 2 reticulate_1 . 18 [ 73 ] pbapply_1 . 4 - 3 gridExtra_2 . 3 rpart_4 . 1 - 15 [ 76 ] stringi_1 . 5.3 repr_1 . 1.3 rlang_0 . 4.10 [ 79 ] pkgconfig_2 . 0.3 matrixStats_0 . 58.0 evaluate_0 . 14 [ 82 ] lattice_0 . 20 - 41 ROCR_1 . 0 - 11 tensor_1 . 5 [ 85 ] labeling_0 . 4.2 htmlwidgets_1 . 5.3 cowplot_1 . 1.1 [ 88 ] tidyselect_1 . 1.0 parallelly_1 . 24.0 RcppAnnoy_0 . 0.18 [ 91 ] plyr_1 . 8.6 magrittr_2 . 0.1 R6_2 . 5.0 [ 94 ] generics_0 . 1.0 pbdZMQ_0 . 3 - 5 DBI_1 . 1.1 [ 97 ] withr_2 . 4.1 haven_2 . 3.1 pillar_1 . 5.1 [ 100 ] mgcv_1 . 8 - 34 fitdistrplus_1 . 1 - 3 survival_3 . 2 - 10 [ 103 ] abind_1 . 4 - 5 future . apply_1 . 7.0 modelr_0 . 1.8 [ 106 ] crayon_1 . 4.1 uuid_0 . 1 - 4 KernSmooth_2 . 23 - 18 [ 109 ] utf8_1 . 2.1 spatstat . geom_2 . 0 - 1 plotly_4 . 9.3 [ 112 ] readxl_1 . 3.1 grid_4 . 0.4 data . table_1 . 14.0 [ 115 ] reprex_1 . 0.0 digest_0 . 6.27 xtable_1 . 8 - 4 [ 118 ] httpuv_1 . 5.5 munsell_0 . 5.0 viridisLite_0 . 3.0 Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"Assigning cell type identity to clusters"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html","text":"Analysis of single-cell RNA-seq data: building and annotating an atlas \u00b6 This Python notebook pre-processes the pbmc_1k v3 dataset from 10X Genomics with kallisto and bustools using kb , and then performs an analysis of the cell types and their marker genes. The notebook was written by A. Sina Booeshaghi and Lior Pachter and is based on three noteboks: - The kallisto | bustools Introduction to single-cell RNA-seq I notebook. - The kallisto | bustools Introduction to single-cell RNA-seq II notebook. - The Scanpy Preprocessing and clustering 3k PBMCs\" notebook . If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Wolf, F. A., Angere, P. and Theis, F.J. SCANPY: large-scale single-cell gene expression data analysis. Genome Biology (2018). doi:10.1186/s13059-017-1382-0 An R notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses. Setup \u00b6 1 2 3 # This is used to time the running of the notebook import time start_time = time . time () Install python packages \u00b6 1 2 3 4 5 %% time # These packages are pre-installed on Google Colab, but are included here to simplify running this notebook locally ! pip install -- quiet matplotlib scikit - learn numpy scipy ! pip3 install -- quiet leidenalg ! pip install -- quiet louvain scanpy \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 4 MB 6 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3 . 2 MB 41 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 2 MB 4 . 4 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 23 . 5 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 6 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 42 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 38 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 6 . 3 MB / s \u001b[? 25 h Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 231 ms , sys : 57 . 1 ms , total : 288 ms Wall time : 19 . 6 s Install kb-python \u00b6 1 2 3 %% time # install kb ! pip install -- quiet kb - python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 110 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 52 . 4 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 41 . 7 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 380 ms , sys : 61 . 1 ms , total : 441 ms Wall time : 31 . 2 s Download the data \u00b6 1 2 3 4 5 6 %% time # Download the data from the 10x website ! wget - q http : // cf .10 xgenomics . com / samples / cell - exp / 3.0.0 / pbmc_1k_v3 / pbmc_1k_v3_fastqs . tar # unpack the downloaded files ! tar - xf pbmc_1k_v3_fastqs . tar CPU times: user 1.41 s, sys: 199 ms, total: 1.6 s Wall time: 3min 3s Download an index \u00b6 This data consists of peripheral blood mononuclear cells from a human, so we download the human index. 1 ! kb ref - d human - i index . idx - g t2g . txt - f1 transcriptome . fasta [ 2021 - 03 - 31 21 : 09 : 56 , 028 ] INFO Downloading files for human from https : // caltech . box . com / shared / static / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz to tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz 100 % 2.23 G / 2.23 G [ 01 : 44 < 00 : 00 , 22.8 MB / s ] [ 2021 - 03 - 31 21 : 11 : 42 , 360 ] INFO Extracting files from tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz Pseudoalignment and counting \u00b6 Run kallisto and bustools \u00b6 1 2 3 4 5 6 %% time ! kb count -- h5ad - i index . idx - g t2g . txt - x 10 xv3 - o output -- filter bustools - t 2 \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R1_001 . fastq . gz \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R2_001 . fastq . gz \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R1_001 . fastq . gz \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R2_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 466 ] INFO Using index index . idx to generate BUS file to output from [ 2021 - 03 - 31 21 : 12 : 22 , 466 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R1_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 467 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R2_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 467 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R1_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 467 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R2_001 . fastq . gz [ 2021 - 03 - 31 21 : 27 : 43 , 495 ] INFO Sorting BUS file output / output . bus to output / tmp / output . s . bus [ 2021 - 03 - 31 21 : 28 : 15 , 485 ] INFO Whitelist not provided [ 2021 - 03 - 31 21 : 28 : 15 , 485 ] INFO Copying pre - packaged 10 XV3 whitelist to output [ 2021 - 03 - 31 21 : 28 : 16 , 575 ] INFO Inspecting BUS file output / tmp / output . s . bus [ 2021 - 03 - 31 21 : 28 : 39 , 940 ] INFO Correcting BUS records in output / tmp / output . s . bus to output / tmp / output . s . c . bus with whitelist output / 10 xv3_whitelist . txt [ 2021 - 03 - 31 21 : 29 : 05 , 490 ] INFO Sorting BUS file output / tmp / output . s . c . bus to output / output . unfiltered . bus [ 2021 - 03 - 31 21 : 29 : 34 , 684 ] INFO Generating count matrix output / counts_unfiltered / cells_x_genes from BUS file output / output . unfiltered . bus [ 2021 - 03 - 31 21 : 29 : 51 , 979 ] INFO Reading matrix output / counts_unfiltered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 30 : 00 , 389 ] INFO Writing matrix to h5ad output / counts_unfiltered / adata . h5ad [ 2021 - 03 - 31 21 : 30 : 01 , 376 ] INFO Filtering with bustools [ 2021 - 03 - 31 21 : 30 : 01 , 376 ] INFO Generating whitelist output / filter_barcodes . txt from BUS file output / output . unfiltered . bus [ 2021 - 03 - 31 21 : 30 : 01 , 623 ] INFO Correcting BUS records in output / output . unfiltered . bus to output / tmp / output . unfiltered . c . bus with whitelist output / filter_barcodes . txt [ 2021 - 03 - 31 21 : 30 : 15 , 206 ] INFO Sorting BUS file output / tmp / output . unfiltered . c . bus to output / output . filtered . bus [ 2021 - 03 - 31 21 : 30 : 37 , 631 ] INFO Generating count matrix output / counts_filtered / cells_x_genes from BUS file output / output . filtered . bus [ 2021 - 03 - 31 21 : 30 : 52 , 494 ] INFO Reading matrix output / counts_filtered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 30 : 58 , 622 ] INFO Writing matrix to h5ad output / counts_filtered / adata . h5ad CPU times : user 8.81 s , sys : 1.03 s , total : 9.84 s Wall time : 18 min 38 s Basic QC \u00b6 1 2 3 4 5 6 7 import numpy as np import pandas as pd import scanpy as sc import anndata from sklearn.decomposition import TruncatedSVD import matplotlib import matplotlib.pyplot as plt 1 2 sc . settings . verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3) sc . settings . set_figure_params ( dpi = 80 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 # load the unfiltered matrix results_file = 'pbmc1k.h5ad' # the file that will store the analysis results adata = anndata . read_h5ad ( \"output/counts_unfiltered/adata.h5ad\" ) adata . var [ \"gene_id\" ] = adata . var . index . values t2g = pd . read_csv ( \"t2g.txt\" , header = None , names = [ \"tid\" , \"gene_id\" , \"gene_name\" ], sep = \" \\t \" ) t2g . index = t2g . gene_id t2g = t2g . loc [ ~ t2g . index . duplicated ( keep = 'first' )] adata . var [ \"gene_name\" ] = adata . var . gene_id . map ( t2g [ \"gene_name\" ]) adata . var . index = adata . var [ \"gene_name\" ] adata . var_names_make_unique () # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx` /usr/local/lib/python3.7/dist-packages/anndata/utils.py:117: UserWarning: Suffix used (-[0-9]+) to deduplicate index values may make index values difficult to interpret. There values with a similar suffixes in the index. Consider using a different delimiter by passing `join={delimiter}`Example key collisions generated by the make_index_unique algorithm: ['SNORD116-1', 'SNORD116-2', 'SNORD116-3', 'SNORD116-4', 'SNORD116-5'] + str(example_colliding_values) 1 adata AnnData object with n_obs \u00d7 n_vars = 259615 \u00d7 60623 var : 'gene_name' , 'gene_id' Test for library saturation \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Create a plot showing genes detected as a function of UMI counts. fig , ax = plt . subplots ( figsize = ( 7 , 7 )) x = np . asarray ( adata . X . sum ( axis = 1 ))[:, 0 ] y = np . asarray ( np . sum ( adata . X > 0 , axis = 1 ))[:, 0 ] ax . scatter ( x , y , color = \"green\" , alpha = 0.25 ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Genes Detected\" ) ax . set_xscale ( 'log' ) ax . set_yscale ( 'log' ) ax . set_xlim ( 1 ) ax . set_ylim ( 1 ) plt . show () This plot is very misleading, as even the small alpha can't accurately show how many points are stacked at one location (This takes about a minute to run since there are a lot of points) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 fig , ax = plt . subplots ( figsize = ( 7 , 7 )) #histogram definition bins = [ 1500 , 1500 ] # number of bins # histogram the data hh , locx , locy = np . histogram2d ( x , y , bins = bins ) # Sort the points by density, so that the densest points are plotted last z = np . array ([ hh [ np . argmax ( a <= locx [ 1 :]), np . argmax ( b <= locy [ 1 :])] for a , b in zip ( x , y )]) idx = z . argsort () x2 , y2 , z2 = x [ idx ], y [ idx ], z [ idx ] s = ax . scatter ( x2 , y2 , c = z2 , cmap = 'Greens' ) fig . colorbar ( s , ax = ax ) ax . set_xscale ( 'log' ) ax . set_yscale ( 'log' ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Genes Detected\" ) ax . set_xlim ( 1 , 10 ** 5 ) ax . set_ylim ( 1 , 10 ** 4 ) plt . show () Examine the knee plot \u00b6 The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #@title Threshold cells according to knee plot { run: \"auto\", vertical-output: true } expected_num_cells = 1178 #@param {type:\"integer\"} knee = np . sort (( np . array ( adata . X . sum ( axis = 1 ))) . flatten ())[:: - 1 ] fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . loglog ( knee , range ( len ( knee )), linewidth = 5 , color = \"g\" ) ax . axvline ( x = knee [ expected_num_cells ], linewidth = 3 , color = \"k\" ) ax . axhline ( y = expected_num_cells , linewidth = 3 , color = \"k\" ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Set of Barcodes\" ) plt . grid ( True , which = \"both\" ) plt . show () Analysis \u00b6 It is useful to examine mitochondrial genes, which are important for quality control. (Lun, McCarthy & Marioni, 2017) write that High proportions are indicative of poor-quality cells (Islam et al. 2014; Ilicic et al. 2016), possibly because of loss of cytoplasmic RNA from perforated cells. The reasoning is that mitochondria are larger than individual transcript molecules and less likely to escape through tears in the cell membrane. Note you can also use the function pp.calculate_qc_metrics to compute the fraction of mitochondrial genes and additional measures. Show those genes that yield the highest fraction of counts in each single cells, across all cells. 1 sc . pl . highest_expr_genes ( adata , n_top = 20 ) normalizing counts per cell WARNING: Some cells have total count of genes equal to zero finished (0:00:00) Filter \u00b6 Begin by filtering cells according to various criteria. First, a filter for genes and cells based on minimum thresholds: 1 2 3 4 5 # Removes cells with less than 1070 umi counts adata = adata [ np . asarray ( adata . X . sum ( axis = 1 )) . reshape ( - 1 ) > 1070 ] # Removes genes with 0 umi counts adata = adata [:, np . asarray ( adata . X . sum ( axis = 0 )) . reshape ( - 1 ) > 0 ] 1 adata View of AnnData object with n_obs \u00d7 n_vars = 1180 \u00d7 31837 var : 'gene_name' , 'gene_id' 1 2 sc . pp . filter_cells ( adata , min_genes = 200 ) sc . pp . filter_genes ( adata , min_cells = 3 ) filtered out 5 cells that have less than 200 genes expressed Trying to set attribute `.obs` of view, copying. filtered out 5884 genes that are detected in less than 3 cells 1 adata AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' var : 'gene_name' , 'gene_id' , 'n_cells' Next, filter by mitochondrial gene content 1 2 3 4 5 6 7 mito_genes = adata . var_names . str . startswith ( 'MT-' ) # for each cell compute fraction of counts in mito genes vs. all genes # the `.A1` is only necessary as X is sparse (to transform to a dense array after summing) adata . obs [ 'percent_mito' ] = np . sum ( adata [:, mito_genes ] . X , axis = 1 ) . A1 / np . sum ( adata . X , axis = 1 ) . A1 # add the total counts per cell as observations-annotation to adata adata . obs [ 'n_counts' ] = adata . X . sum ( axis = 1 ) . A1 Perform a QC check of the counts post-filtering 1 2 sc . pl . violin ( adata , [ 'n_genes' , 'n_counts' , 'percent_mito' ], jitter = 0.4 , multi_panel = True ) ... storing 'gene_name' as categorical 1 2 3 #examine mitochondrial content sc . pl . scatter ( adata , x = 'n_counts' , y = 'percent_mito' ) sc . pl . scatter ( adata , x = 'n_counts' , y = 'n_genes' ) 1 2 # Create a mask to filter out cells with more than 6500 genes, less than 200 genes or less than 0.2 mitochondrial umi counts mask = np . logical_or (( adata . obs . n_genes < 6500 ) . values , ( adata . obs . n_genes > 200 ) . values , ( adata . obs . percent_mito < 0.2 ) . values ) 1 2 #filter adata = adata [ mask , :] 1 adata View of AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' , 'percent_mito' , 'n_counts' var : 'gene_name' , 'gene_id' , 'n_cells' Normalize counts \u00b6 Total-count normalize (library-size correct) the data matrix $\\mathbf{X}$ to 10,000 reads per cell, so that counts become comparable among cells. 1 2 # normalize counts in each cell to be equal sc . pp . normalize_total ( adata , target_sum = 10 ** 4 ) /usr/local/lib/python3.7/dist-packages/scanpy/preprocessing/_normalization.py:138: UserWarning: Revieved a view of an AnnData. Making a copy. view_to_actual(adata) normalizing counts per cell finished (0:00:00) Log the counts 1 2 # Replace raw counts with their logarithm sc . pp . log1p ( adata ) Lets now look at the highest expressed genes after filtering, normalization, and log 1 sc . pl . highest_expr_genes ( adata , n_top = 20 ) normalizing counts per cell finished (0:00:00) Set the .raw attribute of AnnData object to the normalized and logarithmized raw gene expression for later use in differential testing and visualizations of gene expression. This simply freezes the state of the AnnData object. The unnormalized data is stored in .raw . 1 adata . raw = adata **Note** The result of the following highly-variable-genes detection is stored as an annotation in `.var.highly_variable` and auto-detected by PCA and hence, `sc.pp.neighbors` and subsequent manifold/graph tools. Identify highly-variable genes. \u00b6 1 2 # flavor=\"cell_ranger\" is consistent with Seurat and flavor=\"suerat\" is not consistent with Seurat sc . pp . highly_variable_genes ( adata , min_mean = 0.01 , max_mean = 8 , min_disp = 1 , n_top_genes = 2000 , flavor = \"cell_ranger\" , n_bins = 20 ) If you pass ` n_top_genes ` , all cutoffs are ignored . extracting highly variable genes / usr / local / lib / python3 .7 / dist - packages / statsmodels / tools / _testing . py : 19 : FutureWarning : pandas . util . testing is deprecated . Use the functions in the public API at pandas . testing instead . import pandas.util.testing as tm finished ( 0 : 00 : 01 ) --> added 'highly_variable' , boolean vector ( adata . var ) 'means' , float vector ( adata . var ) 'dispersions' , float vector ( adata . var ) 'dispersions_norm' , float vector ( adata . var ) 1 sc . pl . highly_variable_genes ( adata ) Regress out effects of total counts per cell and the percentage of mitochondrial genes expressed. Scale the data to unit variance. We do not regress out as per https://github.com/theislab/scanpy/issues/526 1 # sc.pp.regress_out(adata, ['n_counts', 'percent_mito']) Scaling the data \u00b6 Scale each gene to unit variance. Clip values exceeding standard deviation 10. 1 sc . pp . scale ( adata , max_value = 10 ) ... as `zero_center=True`, sparse input is densified and may lead to large memory consumption Principal component analysis \u00b6 Reduce the dimensionality of the data by running principal component analysis (PCA), which reveals the main axes of variation and denoises the data. 1 2 # We perform PCA on just the highly variable genes sc . tl . pca ( adata , svd_solver = 'arpack' , use_highly_variable = True ) computing PCA on highly variable genes with n_comps = 50 finished ( 0 : 00 : 00 ) 1 sc . pl . pca ( adata , color = 'CST3' ) Let us inspect the contribution of single PCs to the total variance in the data. This gives us information about how many PCs we should consider in order to compute the neighborhood relations of cells, e.g. used in the clustering function sc.tl.leiden() or tSNE sc.tl.tsne() . In our experience, often, a rough estimate of the number of PCs does fine. 1 sc . pl . pca_variance_ratio ( adata , log = True ) 1 adata AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' , 'percent_mito' , 'n_counts' var : 'gene_name' , 'gene_id' , 'n_cells' , 'highly_variable' , 'means' , 'dispersions' , 'dispersions_norm' , 'mean' , 'std' uns : 'log1p' , 'hvg' , 'pca' obsm : 'X_pca' varm : 'PCs' Compute the neighborhood graph \u00b6 Next we compute the neighborhood graph of cells using the PCA representation of the data matrix. You might simply use default values here. In order to be consistent with Seurat's results, we use the following values. 1 sc . pp . neighbors ( adata , n_neighbors = 20 , n_pcs = 10 ) computing neighbors using ' X_pca ' with n_pcs = 10 finished : added to `. uns [ ' neighbors ' ]` `. obsp [ ' distances ' ]`, distances for each pair of neighbors `. obsp [ ' connectivities ' ]`, weighted adjacency matrix ( 0 : 00 : 29 ) Embed the neighborhood graph \u00b6 UMAP \u00b6 UMAP (UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction) is a manifold learning technique that can also be used to visualize cells. It was published in: McInnes, Leland, John Healy, and James Melville. \"Umap: Uniform manifold approximation and projection for dimension reduction.\" arXiv preprint arXiv:1802.03426 (2018). We run that to visualize the results: 1 2 3 tl.paga(adata) pl.paga(adata, plot=False) # remove `plot=False` if you want to see the coarse-grained graph tl.umap(adata, init_pos='paga') 1 sc . tl . umap ( adata ) computing UMAP finished: added 'X_umap', UMAP coordinates (adata.obsm) (0:00:04) 1 sc . pl . umap ( adata , color = [ 'CST3' , 'NKG7' , 'PPBP' ]) Cluster the neighborhood graph \u00b6 Clustering \u00b6 There are many algorithms for clustering cells, and while they have been compared in detail in various benchmarks (see e.g., Duo et al. 2018 ), there is no univerally agreed upon method. Here we demonstrate clustering using Louvain clustering , which is a popular method for clustering single-cell RNA-seq data. The method was published in Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \"Fast unfolding of communities in large networks\". Journal of Statistical Mechanics: Theory and Experiment. 2008 (10): P10008. Note that Louvain clustering directly clusters the neighborhood graph of cells, which we already computed in the previous section. 1 sc . tl . louvain ( adata , resolution = 0.5 , random_state = 42 ) running Louvain clustering using the \"louvain\" package of Traag (2017) finished: found 8 clusters and added 'louvain', the cluster labels (adata.obs, categorical) (0:00:00) A plot of the clusters is shown below: 1 sc . pl . umap ( adata , color = [ 'louvain' , 'CST3' , 'NKG7' ]) Find marker genes \u00b6 A key aspect of annotating a cell atlas is identifying \"marker genes\". These are genes specific to individual clusters that \"mark\" them, and are important both for assigning functions to cell clusters, and for designing downstream experiments to probe activity of clusters. A gene marker analysis begins with ranking genes in each cluster according to how different they are relative to other clusters. Typically the t-test is used for this purpose. 1 2 sc . tl . rank_genes_groups ( adata , 'louvain' , method = 't-test' , corr_method = \"bonferroni\" ) sc . pl . rank_genes_groups ( adata , n_genes = 25 , sharey = False ) ranking genes finished: added to `.uns['rank_genes_groups']` 'names', sorted np.recarray to be indexed by group ids 'scores', sorted np.recarray to be indexed by group ids 'logfoldchanges', sorted np.recarray to be indexed by group ids 'pvals', sorted np.recarray to be indexed by group ids 'pvals_adj', sorted np.recarray to be indexed by group ids (0:00:00) 1 sc . settings . verbosity = 2 # reduce the verbosity An alternative to the parametric t-test is the non-parametric Wilcoxon rank-sum (Mann-Whitney-U) test. 1 2 sc . tl . rank_genes_groups ( adata , 'louvain' , method = 'wilcoxon' , corr_method = \"bonferroni\" ) sc . pl . rank_genes_groups ( adata , n_genes = 25 , sharey = False ) ranking genes finished (0:00:04) As an alternative, genes can be ranked using logistic regression (see Natranos et al. (2018) ). 1 tmp = adata . copy () 1 2 sc . tl . rank_genes_groups ( tmp , 'louvain' , method = 'logreg' ) sc . pl . rank_genes_groups ( tmp , n_genes = 25 , sharey = False ) ranking genes / usr / local / lib / python3 .7 / dist - packages / sklearn / linear_model / _logistic . py: 940 : ConvergenceWarning: lbfgs failed to converge ( status = 1 ) : STOP: TOTAL NO . of ITERATIONS REACHED LIMIT . Increase the number of iterations ( max_iter ) or scale the data as shown in: https: //scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https: //scikit-learn.org/stable/modules/linear_model.html#logistic-regression extra_warning_msg = _LOGISTIC_SOLVER_CONVERGENCE_MSG ) finished ( 0 : 00 : 20 ) With the exceptions of IL7R , which is only found by the t-test and FCER1A , which is only found by the other two appraoches, all marker genes are recovered in all approaches. Louvain Group Markers Cell Type 0 IL7R CD4 T cells 1 CD14, LYZ CD14+ Monocytes 2 MS4A1 B cells 3 GNLY, NKG7 NK cells 4 FCGR3A, MS4A7 FCGR3A+ Monocytes 5 CD8A CD8 T cells 6 MS4A1 B cells Let us also define a list of marker genes for later reference. 1 2 3 marker_genes = [ 'IL7R' , 'CD79A' , 'MS4A1' , 'CD8A' , 'CD8B' , 'LYZ' , 'CD14' , 'LGALS3' , 'S100A8' , 'GNLY' , 'NKG7' , 'KLRB1' , 'FCGR3A' , 'MS4A7' , 'FCER1A' , 'CST3' , 'PPBP' ] Reload the object that has been save with the Wilcoxon Rank-Sum test result. Show the 10 top ranked genes per cluster 0, 1, ..., 7 in a dataframe. 1 pd . DataFrame ( adata . uns [ 'rank_genes_groups' ][ 'names' ]) . head ( 5 ) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0 1 2 3 4 5 6 7 0 S100A8 IL7R RPL32 IGHD NKG7 CST3 KLRB1 CD79A 1 S100A9 IL32 RPS12 IGHM CTSW HLA-DPA1 KLRG1 IGKC 2 VCAN TRAC RPL30 CD37 GZMA NPC2 NKG7 CD79B 3 S100A12 LDHB RPL35A CD79A CST7 HLA-DPB1 IL32 BANK1 4 FOS BCL11B RPS15A MS4A1 GZMM FCER1G GZMA TNFRSF13C Get a table with the scores and groups. 1 2 3 4 5 result = adata . uns [ 'rank_genes_groups' ] groups = result [ 'names' ] . dtype . names pd . DataFrame ( { group + '_' + key [: 1 ]: result [ key ][ group ] for group in groups for key in [ 'names' , 'pvals' ]}) . head ( 5 ) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0_n 0_p 1_n 1_p 2_n 2_p 3_n 3_p 4_n 4_p 5_n 5_p 6_n 6_p 7_n 7_p 0 S100A8 4.325218e-141 IL7R 3.851653e-57 RPL32 7.151780e-62 IGHD 1.303809e-75 NKG7 9.495682e-64 CST3 1.595268e-42 KLRB1 8.274802e-41 CD79A 3.916006e-28 1 S100A9 1.357507e-140 IL32 3.390931e-49 RPS12 4.320062e-61 IGHM 1.624935e-74 CTSW 1.281002e-58 HLA-DPA1 9.721044e-42 KLRG1 1.245774e-34 IGKC 7.115329e-27 2 VCAN 1.698042e-136 TRAC 5.952130e-49 RPL30 2.823714e-59 CD37 1.704719e-73 GZMA 5.700633e-57 NPC2 5.443673e-33 NKG7 7.556990e-32 CD79B 6.053017e-26 3 S100A12 2.736086e-136 LDHB 6.487053e-46 RPL35A 6.098855e-58 CD79A 2.184785e-70 CST7 1.401230e-56 HLA-DPB1 7.522829e-33 IL32 1.135243e-30 BANK1 6.905314e-26 4 FOS 3.264834e-132 BCL11B 4.040622e-42 RPS15A 6.949561e-58 MS4A1 6.806009e-70 GZMM 5.222455e-51 FCER1G 3.106843e-32 GZMA 1.885113e-30 TNFRSF13C 7.946763e-24 Compare to a single cluster. 1 2 sc . tl . rank_genes_groups ( adata , 'louvain' , groups = [ '0' ], reference = '1' , method = 'wilcoxon' ) sc . pl . rank_genes_groups ( adata , groups = [ '0' ], n_genes = 20 ) ranking genes finished (0:00:01) If we want a more detailed view for a certain group, use sc.pl.rank_genes_groups_violin . 1 sc . pl . rank_genes_groups_violin ( adata , groups = '0' , n_genes = 8 ) If you want to compare a certain gene across groups, use the following. 1 sc . pl . violin ( adata , marker_genes , groupby = 'louvain' ) Actually mark the cell types. 1 pd . DataFrame ( result [ \"names\" ]) . head ( 10 ) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0 1 2 3 4 5 6 7 0 S100A8 IL7R RPL32 IGHD NKG7 CST3 KLRB1 CD79A 1 S100A9 IL32 RPS12 IGHM CTSW HLA-DPA1 KLRG1 IGKC 2 VCAN TRAC RPL30 CD37 GZMA NPC2 NKG7 CD79B 3 S100A12 LDHB RPL35A CD79A CST7 HLA-DPB1 IL32 BANK1 4 FOS BCL11B RPS15A MS4A1 GZMM FCER1G GZMA TNFRSF13C 5 MNDA CD3D RPS6 CD74 PRF1 COTL1 CTSW MS4A1 6 LYZ CD3E RPS14 TCL1A HCST AIF1 CCL5 TCF4 7 SRGN CD3G RPS3A CD79B KLRD1 CTSZ IL7R CD74 8 FCN1 TCF7 RPS28 LINC00926 CCL5 HLA-DRA AQP3 HLA-DQA1 9 DUSP1 CD2 RPS27 BCL11A B2M HLA-DRB1 SLC4A10 LINC00926 Recall Louvain Group Markers Cell Type 0 IL7R CD4 T cells 1 CD14, LYZ CD14+ Monocytes 2 MS4A1 B cells 3 GNLY, NKG7 NK cells 4 FCGR3A, MS4A7 FCGR3A+ Monocytes 5 CD8A CD8 T cells 6 MS4A1 B cells 1 2 3 4 5 6 7 8 9 10 11 ## Map the gene ids to a cluster label # Each cluster (index in the list) corresponds to a cell type new_cluster_names = [ \"CD4 T\" , \"B Cells\" , \"NK\" , \"CD14 Monocytes\" , \"FCGR3A Monocytes\" , \"CD8 T\" , \"B-2\" , ] 1 2 # Relabel the clusters # adata.rename_categories('louvain', new_cluster_names) 1 sc . pl . umap ( adata , color = 'louvain' , legend_loc = 'on data' , title = '' , frameon = False ) Now that we annotated the cell types, let us visualize the marker genes. 1 ax = sc . pl . dotplot ( adata , marker_genes , groupby = 'louvain' ) There is also a very compact violin plot. 1 ax = sc . pl . stacked_violin ( adata , marker_genes , groupby = 'louvain' , rotation = 90 ) Note that as a result of the analysis the adata object has accumulated several annotations: 1 adata AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' , 'percent_mito' , 'n_counts' , 'louvain' var : 'gene_name' , 'gene_id' , 'n_cells' , 'highly_variable' , 'means' , 'dispersions' , 'dispersions_norm' , 'mean' , 'std' uns : 'log1p' , 'hvg' , 'pca' , 'neighbors' , 'umap' , 'louvain' , 'louvain_colors' , 'rank_genes_groups' obsm : 'X_pca' , 'X_umap' varm : 'PCs' obsp : 'distances' , 'connectivities' If you want to export to \"csv\", you have the following options: 1 2 3 4 5 6 7 8 9 10 11 # Export single fields of the annotation of observations # adata.obs[['n_counts', 'louvain_groups']].to_csv( # './write/pbmc3k_corrected_louvain_groups.csv') # Export single columns of the multidimensional annotation # adata.obsm.to_df()[['X_pca1', 'X_pca2']].to_csv( # './write/pbmc3k_corrected_X_pca.csv') # Or export everything except the data using `.write_csvs`. # Set `skip_data=False` if you also want to export the data. # adata.write_csvs(results_file[:-5], ) 1 2 # Running time of the notebook print ( \" {:.2f} minutes\" . format (( time . time () - start_time ) / 60 )) 26.77 minutes Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located . 1","title":"Python"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#analysis-of-single-cell-rna-seq-data-building-and-annotating-an-atlas","text":"This Python notebook pre-processes the pbmc_1k v3 dataset from 10X Genomics with kallisto and bustools using kb , and then performs an analysis of the cell types and their marker genes. The notebook was written by A. Sina Booeshaghi and Lior Pachter and is based on three noteboks: - The kallisto | bustools Introduction to single-cell RNA-seq I notebook. - The kallisto | bustools Introduction to single-cell RNA-seq II notebook. - The Scanpy Preprocessing and clustering 3k PBMCs\" notebook . If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Wolf, F. A., Angere, P. and Theis, F.J. SCANPY: large-scale single-cell gene expression data analysis. Genome Biology (2018). doi:10.1186/s13059-017-1382-0 An R notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses.","title":"Analysis of single-cell RNA-seq data: building and annotating an atlas"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#setup","text":"1 2 3 # This is used to time the running of the notebook import time start_time = time . time ()","title":"Setup"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#install-python-packages","text":"1 2 3 4 5 %% time # These packages are pre-installed on Google Colab, but are included here to simplify running this notebook locally ! pip install -- quiet matplotlib scikit - learn numpy scipy ! pip3 install -- quiet leidenalg ! pip install -- quiet louvain scanpy \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 4 MB 6 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3 . 2 MB 41 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 2 MB 4 . 4 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 23 . 5 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 6 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 42 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 38 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 6 . 3 MB / s \u001b[? 25 h Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 231 ms , sys : 57 . 1 ms , total : 288 ms Wall time : 19 . 6 s","title":"Install python packages"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#install-kb-python","text":"1 2 3 %% time # install kb ! pip install -- quiet kb - python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 110 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 52 . 4 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 41 . 7 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 380 ms , sys : 61 . 1 ms , total : 441 ms Wall time : 31 . 2 s","title":"Install kb-python"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#download-the-data","text":"1 2 3 4 5 6 %% time # Download the data from the 10x website ! wget - q http : // cf .10 xgenomics . com / samples / cell - exp / 3.0.0 / pbmc_1k_v3 / pbmc_1k_v3_fastqs . tar # unpack the downloaded files ! tar - xf pbmc_1k_v3_fastqs . tar CPU times: user 1.41 s, sys: 199 ms, total: 1.6 s Wall time: 3min 3s","title":"Download the data"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#download-an-index","text":"This data consists of peripheral blood mononuclear cells from a human, so we download the human index. 1 ! kb ref - d human - i index . idx - g t2g . txt - f1 transcriptome . fasta [ 2021 - 03 - 31 21 : 09 : 56 , 028 ] INFO Downloading files for human from https : // caltech . box . com / shared / static / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz to tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz 100 % 2.23 G / 2.23 G [ 01 : 44 < 00 : 00 , 22.8 MB / s ] [ 2021 - 03 - 31 21 : 11 : 42 , 360 ] INFO Extracting files from tmp / v1nm7lpnqz5syh8dyzdk2zs8bglncfib . gz","title":"Download an index"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#pseudoalignment-and-counting","text":"","title":"Pseudoalignment and counting"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#run-kallisto-and-bustools","text":"1 2 3 4 5 6 %% time ! kb count -- h5ad - i index . idx - g t2g . txt - x 10 xv3 - o output -- filter bustools - t 2 \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R1_001 . fastq . gz \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R2_001 . fastq . gz \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R1_001 . fastq . gz \\ pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R2_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 466 ] INFO Using index index . idx to generate BUS file to output from [ 2021 - 03 - 31 21 : 12 : 22 , 466 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R1_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 467 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L001_R2_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 467 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R1_001 . fastq . gz [ 2021 - 03 - 31 21 : 12 : 22 , 467 ] INFO pbmc_1k_v3_fastqs / pbmc_1k_v3_S1_L002_R2_001 . fastq . gz [ 2021 - 03 - 31 21 : 27 : 43 , 495 ] INFO Sorting BUS file output / output . bus to output / tmp / output . s . bus [ 2021 - 03 - 31 21 : 28 : 15 , 485 ] INFO Whitelist not provided [ 2021 - 03 - 31 21 : 28 : 15 , 485 ] INFO Copying pre - packaged 10 XV3 whitelist to output [ 2021 - 03 - 31 21 : 28 : 16 , 575 ] INFO Inspecting BUS file output / tmp / output . s . bus [ 2021 - 03 - 31 21 : 28 : 39 , 940 ] INFO Correcting BUS records in output / tmp / output . s . bus to output / tmp / output . s . c . bus with whitelist output / 10 xv3_whitelist . txt [ 2021 - 03 - 31 21 : 29 : 05 , 490 ] INFO Sorting BUS file output / tmp / output . s . c . bus to output / output . unfiltered . bus [ 2021 - 03 - 31 21 : 29 : 34 , 684 ] INFO Generating count matrix output / counts_unfiltered / cells_x_genes from BUS file output / output . unfiltered . bus [ 2021 - 03 - 31 21 : 29 : 51 , 979 ] INFO Reading matrix output / counts_unfiltered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 30 : 00 , 389 ] INFO Writing matrix to h5ad output / counts_unfiltered / adata . h5ad [ 2021 - 03 - 31 21 : 30 : 01 , 376 ] INFO Filtering with bustools [ 2021 - 03 - 31 21 : 30 : 01 , 376 ] INFO Generating whitelist output / filter_barcodes . txt from BUS file output / output . unfiltered . bus [ 2021 - 03 - 31 21 : 30 : 01 , 623 ] INFO Correcting BUS records in output / output . unfiltered . bus to output / tmp / output . unfiltered . c . bus with whitelist output / filter_barcodes . txt [ 2021 - 03 - 31 21 : 30 : 15 , 206 ] INFO Sorting BUS file output / tmp / output . unfiltered . c . bus to output / output . filtered . bus [ 2021 - 03 - 31 21 : 30 : 37 , 631 ] INFO Generating count matrix output / counts_filtered / cells_x_genes from BUS file output / output . filtered . bus [ 2021 - 03 - 31 21 : 30 : 52 , 494 ] INFO Reading matrix output / counts_filtered / cells_x_genes . mtx [ 2021 - 03 - 31 21 : 30 : 58 , 622 ] INFO Writing matrix to h5ad output / counts_filtered / adata . h5ad CPU times : user 8.81 s , sys : 1.03 s , total : 9.84 s Wall time : 18 min 38 s","title":"Run kallisto and bustools"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#basic-qc","text":"1 2 3 4 5 6 7 import numpy as np import pandas as pd import scanpy as sc import anndata from sklearn.decomposition import TruncatedSVD import matplotlib import matplotlib.pyplot as plt 1 2 sc . settings . verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3) sc . settings . set_figure_params ( dpi = 80 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 # load the unfiltered matrix results_file = 'pbmc1k.h5ad' # the file that will store the analysis results adata = anndata . read_h5ad ( \"output/counts_unfiltered/adata.h5ad\" ) adata . var [ \"gene_id\" ] = adata . var . index . values t2g = pd . read_csv ( \"t2g.txt\" , header = None , names = [ \"tid\" , \"gene_id\" , \"gene_name\" ], sep = \" \\t \" ) t2g . index = t2g . gene_id t2g = t2g . loc [ ~ t2g . index . duplicated ( keep = 'first' )] adata . var [ \"gene_name\" ] = adata . var . gene_id . map ( t2g [ \"gene_name\" ]) adata . var . index = adata . var [ \"gene_name\" ] adata . var_names_make_unique () # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx` /usr/local/lib/python3.7/dist-packages/anndata/utils.py:117: UserWarning: Suffix used (-[0-9]+) to deduplicate index values may make index values difficult to interpret. There values with a similar suffixes in the index. Consider using a different delimiter by passing `join={delimiter}`Example key collisions generated by the make_index_unique algorithm: ['SNORD116-1', 'SNORD116-2', 'SNORD116-3', 'SNORD116-4', 'SNORD116-5'] + str(example_colliding_values) 1 adata AnnData object with n_obs \u00d7 n_vars = 259615 \u00d7 60623 var : 'gene_name' , 'gene_id'","title":"Basic QC"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#test-for-library-saturation","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Create a plot showing genes detected as a function of UMI counts. fig , ax = plt . subplots ( figsize = ( 7 , 7 )) x = np . asarray ( adata . X . sum ( axis = 1 ))[:, 0 ] y = np . asarray ( np . sum ( adata . X > 0 , axis = 1 ))[:, 0 ] ax . scatter ( x , y , color = \"green\" , alpha = 0.25 ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Genes Detected\" ) ax . set_xscale ( 'log' ) ax . set_yscale ( 'log' ) ax . set_xlim ( 1 ) ax . set_ylim ( 1 ) plt . show () This plot is very misleading, as even the small alpha can't accurately show how many points are stacked at one location (This takes about a minute to run since there are a lot of points) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 fig , ax = plt . subplots ( figsize = ( 7 , 7 )) #histogram definition bins = [ 1500 , 1500 ] # number of bins # histogram the data hh , locx , locy = np . histogram2d ( x , y , bins = bins ) # Sort the points by density, so that the densest points are plotted last z = np . array ([ hh [ np . argmax ( a <= locx [ 1 :]), np . argmax ( b <= locy [ 1 :])] for a , b in zip ( x , y )]) idx = z . argsort () x2 , y2 , z2 = x [ idx ], y [ idx ], z [ idx ] s = ax . scatter ( x2 , y2 , c = z2 , cmap = 'Greens' ) fig . colorbar ( s , ax = ax ) ax . set_xscale ( 'log' ) ax . set_yscale ( 'log' ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Genes Detected\" ) ax . set_xlim ( 1 , 10 ** 5 ) ax . set_ylim ( 1 , 10 ** 4 ) plt . show ()","title":"Test for library saturation"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#examine-the-knee-plot","text":"The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #@title Threshold cells according to knee plot { run: \"auto\", vertical-output: true } expected_num_cells = 1178 #@param {type:\"integer\"} knee = np . sort (( np . array ( adata . X . sum ( axis = 1 ))) . flatten ())[:: - 1 ] fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . loglog ( knee , range ( len ( knee )), linewidth = 5 , color = \"g\" ) ax . axvline ( x = knee [ expected_num_cells ], linewidth = 3 , color = \"k\" ) ax . axhline ( y = expected_num_cells , linewidth = 3 , color = \"k\" ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Set of Barcodes\" ) plt . grid ( True , which = \"both\" ) plt . show ()","title":"Examine the knee plot"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#analysis","text":"It is useful to examine mitochondrial genes, which are important for quality control. (Lun, McCarthy & Marioni, 2017) write that High proportions are indicative of poor-quality cells (Islam et al. 2014; Ilicic et al. 2016), possibly because of loss of cytoplasmic RNA from perforated cells. The reasoning is that mitochondria are larger than individual transcript molecules and less likely to escape through tears in the cell membrane. Note you can also use the function pp.calculate_qc_metrics to compute the fraction of mitochondrial genes and additional measures. Show those genes that yield the highest fraction of counts in each single cells, across all cells. 1 sc . pl . highest_expr_genes ( adata , n_top = 20 ) normalizing counts per cell WARNING: Some cells have total count of genes equal to zero finished (0:00:00)","title":"Analysis"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#filter","text":"Begin by filtering cells according to various criteria. First, a filter for genes and cells based on minimum thresholds: 1 2 3 4 5 # Removes cells with less than 1070 umi counts adata = adata [ np . asarray ( adata . X . sum ( axis = 1 )) . reshape ( - 1 ) > 1070 ] # Removes genes with 0 umi counts adata = adata [:, np . asarray ( adata . X . sum ( axis = 0 )) . reshape ( - 1 ) > 0 ] 1 adata View of AnnData object with n_obs \u00d7 n_vars = 1180 \u00d7 31837 var : 'gene_name' , 'gene_id' 1 2 sc . pp . filter_cells ( adata , min_genes = 200 ) sc . pp . filter_genes ( adata , min_cells = 3 ) filtered out 5 cells that have less than 200 genes expressed Trying to set attribute `.obs` of view, copying. filtered out 5884 genes that are detected in less than 3 cells 1 adata AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' var : 'gene_name' , 'gene_id' , 'n_cells' Next, filter by mitochondrial gene content 1 2 3 4 5 6 7 mito_genes = adata . var_names . str . startswith ( 'MT-' ) # for each cell compute fraction of counts in mito genes vs. all genes # the `.A1` is only necessary as X is sparse (to transform to a dense array after summing) adata . obs [ 'percent_mito' ] = np . sum ( adata [:, mito_genes ] . X , axis = 1 ) . A1 / np . sum ( adata . X , axis = 1 ) . A1 # add the total counts per cell as observations-annotation to adata adata . obs [ 'n_counts' ] = adata . X . sum ( axis = 1 ) . A1 Perform a QC check of the counts post-filtering 1 2 sc . pl . violin ( adata , [ 'n_genes' , 'n_counts' , 'percent_mito' ], jitter = 0.4 , multi_panel = True ) ... storing 'gene_name' as categorical 1 2 3 #examine mitochondrial content sc . pl . scatter ( adata , x = 'n_counts' , y = 'percent_mito' ) sc . pl . scatter ( adata , x = 'n_counts' , y = 'n_genes' ) 1 2 # Create a mask to filter out cells with more than 6500 genes, less than 200 genes or less than 0.2 mitochondrial umi counts mask = np . logical_or (( adata . obs . n_genes < 6500 ) . values , ( adata . obs . n_genes > 200 ) . values , ( adata . obs . percent_mito < 0.2 ) . values ) 1 2 #filter adata = adata [ mask , :] 1 adata View of AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' , 'percent_mito' , 'n_counts' var : 'gene_name' , 'gene_id' , 'n_cells'","title":"Filter"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#normalize-counts","text":"Total-count normalize (library-size correct) the data matrix $\\mathbf{X}$ to 10,000 reads per cell, so that counts become comparable among cells. 1 2 # normalize counts in each cell to be equal sc . pp . normalize_total ( adata , target_sum = 10 ** 4 ) /usr/local/lib/python3.7/dist-packages/scanpy/preprocessing/_normalization.py:138: UserWarning: Revieved a view of an AnnData. Making a copy. view_to_actual(adata) normalizing counts per cell finished (0:00:00) Log the counts 1 2 # Replace raw counts with their logarithm sc . pp . log1p ( adata ) Lets now look at the highest expressed genes after filtering, normalization, and log 1 sc . pl . highest_expr_genes ( adata , n_top = 20 ) normalizing counts per cell finished (0:00:00) Set the .raw attribute of AnnData object to the normalized and logarithmized raw gene expression for later use in differential testing and visualizations of gene expression. This simply freezes the state of the AnnData object. The unnormalized data is stored in .raw . 1 adata . raw = adata **Note** The result of the following highly-variable-genes detection is stored as an annotation in `.var.highly_variable` and auto-detected by PCA and hence, `sc.pp.neighbors` and subsequent manifold/graph tools.","title":"Normalize counts"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#identify-highly-variable-genes","text":"1 2 # flavor=\"cell_ranger\" is consistent with Seurat and flavor=\"suerat\" is not consistent with Seurat sc . pp . highly_variable_genes ( adata , min_mean = 0.01 , max_mean = 8 , min_disp = 1 , n_top_genes = 2000 , flavor = \"cell_ranger\" , n_bins = 20 ) If you pass ` n_top_genes ` , all cutoffs are ignored . extracting highly variable genes / usr / local / lib / python3 .7 / dist - packages / statsmodels / tools / _testing . py : 19 : FutureWarning : pandas . util . testing is deprecated . Use the functions in the public API at pandas . testing instead . import pandas.util.testing as tm finished ( 0 : 00 : 01 ) --> added 'highly_variable' , boolean vector ( adata . var ) 'means' , float vector ( adata . var ) 'dispersions' , float vector ( adata . var ) 'dispersions_norm' , float vector ( adata . var ) 1 sc . pl . highly_variable_genes ( adata ) Regress out effects of total counts per cell and the percentage of mitochondrial genes expressed. Scale the data to unit variance. We do not regress out as per https://github.com/theislab/scanpy/issues/526 1 # sc.pp.regress_out(adata, ['n_counts', 'percent_mito'])","title":"Identify highly-variable genes."},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#scaling-the-data","text":"Scale each gene to unit variance. Clip values exceeding standard deviation 10. 1 sc . pp . scale ( adata , max_value = 10 ) ... as `zero_center=True`, sparse input is densified and may lead to large memory consumption","title":"Scaling the data"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#principal-component-analysis","text":"Reduce the dimensionality of the data by running principal component analysis (PCA), which reveals the main axes of variation and denoises the data. 1 2 # We perform PCA on just the highly variable genes sc . tl . pca ( adata , svd_solver = 'arpack' , use_highly_variable = True ) computing PCA on highly variable genes with n_comps = 50 finished ( 0 : 00 : 00 ) 1 sc . pl . pca ( adata , color = 'CST3' ) Let us inspect the contribution of single PCs to the total variance in the data. This gives us information about how many PCs we should consider in order to compute the neighborhood relations of cells, e.g. used in the clustering function sc.tl.leiden() or tSNE sc.tl.tsne() . In our experience, often, a rough estimate of the number of PCs does fine. 1 sc . pl . pca_variance_ratio ( adata , log = True ) 1 adata AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' , 'percent_mito' , 'n_counts' var : 'gene_name' , 'gene_id' , 'n_cells' , 'highly_variable' , 'means' , 'dispersions' , 'dispersions_norm' , 'mean' , 'std' uns : 'log1p' , 'hvg' , 'pca' obsm : 'X_pca' varm : 'PCs'","title":"Principal component analysis"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#compute-the-neighborhood-graph","text":"Next we compute the neighborhood graph of cells using the PCA representation of the data matrix. You might simply use default values here. In order to be consistent with Seurat's results, we use the following values. 1 sc . pp . neighbors ( adata , n_neighbors = 20 , n_pcs = 10 ) computing neighbors using ' X_pca ' with n_pcs = 10 finished : added to `. uns [ ' neighbors ' ]` `. obsp [ ' distances ' ]`, distances for each pair of neighbors `. obsp [ ' connectivities ' ]`, weighted adjacency matrix ( 0 : 00 : 29 )","title":"Compute the neighborhood graph"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#embed-the-neighborhood-graph","text":"","title":"Embed the neighborhood graph"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#umap","text":"UMAP (UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction) is a manifold learning technique that can also be used to visualize cells. It was published in: McInnes, Leland, John Healy, and James Melville. \"Umap: Uniform manifold approximation and projection for dimension reduction.\" arXiv preprint arXiv:1802.03426 (2018). We run that to visualize the results: 1 2 3 tl.paga(adata) pl.paga(adata, plot=False) # remove `plot=False` if you want to see the coarse-grained graph tl.umap(adata, init_pos='paga') 1 sc . tl . umap ( adata ) computing UMAP finished: added 'X_umap', UMAP coordinates (adata.obsm) (0:00:04) 1 sc . pl . umap ( adata , color = [ 'CST3' , 'NKG7' , 'PPBP' ])","title":"UMAP"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#cluster-the-neighborhood-graph","text":"","title":"Cluster the neighborhood graph"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#clustering","text":"There are many algorithms for clustering cells, and while they have been compared in detail in various benchmarks (see e.g., Duo et al. 2018 ), there is no univerally agreed upon method. Here we demonstrate clustering using Louvain clustering , which is a popular method for clustering single-cell RNA-seq data. The method was published in Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \"Fast unfolding of communities in large networks\". Journal of Statistical Mechanics: Theory and Experiment. 2008 (10): P10008. Note that Louvain clustering directly clusters the neighborhood graph of cells, which we already computed in the previous section. 1 sc . tl . louvain ( adata , resolution = 0.5 , random_state = 42 ) running Louvain clustering using the \"louvain\" package of Traag (2017) finished: found 8 clusters and added 'louvain', the cluster labels (adata.obs, categorical) (0:00:00) A plot of the clusters is shown below: 1 sc . pl . umap ( adata , color = [ 'louvain' , 'CST3' , 'NKG7' ])","title":"Clustering"},{"location":"tutorials/kb_building_atlas/python/kb_analysis_0_python.html#find-marker-genes","text":"A key aspect of annotating a cell atlas is identifying \"marker genes\". These are genes specific to individual clusters that \"mark\" them, and are important both for assigning functions to cell clusters, and for designing downstream experiments to probe activity of clusters. A gene marker analysis begins with ranking genes in each cluster according to how different they are relative to other clusters. Typically the t-test is used for this purpose. 1 2 sc . tl . rank_genes_groups ( adata , 'louvain' , method = 't-test' , corr_method = \"bonferroni\" ) sc . pl . rank_genes_groups ( adata , n_genes = 25 , sharey = False ) ranking genes finished: added to `.uns['rank_genes_groups']` 'names', sorted np.recarray to be indexed by group ids 'scores', sorted np.recarray to be indexed by group ids 'logfoldchanges', sorted np.recarray to be indexed by group ids 'pvals', sorted np.recarray to be indexed by group ids 'pvals_adj', sorted np.recarray to be indexed by group ids (0:00:00) 1 sc . settings . verbosity = 2 # reduce the verbosity An alternative to the parametric t-test is the non-parametric Wilcoxon rank-sum (Mann-Whitney-U) test. 1 2 sc . tl . rank_genes_groups ( adata , 'louvain' , method = 'wilcoxon' , corr_method = \"bonferroni\" ) sc . pl . rank_genes_groups ( adata , n_genes = 25 , sharey = False ) ranking genes finished (0:00:04) As an alternative, genes can be ranked using logistic regression (see Natranos et al. (2018) ). 1 tmp = adata . copy () 1 2 sc . tl . rank_genes_groups ( tmp , 'louvain' , method = 'logreg' ) sc . pl . rank_genes_groups ( tmp , n_genes = 25 , sharey = False ) ranking genes / usr / local / lib / python3 .7 / dist - packages / sklearn / linear_model / _logistic . py: 940 : ConvergenceWarning: lbfgs failed to converge ( status = 1 ) : STOP: TOTAL NO . of ITERATIONS REACHED LIMIT . Increase the number of iterations ( max_iter ) or scale the data as shown in: https: //scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https: //scikit-learn.org/stable/modules/linear_model.html#logistic-regression extra_warning_msg = _LOGISTIC_SOLVER_CONVERGENCE_MSG ) finished ( 0 : 00 : 20 ) With the exceptions of IL7R , which is only found by the t-test and FCER1A , which is only found by the other two appraoches, all marker genes are recovered in all approaches. Louvain Group Markers Cell Type 0 IL7R CD4 T cells 1 CD14, LYZ CD14+ Monocytes 2 MS4A1 B cells 3 GNLY, NKG7 NK cells 4 FCGR3A, MS4A7 FCGR3A+ Monocytes 5 CD8A CD8 T cells 6 MS4A1 B cells Let us also define a list of marker genes for later reference. 1 2 3 marker_genes = [ 'IL7R' , 'CD79A' , 'MS4A1' , 'CD8A' , 'CD8B' , 'LYZ' , 'CD14' , 'LGALS3' , 'S100A8' , 'GNLY' , 'NKG7' , 'KLRB1' , 'FCGR3A' , 'MS4A7' , 'FCER1A' , 'CST3' , 'PPBP' ] Reload the object that has been save with the Wilcoxon Rank-Sum test result. Show the 10 top ranked genes per cluster 0, 1, ..., 7 in a dataframe. 1 pd . DataFrame ( adata . uns [ 'rank_genes_groups' ][ 'names' ]) . head ( 5 ) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0 1 2 3 4 5 6 7 0 S100A8 IL7R RPL32 IGHD NKG7 CST3 KLRB1 CD79A 1 S100A9 IL32 RPS12 IGHM CTSW HLA-DPA1 KLRG1 IGKC 2 VCAN TRAC RPL30 CD37 GZMA NPC2 NKG7 CD79B 3 S100A12 LDHB RPL35A CD79A CST7 HLA-DPB1 IL32 BANK1 4 FOS BCL11B RPS15A MS4A1 GZMM FCER1G GZMA TNFRSF13C Get a table with the scores and groups. 1 2 3 4 5 result = adata . uns [ 'rank_genes_groups' ] groups = result [ 'names' ] . dtype . names pd . DataFrame ( { group + '_' + key [: 1 ]: result [ key ][ group ] for group in groups for key in [ 'names' , 'pvals' ]}) . head ( 5 ) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0_n 0_p 1_n 1_p 2_n 2_p 3_n 3_p 4_n 4_p 5_n 5_p 6_n 6_p 7_n 7_p 0 S100A8 4.325218e-141 IL7R 3.851653e-57 RPL32 7.151780e-62 IGHD 1.303809e-75 NKG7 9.495682e-64 CST3 1.595268e-42 KLRB1 8.274802e-41 CD79A 3.916006e-28 1 S100A9 1.357507e-140 IL32 3.390931e-49 RPS12 4.320062e-61 IGHM 1.624935e-74 CTSW 1.281002e-58 HLA-DPA1 9.721044e-42 KLRG1 1.245774e-34 IGKC 7.115329e-27 2 VCAN 1.698042e-136 TRAC 5.952130e-49 RPL30 2.823714e-59 CD37 1.704719e-73 GZMA 5.700633e-57 NPC2 5.443673e-33 NKG7 7.556990e-32 CD79B 6.053017e-26 3 S100A12 2.736086e-136 LDHB 6.487053e-46 RPL35A 6.098855e-58 CD79A 2.184785e-70 CST7 1.401230e-56 HLA-DPB1 7.522829e-33 IL32 1.135243e-30 BANK1 6.905314e-26 4 FOS 3.264834e-132 BCL11B 4.040622e-42 RPS15A 6.949561e-58 MS4A1 6.806009e-70 GZMM 5.222455e-51 FCER1G 3.106843e-32 GZMA 1.885113e-30 TNFRSF13C 7.946763e-24 Compare to a single cluster. 1 2 sc . tl . rank_genes_groups ( adata , 'louvain' , groups = [ '0' ], reference = '1' , method = 'wilcoxon' ) sc . pl . rank_genes_groups ( adata , groups = [ '0' ], n_genes = 20 ) ranking genes finished (0:00:01) If we want a more detailed view for a certain group, use sc.pl.rank_genes_groups_violin . 1 sc . pl . rank_genes_groups_violin ( adata , groups = '0' , n_genes = 8 ) If you want to compare a certain gene across groups, use the following. 1 sc . pl . violin ( adata , marker_genes , groupby = 'louvain' ) Actually mark the cell types. 1 pd . DataFrame ( result [ \"names\" ]) . head ( 10 ) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0 1 2 3 4 5 6 7 0 S100A8 IL7R RPL32 IGHD NKG7 CST3 KLRB1 CD79A 1 S100A9 IL32 RPS12 IGHM CTSW HLA-DPA1 KLRG1 IGKC 2 VCAN TRAC RPL30 CD37 GZMA NPC2 NKG7 CD79B 3 S100A12 LDHB RPL35A CD79A CST7 HLA-DPB1 IL32 BANK1 4 FOS BCL11B RPS15A MS4A1 GZMM FCER1G GZMA TNFRSF13C 5 MNDA CD3D RPS6 CD74 PRF1 COTL1 CTSW MS4A1 6 LYZ CD3E RPS14 TCL1A HCST AIF1 CCL5 TCF4 7 SRGN CD3G RPS3A CD79B KLRD1 CTSZ IL7R CD74 8 FCN1 TCF7 RPS28 LINC00926 CCL5 HLA-DRA AQP3 HLA-DQA1 9 DUSP1 CD2 RPS27 BCL11A B2M HLA-DRB1 SLC4A10 LINC00926 Recall Louvain Group Markers Cell Type 0 IL7R CD4 T cells 1 CD14, LYZ CD14+ Monocytes 2 MS4A1 B cells 3 GNLY, NKG7 NK cells 4 FCGR3A, MS4A7 FCGR3A+ Monocytes 5 CD8A CD8 T cells 6 MS4A1 B cells 1 2 3 4 5 6 7 8 9 10 11 ## Map the gene ids to a cluster label # Each cluster (index in the list) corresponds to a cell type new_cluster_names = [ \"CD4 T\" , \"B Cells\" , \"NK\" , \"CD14 Monocytes\" , \"FCGR3A Monocytes\" , \"CD8 T\" , \"B-2\" , ] 1 2 # Relabel the clusters # adata.rename_categories('louvain', new_cluster_names) 1 sc . pl . umap ( adata , color = 'louvain' , legend_loc = 'on data' , title = '' , frameon = False ) Now that we annotated the cell types, let us visualize the marker genes. 1 ax = sc . pl . dotplot ( adata , marker_genes , groupby = 'louvain' ) There is also a very compact violin plot. 1 ax = sc . pl . stacked_violin ( adata , marker_genes , groupby = 'louvain' , rotation = 90 ) Note that as a result of the analysis the adata object has accumulated several annotations: 1 adata AnnData object with n_obs \u00d7 n_vars = 1175 \u00d7 25953 obs : 'n_genes' , 'percent_mito' , 'n_counts' , 'louvain' var : 'gene_name' , 'gene_id' , 'n_cells' , 'highly_variable' , 'means' , 'dispersions' , 'dispersions_norm' , 'mean' , 'std' uns : 'log1p' , 'hvg' , 'pca' , 'neighbors' , 'umap' , 'louvain' , 'louvain_colors' , 'rank_genes_groups' obsm : 'X_pca' , 'X_umap' varm : 'PCs' obsp : 'distances' , 'connectivities' If you want to export to \"csv\", you have the following options: 1 2 3 4 5 6 7 8 9 10 11 # Export single fields of the annotation of observations # adata.obs[['n_counts', 'louvain_groups']].to_csv( # './write/pbmc3k_corrected_louvain_groups.csv') # Export single columns of the multidimensional annotation # adata.obsm.to_df()[['X_pca1', 'X_pca2']].to_csv( # './write/pbmc3k_corrected_X_pca.csv') # Or export everything except the data using `.write_csvs`. # Set `skip_data=False` if you also want to export the data. # adata.write_csvs(results_file[:-5], ) 1 2 # Running time of the notebook print ( \" {:.2f} minutes\" . format (( time . time () - start_time ) / 60 )) 26.77 minutes Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located . 1","title":"Find marker genes"},{"location":"tutorials/kb_custom_index/python/kb_transcriptome_index.html","text":"Constructing a transcriptome index with kb \u00b6 This tutorial provides instructions for how to generate a transcriptome index to use with kallisto | bustools using kb . Download reference files \u00b6 Download the genomic (DNA) FASTA and GTF annotations for your desired organism from the database of your choice. This tutorial uses mouse reference files downloaded from Ensembl . 1 2 3 %%time !wget -q ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget -q ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz CPU times: user 173 ms, sys: 37.3 ms, total: 211 ms Wall time: 28.8 s Install kb \u00b6 1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 71 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 46 . 5 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 42 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 30 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 61 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 7 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 42 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 3 . 8 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 5 . 2 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Build the index \u00b6 kb automatically splits the genome into a cDNA FASTA file and uses that to build a kallisto index. 1 2 3 4 %%time !kb ref -i transcriptome.idx -g transcripts_to_genes.txt -f1 cdna.fa \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz \\ Mus_musculus.GRCm38.98.gtf.gz [ 2021 - 03 - 31 19 : 42 : 16 , 748 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2021 - 03 - 31 19 : 42 : 16 , 748 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2021 - 03 - 31 19 : 42 : 20 , 207 ] INFO Creating transcript - to - gene mapping at / content / tmp / tmp8orgc74k [ 2021 - 03 - 31 19 : 43 : 01 , 135 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2021 - 03 - 31 19 : 43 : 25 , 710 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmpees_4ry7 [ 2021 - 03 - 31 19 : 50 : 50 , 364 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmpssw7nu7e [ 2021 - 03 - 31 19 : 51 : 51 , 290 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpg65jndu0 [ 2021 - 03 - 31 19 : 51 : 51 , 290 ] WARNING The following chromosomes were found in the FASTA but does not have any \" transcript \" features in the GTF : JH584302 . 1 , GL456387 . 1 , GL456396 . 1 , GL456367 . 1 , GL456366 . 1 , GL456394 . 1 , GL456383 . 1 , GL456382 . 1 , GL456393 . 1 , GL456368 . 1 , GL456379 . 1 , GL456390 . 1 , GL456378 . 1 , GL456360 . 1 , GL456389 . 1 , JH584301 . 1 , JH584300 . 1 , GL456392 . 1 , GL456370 . 1 , GL456359 . 1 , GL456213 . 1 . No sequences will be generated for these chromosomes . [ 2021 - 03 - 31 19 : 53 : 04 , 043 ] INFO Wrote 142446 cDNA transcripts [ 2021 - 03 - 31 19 : 53 : 04 , 047 ] INFO Concatenating 1 transcript - to - gene mappings to transcripts_to_genes . txt [ 2021 - 03 - 31 19 : 53 : 04 , 264 ] INFO Concatenating 1 cDNAs to cdna . fa [ 2021 - 03 - 31 19 : 53 : 05 , 204 ] INFO Indexing cdna . fa to transcriptome . idx CPU times : user 7 . 92 s , sys : 1 . 04 s , total : 8 . 96 s Wall time : 21 min 57 s 1","title":"Python"},{"location":"tutorials/kb_custom_index/python/kb_transcriptome_index.html#constructing-a-transcriptome-index-with-kb","text":"This tutorial provides instructions for how to generate a transcriptome index to use with kallisto | bustools using kb .","title":"Constructing a transcriptome index with kb"},{"location":"tutorials/kb_custom_index/python/kb_transcriptome_index.html#download-reference-files","text":"Download the genomic (DNA) FASTA and GTF annotations for your desired organism from the database of your choice. This tutorial uses mouse reference files downloaded from Ensembl . 1 2 3 %%time !wget -q ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget -q ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz CPU times: user 173 ms, sys: 37.3 ms, total: 211 ms Wall time: 28.8 s","title":"Download reference files"},{"location":"tutorials/kb_custom_index/python/kb_transcriptome_index.html#install-kb","text":"1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 71 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 46 . 5 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 42 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 30 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 61 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 7 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 42 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 3 . 8 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 5 . 2 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone","title":"Install kb"},{"location":"tutorials/kb_custom_index/python/kb_transcriptome_index.html#build-the-index","text":"kb automatically splits the genome into a cDNA FASTA file and uses that to build a kallisto index. 1 2 3 4 %%time !kb ref -i transcriptome.idx -g transcripts_to_genes.txt -f1 cdna.fa \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz \\ Mus_musculus.GRCm38.98.gtf.gz [ 2021 - 03 - 31 19 : 42 : 16 , 748 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2021 - 03 - 31 19 : 42 : 16 , 748 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2021 - 03 - 31 19 : 42 : 20 , 207 ] INFO Creating transcript - to - gene mapping at / content / tmp / tmp8orgc74k [ 2021 - 03 - 31 19 : 43 : 01 , 135 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2021 - 03 - 31 19 : 43 : 25 , 710 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmpees_4ry7 [ 2021 - 03 - 31 19 : 50 : 50 , 364 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmpssw7nu7e [ 2021 - 03 - 31 19 : 51 : 51 , 290 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpg65jndu0 [ 2021 - 03 - 31 19 : 51 : 51 , 290 ] WARNING The following chromosomes were found in the FASTA but does not have any \" transcript \" features in the GTF : JH584302 . 1 , GL456387 . 1 , GL456396 . 1 , GL456367 . 1 , GL456366 . 1 , GL456394 . 1 , GL456383 . 1 , GL456382 . 1 , GL456393 . 1 , GL456368 . 1 , GL456379 . 1 , GL456390 . 1 , GL456378 . 1 , GL456360 . 1 , GL456389 . 1 , JH584301 . 1 , JH584300 . 1 , GL456392 . 1 , GL456370 . 1 , GL456359 . 1 , GL456213 . 1 . No sequences will be generated for these chromosomes . [ 2021 - 03 - 31 19 : 53 : 04 , 043 ] INFO Wrote 142446 cDNA transcripts [ 2021 - 03 - 31 19 : 53 : 04 , 047 ] INFO Concatenating 1 transcript - to - gene mappings to transcripts_to_genes . txt [ 2021 - 03 - 31 19 : 53 : 04 , 264 ] INFO Concatenating 1 cDNAs to cdna . fa [ 2021 - 03 - 31 19 : 53 : 05 , 204 ] INFO Indexing cdna . fa to transcriptome . idx CPU times : user 7 . 92 s , sys : 1 . 04 s , total : 8 . 96 s Wall time : 21 min 57 s 1","title":"Build the index"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html","text":"Introduction to single-cell RNA-seq II: getting started with analysis \u00b6 This notebook demonstrates pre-processing and basic analysis of the mouse retinal cells GSE126783 dataset from Koren et al., 2019 . Following pre-processing using kallisto and bustools and basic QC, the notebook demonstrates some initial analysis. The approximate running time of the notebook is 12 minutes. The notebook was written by Kyung Hoi (Joseph) Min, Lambda Lu, A. Sina Booeshaghi and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook, as well as specific methods they run (these are cited inline in the notebook): Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 McCarthy, D.J., Campbell, K.R., Lun, A.T. and Wills, Q.F. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in R (2017). doi.org/10.1093/bioinformatics/btw777 A Python notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses. Setup \u00b6 1 2 # This is used to time the running of the notebook start_time <- Sys.time () Install R packages \u00b6 There are several packages in R built for scRNA-seq data analysis. Here we use Seurat. 1 2 3 4 5 6 system.time ({ if ( ! requireNamespace ( \"BiocManager\" , quietly = TRUE )) install.packages ( \"BiocManager\" ) BiocManager :: install ( c ( 'multtest' , \"DropletUtils\" ), Ncpus = 2 ) install.packages ( c ( \"Seurat\" , \"scico\" , \"ggpointdensity\" ), Ncpus = 2 ) }) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) 'getOption(\"repos\")' replaces Bioconductor standard repositories , see '?repositories' for details replacement repositories : CRAN : https : // cran . rstudio . com Bioconductor version 3.12 ( BiocManager 1.30 . 12 ), R 4.0 . 4 ( 2021 - 02 - 15 ) Installing package ( s ) 'BiocVersion' , 'multtest' , 'DropletUtils' also installing the dependencies \u2018 zlibbioc \u2019 , \u2018 bitops \u2019 , \u2018 formatR \u2019 , \u2018 matrixStats \u2019 , \u2018 XVector \u2019 , \u2018 RCurl \u2019 , \u2018 GenomeInfoDbData \u2019 , \u2018 lambda . r \u2019 , \u2018 futile . options \u2019 , \u2018 sparseMatrixStats \u2019 , \u2018 MatrixGenerics \u2019 , \u2018 GenomicRanges \u2019 , \u2018 IRanges \u2019 , \u2018 GenomeInfoDb \u2019 , \u2018 futile . logger \u2019 , \u2018 snow \u2019 , \u2018 rhdf5filters \u2019 , \u2018 limma \u2019 , \u2018 locfit \u2019 , \u2018 R . oo \u2019 , \u2018 R . methodsS3 \u2019 , \u2018 sitmo \u2019 , \u2018 DelayedMatrixStats \u2019 , \u2018 BiocGenerics \u2019 , \u2018 Biobase \u2019 , \u2018 SingleCellExperiment \u2019 , \u2018 S4Vectors \u2019 , \u2018 SummarizedExperiment \u2019 , \u2018 BiocParallel \u2019 , \u2018 DelayedArray \u2019 , \u2018 HDF5Array \u2019 , \u2018 rhdf5 \u2019 , \u2018 edgeR \u2019 , \u2018 R . utils \u2019 , \u2018 dqrng \u2019 , \u2018 beachmat \u2019 , \u2018 scuttle \u2019 , \u2018 Rhdf5lib \u2019 Old packages : 'callr' , 'cpp11' , 'gert' , 'tinytex' , 'vctrs' Installing packages into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) also installing the dependencies \u2018 gtools \u2019 , \u2018 caTools \u2019 , \u2018 sass \u2019 , \u2018 jquerylib \u2019 , \u2018 globals \u2019 , \u2018 listenv \u2019 , \u2018 parallelly \u2019 , \u2018 plyr \u2019 , \u2018 zoo \u2019 , \u2018 data . table \u2019 , \u2018 gplots \u2019 , \u2018 reshape2 \u2019 , \u2018 gridExtra \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 httpuv \u2019 , \u2018 xtable \u2019 , \u2018 sourcetools \u2019 , \u2018 bslib \u2019 , \u2018 spatstat . data \u2019 , \u2018 spatstat . utils \u2019 , \u2018 spatstat . sparse \u2019 , \u2018 abind \u2019 , \u2018 tensor \u2019 , \u2018 goftest \u2019 , \u2018 deldir \u2019 , \u2018 polyclip \u2019 , \u2018 FNN \u2019 , \u2018 RSpectra \u2019 , \u2018 cowplot \u2019 , \u2018 fitdistrplus \u2019 , \u2018 future \u2019 , \u2018 future . apply \u2019 , \u2018 ggrepel \u2019 , \u2018 ggridges \u2019 , \u2018 ica \u2019 , \u2018 igraph \u2019 , \u2018 irlba \u2019 , \u2018 leiden \u2019 , \u2018 lmtest \u2019 , \u2018 miniUI \u2019 , \u2018 patchwork \u2019 , \u2018 pbapply \u2019 , \u2018 plotly \u2019 , \u2018 png \u2019 , \u2018 RANN \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 reticulate \u2019 , \u2018 ROCR \u2019 , \u2018 Rtsne \u2019 , \u2018 scattermore \u2019 , \u2018 sctransform \u2019 , \u2018 SeuratObject \u2019 , \u2018 shiny \u2019 , \u2018 spatstat . core \u2019 , \u2018 spatstat . geom \u2019 , \u2018 uwot \u2019 , \u2018 RcppEigen \u2019 , \u2018 RcppProgress \u2019 user system elapsed 2827.978 267.740 1771.560 1 2 3 4 5 6 7 8 library ( DropletUtils ) library ( Matrix ) library ( tidyverse ) library ( Seurat ) library ( ggpointdensity ) library ( scico ) library ( scales ) theme_set ( theme_bw ()) Loading required package : SingleCellExperiment Loading required package : SummarizedExperiment Loading required package : MatrixGenerics Loading required package : matrixStats Attaching package : \u2018 MatrixGenerics \u2019 The following objects are masked from \u2018 package : matrixStats \u2019 : colAlls , colAnyNAs , colAnys , colAvgsPerRowSet , colCollapse , colCounts , colCummaxs , colCummins , colCumprods , colCumsums , colDiffs , colIQRDiffs , colIQRs , colLogSumExps , colMadDiffs , colMads , colMaxs , colMeans2 , colMedians , colMins , colOrderStats , colProds , colQuantiles , colRanges , colRanks , colSdDiffs , colSds , colSums2 , colTabulates , colVarDiffs , colVars , colWeightedMads , colWeightedMeans , colWeightedMedians , colWeightedSds , colWeightedVars , rowAlls , rowAnyNAs , rowAnys , rowAvgsPerColSet , rowCollapse , rowCounts , rowCummaxs , rowCummins , rowCumprods , rowCumsums , rowDiffs , rowIQRDiffs , rowIQRs , rowLogSumExps , rowMadDiffs , rowMads , rowMaxs , rowMeans2 , rowMedians , rowMins , rowOrderStats , rowProds , rowQuantiles , rowRanges , rowRanks , rowSdDiffs , rowSds , rowSums2 , rowTabulates , rowVarDiffs , rowVars , rowWeightedMads , rowWeightedMeans , rowWeightedMedians , rowWeightedSds , rowWeightedVars Loading required package : GenomicRanges Loading required package : stats4 Loading required package : BiocGenerics Loading required package : parallel Attaching package : \u2018 BiocGenerics \u2019 The following objects are masked from \u2018 package : parallel \u2019 : clusterApply , clusterApplyLB , clusterCall , clusterEvalQ , clusterExport , clusterMap , parApply , parCapply , parLapply , parLapplyLB , parRapply , parSapply , parSapplyLB The following objects are masked from \u2018 package : stats \u2019 : IQR , mad , sd , var , xtabs The following objects are masked from \u2018 package : base \u2019 : anyDuplicated , append , as . data . frame , basename , cbind , colnames , dirname , do . call , duplicated , eval , evalq , Filter , Find , get , grep , grepl , intersect , is . unsorted , lapply , Map , mapply , match , mget , order , paste , pmax , pmax . int , pmin , pmin . int , Position , rank , rbind , Reduce , rownames , sapply , setdiff , sort , table , tapply , union , unique , unsplit , which . max , which . min Loading required package : S4Vectors Attaching package : \u2018 S4Vectors \u2019 The following object is masked from \u2018 package : base \u2019 : expand . grid Loading required package : IRanges Loading required package : GenomeInfoDb Loading required package : Biobase Welcome to Bioconductor Vignettes contain introductory material ; view with 'browseVignettes()' . To cite Bioconductor , see 'citation(\"Biobase\")' , and for packages 'citation(\"pkgname\")' . Attaching package : \u2018 Biobase \u2019 The following object is masked from \u2018 package : MatrixGenerics \u2019 : rowMedians The following objects are masked from \u2018 package : matrixStats \u2019 : anyMissing , rowMedians Attaching package : \u2018 Matrix \u2019 The following object is masked from \u2018 package : S4Vectors \u2019 : expand Warning message in system ( \"timedatectl\" , intern = TRUE ): \u201c running command 'timedatectl' had status 1 \u201d \u2500\u2500 \u001b [ 1 mAttaching packages \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3 . 0 \u2500\u2500 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mggplot2 \u001b [ 39 m 3.3 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m 0.3 . 4 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtibble \u001b [ 39 m 3.1 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m 1.0 . 5 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m 1.1 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mstringr \u001b [ 39 m 1.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mreadr \u001b [ 39 m 1.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mforcats \u001b [ 39 m 0.5 . 1 \u2500\u2500 \u001b [ 1 mConflicts \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts () \u2500\u2500 \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcollapse () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: collapse () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcombine () \u001b [ 39 m masks \u001b [ 34 mBiobase \u001b [ 39 m :: combine (), \u001b [ 34 mBiocGenerics \u001b [ 39 m :: combine () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcount () \u001b [ 39 m masks \u001b [ 34 mmatrixStats \u001b [ 39 m :: count () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mdesc () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: desc () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mexpand () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: expand (), \u001b [ 34 mS4Vectors \u001b [ 39 m :: expand () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfilter () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: filter () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfirst () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: first () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mlag () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: lag () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: pack () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mggplot2 \u001b [ 39 m :: \u001b [ 32 mPosition () \u001b [ 39 m masks \u001b [ 34 mBiocGenerics \u001b [ 39 m :: Position (), \u001b [ 34 mbase \u001b [ 39 m :: Position () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m :: \u001b [ 32 mreduce () \u001b [ 39 m masks \u001b [ 34 mGenomicRanges \u001b [ 39 m :: reduce (), \u001b [ 34 mIRanges \u001b [ 39 m :: reduce () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mrename () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: rename () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mslice () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: slice () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 munpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: unpack () Registered S3 method overwritten by 'spatstat.geom' : method from print . boxx cli Attaching SeuratObject Attaching package : \u2018 Seurat \u2019 The following object is masked from \u2018 package : SummarizedExperiment \u2019 : Assays Attaching package : \u2018 scales \u2019 The following object is masked from \u2018 package : purrr \u2019 : discard The following object is masked from \u2018 package : readr \u2019 : col_factor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Slightly modified from BUSpaRse, just to avoid installing a few dependencies not used here read_count_output <- function ( dir , name ) { dir <- normalizePath ( dir , mustWork = TRUE ) m <- readMM ( paste0 ( dir , \"/\" , name , \".mtx\" )) m <- Matrix :: t ( m ) m <- as ( m , \"dgCMatrix\" ) # The matrix read has cells in rows ge <- \".genes.txt\" genes <- readLines ( file ( paste0 ( dir , \"/\" , name , ge ))) barcodes <- readLines ( file ( paste0 ( dir , \"/\" , name , \".barcodes.txt\" ))) colnames ( m ) <- barcodes rownames ( m ) <- genes return ( m ) } Install kb-python \u00b6 1 system ( \"pip3 install kb-python\" ) Download the data \u00b6 1 2 3 4 download.file ( \"https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz\" , destfile = \"SRR8599150_S1_L001_R1_001.fastq.gz\" ) download.file ( \"https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz\" , destfile = \"SRR8599150_S1_L001_R2_001.fastq.gz\" ) Download an index 1 system ( \"kb ref -d mouse -i index.idx -g t2g.txt\" ) Pseudoalignment and counting \u00b6 Run kallisto and bustools \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice that this requires providing the index and transcript-to-gene mapping downloaded in the previous step to the -i and -g arguments respectively. Also, since the reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, the -x 10xv2 argument is used. To view other supported technologies, run kb --list . 1 system ( \"kb count -i index.idx -g t2g.txt -x 10xv2 -t2 -o . SRR8599150_S1_L001_R1_001.fastq.gz SRR8599150_S1_L001_R2_001.fastq.gz\" ) 1 list.files ( \".\" , recursive = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} '10xv2_whitelist.txt' 'counts_unfiltered/cells_x_genes.barcodes.txt' 'counts_unfiltered/cells_x_genes.genes.txt' 'counts_unfiltered/cells_x_genes.mtx' 'index.idx' 'inspect.json' 'kb_info.json' 'matrix.ec' 'output.bus' 'output.unfiltered.bus' 'run_info.json' 'sample_data/anscombe.json' 'sample_data/california_housing_test.csv' 'sample_data/california_housing_train.csv' 'sample_data/mnist_test.csv' 'sample_data/mnist_train_small.csv' 'sample_data/README.md' 'SRR8599150_S1_L001_R1_001.fastq.gz' 'SRR8599150_S1_L001_R2_001.fastq.gz' 't2g.txt' 'transcripts.txt' 1 2 # Read matrix into R res_mat <- read_count_output ( \"counts_unfiltered\" , name = \"cells_x_genes\" ) Basic QC \u00b6 Filter empty droplets \u00b6 Most barcodes in the matrix correspond to empty droplets. A common way to determine which barcodes are empty droplets and which are real cells is to plot the rank of total UMI counts of each barcode against the total UMI count itself, which is commonly called knee plot. The inflection point in that plot, signifying a change in state, is used as a cutoff for total UMI counts; barcodes below that cutoff are deemed empty droplets and removed. 1 dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 55421 96775 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 25.74 3.00 2753.00 1 bc_rank <- barcodeRanks ( res_mat , lower = 10 ) Examine the knee plot \u00b6 The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. Will be added to the next release #' version of BUSpaRse. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( total , rank )) + geom_line () + geom_hline ( aes ( yintercept = rank_cutoff ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = inflection ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( y = \"Rank\" , x = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) 1 2 3 res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 21574 3655 Visualizing count distributions \u00b6 Percentage of transcripts from mitochondrially encoded genes 1 2 3 tr2g <- read_tsv ( \"t2g.txt\" , col_names = c ( \"transcript\" , \"gene\" , \"gene_symbol\" )) %>% select ( - transcript ) %>% distinct () \u001b[36m\u2500\u2500\u001b[39m \u001b[1m\u001b[1mColumn specification\u001b[1m\u001b[22m \u001b[36m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[39m cols( transcript = \u001b[31mcol_character()\u001b[39m, gene = \u001b[31mcol_character()\u001b[39m, gene_symbol = \u001b[31mcol_character()\u001b[39m ) 1 2 # Convert from Ensembl gene ID to gene symbol rownames ( res_mat ) <- tr2g $ gene_symbol [ match ( rownames ( res_mat ), tr2g $ gene )] 1 seu <- CreateSeuratObject ( res_mat , min.cells = 3 , min.features = 200 ) Warning message: \u201cNon-unique features (rownames) present in the input matrix, making unique\u201d 1 seu [[ \"percent.mt\" ]] <- PercentageFeatureSet ( seu , pattern = \"^mt-\" ) 1 2 3 # Visualize QC metrics as a violin plot options ( repr.plot.width = 12 , repr.plot.height = 6 ) VlnPlot ( seu , features = c ( \"nFeature_RNA\" , \"nCount_RNA\" , \"percent.mt\" ), ncol = 3 , pt.size = 0.1 ) 1 2 3 4 5 6 7 8 options ( repr.plot.width = 9 , repr.plot.height = 6 ) ggplot ( seu @ meta.data , aes ( nCount_RNA , nFeature_RNA )) + geom_hex ( bins = 100 ) + scale_fill_scico ( palette = \"devon\" , direction = -1 , end = 0.9 ) + scale_x_log10 ( breaks = breaks_log ( 12 )) + scale_y_log10 ( breaks = breaks_log ( 12 )) + annotation_logticks () + labs ( x = \"Total UMI counts\" , y = \"Number of genes detected\" ) + theme ( panel.grid.minor = element_blank ()) Warning message : \u201cComputation failed in `stat_binhex()` : Package `hexbin` required for `stat_binhex` . Please install and try again . \u201d 1 2 3 4 ggplot ( seu @ meta.data , aes ( nCount_RNA , percent.mt )) + geom_pointdensity () + scale_color_scico ( palette = \"devon\" , direction = -1 , end = 0.9 ) + labs ( x = \"Total UMI counts\" , y = \"Percentage mitochondrial\" ) The color shows density of points, as the density is not apparent when many points are stacked on top of each other. Cells with high percentage of mitochondrially encoded transcripts are often removed in QC, as those are likely to be low quality cells. If a cell is lysed in sample preparation, transcripts in the mitochondria are less likely to be lost than transcripts in the cytoplasm due to the double membrane of the mitochondria, so cells that lysed tend to have a higher percentage of mitochondrially encoded transcripts. We filter cells with more than 3% mitochondrial content based on the plot above. 1 seu <- subset ( seu , subset = percent.mt < 3 ) 1 seu <- NormalizeData ( seu ) %>% ScaleData () Centering and scaling data matrix Analysis \u00b6 Identify highly variable genes \u00b6 1 2 3 4 seu <- FindVariableFeatures ( seu , nfeatures = 3000 ) top10 <- head ( VariableFeatures ( seu ), 10 ) plot1 <- VariableFeaturePlot ( seu , log = FALSE ) LabelPoints ( plot = plot1 , points = top10 , repel = TRUE ) When using repel , set xnudge and ynudge to 0 for optimal results PCA \u00b6 1 2 seu <- RunPCA ( seu , verbose = FALSE , npcs = 20 ) # uses HVG by default ElbowPlot ( seu , ndims = 20 ) 1 PCAPlot ( seu ) Clustering and visualization \u00b6 There are many algorithms for clustering cells, and while they have been compared in detail in various benchmarks (see e.g., Duo et al. 2018 ), there is no univerally agreed upon method. Here we demonstrate clustering using Louvain clustering , which is a popular method for clustering single-cell RNA-seq data. The method was published in Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \"Fast unfolding of communities in large networks\". Journal of Statistical Mechanics: Theory and Experiment. 2008 (10): P10008. 1 2 seu <- FindNeighbors ( seu , dims = 1 : 10 ) seu <- FindClusters ( seu ) Computing nearest neighbor graph Computing SNN Modularity Optimizer version 1 . 3 . 0 by Ludo Waltman and Nees Jan van Eck Number of nodes : 3507 Number of edges : 112378 Running Louvain algorithm ... Maximum modularity in 10 random starts : 0 . 7206 Number of communities : 8 Elapsed time : 0 seconds 1 PCAPlot ( seu ) tSNE \u00b6 t-SNE is a non-linear dimensionality reduction technique described in: Maaten, Laurens van der, and Geoffrey Hinton. \"Visualizing data using t-SNE.\" Journal of machine learning research 9.Nov (2008): 2579-2605. Here it is applied to the 10-dimensional PCA projection of the cells. 1 2 seu <- RunTSNE ( seu , dims = 1 : 10 ) TSNEPlot ( seu ) UMAP \u00b6 UMAP (UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction) is a manifold learning technique that can also be used to visualize cells. It was published in: McInnes, Leland, John Healy, and James Melville. \"Umap: Uniform manifold approximation and projection for dimension reduction.\" arXiv preprint arXiv:1802.03426 (2018). 1 2 seu <- RunUMAP ( seu , dims = 1 : 10 , verbose = FALSE ) UMAPPlot ( seu ) Warning message : \u201c The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R - native UWOT using the cosine metric To use Python UMAP via reticulate , set umap . method to ' umap-learn ' and metric to ' correlation ' This message will be shown once per session \u201d Discussion \u00b6 This notebook has demonstrated visualization of cells following pre-processing of single-cell RNA-seq data. 1 Sys.time () - start_time Time difference of 38.41409 mins Installing packages took about 26 minutes, which is a drawback of Rcpp. The QC and analysis post-installation takes about 10 minutes from reads to results. This includes downloading the data, filtering, clustering and visualization. Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located . 1","title":"R"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#introduction-to-single-cell-rna-seq-ii-getting-started-with-analysis","text":"This notebook demonstrates pre-processing and basic analysis of the mouse retinal cells GSE126783 dataset from Koren et al., 2019 . Following pre-processing using kallisto and bustools and basic QC, the notebook demonstrates some initial analysis. The approximate running time of the notebook is 12 minutes. The notebook was written by Kyung Hoi (Joseph) Min, Lambda Lu, A. Sina Booeshaghi and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook, as well as specific methods they run (these are cited inline in the notebook): Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 McCarthy, D.J., Campbell, K.R., Lun, A.T. and Wills, Q.F. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in R (2017). doi.org/10.1093/bioinformatics/btw777 A Python notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses.","title":"Introduction to single-cell RNA-seq II: getting started with analysis"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#setup","text":"1 2 # This is used to time the running of the notebook start_time <- Sys.time ()","title":"Setup"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#install-r-packages","text":"There are several packages in R built for scRNA-seq data analysis. Here we use Seurat. 1 2 3 4 5 6 system.time ({ if ( ! requireNamespace ( \"BiocManager\" , quietly = TRUE )) install.packages ( \"BiocManager\" ) BiocManager :: install ( c ( 'multtest' , \"DropletUtils\" ), Ncpus = 2 ) install.packages ( c ( \"Seurat\" , \"scico\" , \"ggpointdensity\" ), Ncpus = 2 ) }) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) 'getOption(\"repos\")' replaces Bioconductor standard repositories , see '?repositories' for details replacement repositories : CRAN : https : // cran . rstudio . com Bioconductor version 3.12 ( BiocManager 1.30 . 12 ), R 4.0 . 4 ( 2021 - 02 - 15 ) Installing package ( s ) 'BiocVersion' , 'multtest' , 'DropletUtils' also installing the dependencies \u2018 zlibbioc \u2019 , \u2018 bitops \u2019 , \u2018 formatR \u2019 , \u2018 matrixStats \u2019 , \u2018 XVector \u2019 , \u2018 RCurl \u2019 , \u2018 GenomeInfoDbData \u2019 , \u2018 lambda . r \u2019 , \u2018 futile . options \u2019 , \u2018 sparseMatrixStats \u2019 , \u2018 MatrixGenerics \u2019 , \u2018 GenomicRanges \u2019 , \u2018 IRanges \u2019 , \u2018 GenomeInfoDb \u2019 , \u2018 futile . logger \u2019 , \u2018 snow \u2019 , \u2018 rhdf5filters \u2019 , \u2018 limma \u2019 , \u2018 locfit \u2019 , \u2018 R . oo \u2019 , \u2018 R . methodsS3 \u2019 , \u2018 sitmo \u2019 , \u2018 DelayedMatrixStats \u2019 , \u2018 BiocGenerics \u2019 , \u2018 Biobase \u2019 , \u2018 SingleCellExperiment \u2019 , \u2018 S4Vectors \u2019 , \u2018 SummarizedExperiment \u2019 , \u2018 BiocParallel \u2019 , \u2018 DelayedArray \u2019 , \u2018 HDF5Array \u2019 , \u2018 rhdf5 \u2019 , \u2018 edgeR \u2019 , \u2018 R . utils \u2019 , \u2018 dqrng \u2019 , \u2018 beachmat \u2019 , \u2018 scuttle \u2019 , \u2018 Rhdf5lib \u2019 Old packages : 'callr' , 'cpp11' , 'gert' , 'tinytex' , 'vctrs' Installing packages into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) also installing the dependencies \u2018 gtools \u2019 , \u2018 caTools \u2019 , \u2018 sass \u2019 , \u2018 jquerylib \u2019 , \u2018 globals \u2019 , \u2018 listenv \u2019 , \u2018 parallelly \u2019 , \u2018 plyr \u2019 , \u2018 zoo \u2019 , \u2018 data . table \u2019 , \u2018 gplots \u2019 , \u2018 reshape2 \u2019 , \u2018 gridExtra \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 httpuv \u2019 , \u2018 xtable \u2019 , \u2018 sourcetools \u2019 , \u2018 bslib \u2019 , \u2018 spatstat . data \u2019 , \u2018 spatstat . utils \u2019 , \u2018 spatstat . sparse \u2019 , \u2018 abind \u2019 , \u2018 tensor \u2019 , \u2018 goftest \u2019 , \u2018 deldir \u2019 , \u2018 polyclip \u2019 , \u2018 FNN \u2019 , \u2018 RSpectra \u2019 , \u2018 cowplot \u2019 , \u2018 fitdistrplus \u2019 , \u2018 future \u2019 , \u2018 future . apply \u2019 , \u2018 ggrepel \u2019 , \u2018 ggridges \u2019 , \u2018 ica \u2019 , \u2018 igraph \u2019 , \u2018 irlba \u2019 , \u2018 leiden \u2019 , \u2018 lmtest \u2019 , \u2018 miniUI \u2019 , \u2018 patchwork \u2019 , \u2018 pbapply \u2019 , \u2018 plotly \u2019 , \u2018 png \u2019 , \u2018 RANN \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 reticulate \u2019 , \u2018 ROCR \u2019 , \u2018 Rtsne \u2019 , \u2018 scattermore \u2019 , \u2018 sctransform \u2019 , \u2018 SeuratObject \u2019 , \u2018 shiny \u2019 , \u2018 spatstat . core \u2019 , \u2018 spatstat . geom \u2019 , \u2018 uwot \u2019 , \u2018 RcppEigen \u2019 , \u2018 RcppProgress \u2019 user system elapsed 2827.978 267.740 1771.560 1 2 3 4 5 6 7 8 library ( DropletUtils ) library ( Matrix ) library ( tidyverse ) library ( Seurat ) library ( ggpointdensity ) library ( scico ) library ( scales ) theme_set ( theme_bw ()) Loading required package : SingleCellExperiment Loading required package : SummarizedExperiment Loading required package : MatrixGenerics Loading required package : matrixStats Attaching package : \u2018 MatrixGenerics \u2019 The following objects are masked from \u2018 package : matrixStats \u2019 : colAlls , colAnyNAs , colAnys , colAvgsPerRowSet , colCollapse , colCounts , colCummaxs , colCummins , colCumprods , colCumsums , colDiffs , colIQRDiffs , colIQRs , colLogSumExps , colMadDiffs , colMads , colMaxs , colMeans2 , colMedians , colMins , colOrderStats , colProds , colQuantiles , colRanges , colRanks , colSdDiffs , colSds , colSums2 , colTabulates , colVarDiffs , colVars , colWeightedMads , colWeightedMeans , colWeightedMedians , colWeightedSds , colWeightedVars , rowAlls , rowAnyNAs , rowAnys , rowAvgsPerColSet , rowCollapse , rowCounts , rowCummaxs , rowCummins , rowCumprods , rowCumsums , rowDiffs , rowIQRDiffs , rowIQRs , rowLogSumExps , rowMadDiffs , rowMads , rowMaxs , rowMeans2 , rowMedians , rowMins , rowOrderStats , rowProds , rowQuantiles , rowRanges , rowRanks , rowSdDiffs , rowSds , rowSums2 , rowTabulates , rowVarDiffs , rowVars , rowWeightedMads , rowWeightedMeans , rowWeightedMedians , rowWeightedSds , rowWeightedVars Loading required package : GenomicRanges Loading required package : stats4 Loading required package : BiocGenerics Loading required package : parallel Attaching package : \u2018 BiocGenerics \u2019 The following objects are masked from \u2018 package : parallel \u2019 : clusterApply , clusterApplyLB , clusterCall , clusterEvalQ , clusterExport , clusterMap , parApply , parCapply , parLapply , parLapplyLB , parRapply , parSapply , parSapplyLB The following objects are masked from \u2018 package : stats \u2019 : IQR , mad , sd , var , xtabs The following objects are masked from \u2018 package : base \u2019 : anyDuplicated , append , as . data . frame , basename , cbind , colnames , dirname , do . call , duplicated , eval , evalq , Filter , Find , get , grep , grepl , intersect , is . unsorted , lapply , Map , mapply , match , mget , order , paste , pmax , pmax . int , pmin , pmin . int , Position , rank , rbind , Reduce , rownames , sapply , setdiff , sort , table , tapply , union , unique , unsplit , which . max , which . min Loading required package : S4Vectors Attaching package : \u2018 S4Vectors \u2019 The following object is masked from \u2018 package : base \u2019 : expand . grid Loading required package : IRanges Loading required package : GenomeInfoDb Loading required package : Biobase Welcome to Bioconductor Vignettes contain introductory material ; view with 'browseVignettes()' . To cite Bioconductor , see 'citation(\"Biobase\")' , and for packages 'citation(\"pkgname\")' . Attaching package : \u2018 Biobase \u2019 The following object is masked from \u2018 package : MatrixGenerics \u2019 : rowMedians The following objects are masked from \u2018 package : matrixStats \u2019 : anyMissing , rowMedians Attaching package : \u2018 Matrix \u2019 The following object is masked from \u2018 package : S4Vectors \u2019 : expand Warning message in system ( \"timedatectl\" , intern = TRUE ): \u201c running command 'timedatectl' had status 1 \u201d \u2500\u2500 \u001b [ 1 mAttaching packages \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3 . 0 \u2500\u2500 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mggplot2 \u001b [ 39 m 3.3 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m 0.3 . 4 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtibble \u001b [ 39 m 3.1 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m 1.0 . 5 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m 1.1 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mstringr \u001b [ 39 m 1.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mreadr \u001b [ 39 m 1.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mforcats \u001b [ 39 m 0.5 . 1 \u2500\u2500 \u001b [ 1 mConflicts \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts () \u2500\u2500 \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcollapse () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: collapse () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcombine () \u001b [ 39 m masks \u001b [ 34 mBiobase \u001b [ 39 m :: combine (), \u001b [ 34 mBiocGenerics \u001b [ 39 m :: combine () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcount () \u001b [ 39 m masks \u001b [ 34 mmatrixStats \u001b [ 39 m :: count () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mdesc () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: desc () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mexpand () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: expand (), \u001b [ 34 mS4Vectors \u001b [ 39 m :: expand () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfilter () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: filter () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfirst () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: first () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mlag () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: lag () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: pack () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mggplot2 \u001b [ 39 m :: \u001b [ 32 mPosition () \u001b [ 39 m masks \u001b [ 34 mBiocGenerics \u001b [ 39 m :: Position (), \u001b [ 34 mbase \u001b [ 39 m :: Position () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m :: \u001b [ 32 mreduce () \u001b [ 39 m masks \u001b [ 34 mGenomicRanges \u001b [ 39 m :: reduce (), \u001b [ 34 mIRanges \u001b [ 39 m :: reduce () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mrename () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: rename () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mslice () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: slice () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 munpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: unpack () Registered S3 method overwritten by 'spatstat.geom' : method from print . boxx cli Attaching SeuratObject Attaching package : \u2018 Seurat \u2019 The following object is masked from \u2018 package : SummarizedExperiment \u2019 : Assays Attaching package : \u2018 scales \u2019 The following object is masked from \u2018 package : purrr \u2019 : discard The following object is masked from \u2018 package : readr \u2019 : col_factor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Slightly modified from BUSpaRse, just to avoid installing a few dependencies not used here read_count_output <- function ( dir , name ) { dir <- normalizePath ( dir , mustWork = TRUE ) m <- readMM ( paste0 ( dir , \"/\" , name , \".mtx\" )) m <- Matrix :: t ( m ) m <- as ( m , \"dgCMatrix\" ) # The matrix read has cells in rows ge <- \".genes.txt\" genes <- readLines ( file ( paste0 ( dir , \"/\" , name , ge ))) barcodes <- readLines ( file ( paste0 ( dir , \"/\" , name , \".barcodes.txt\" ))) colnames ( m ) <- barcodes rownames ( m ) <- genes return ( m ) }","title":"Install R packages"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#install-kb-python","text":"1 system ( \"pip3 install kb-python\" )","title":"Install kb-python"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#download-the-data","text":"1 2 3 4 download.file ( \"https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz\" , destfile = \"SRR8599150_S1_L001_R1_001.fastq.gz\" ) download.file ( \"https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz\" , destfile = \"SRR8599150_S1_L001_R2_001.fastq.gz\" ) Download an index 1 system ( \"kb ref -d mouse -i index.idx -g t2g.txt\" )","title":"Download the data"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#pseudoalignment-and-counting","text":"","title":"Pseudoalignment and counting"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#run-kallisto-and-bustools","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice that this requires providing the index and transcript-to-gene mapping downloaded in the previous step to the -i and -g arguments respectively. Also, since the reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, the -x 10xv2 argument is used. To view other supported technologies, run kb --list . 1 system ( \"kb count -i index.idx -g t2g.txt -x 10xv2 -t2 -o . SRR8599150_S1_L001_R1_001.fastq.gz SRR8599150_S1_L001_R2_001.fastq.gz\" ) 1 list.files ( \".\" , recursive = TRUE ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} '10xv2_whitelist.txt' 'counts_unfiltered/cells_x_genes.barcodes.txt' 'counts_unfiltered/cells_x_genes.genes.txt' 'counts_unfiltered/cells_x_genes.mtx' 'index.idx' 'inspect.json' 'kb_info.json' 'matrix.ec' 'output.bus' 'output.unfiltered.bus' 'run_info.json' 'sample_data/anscombe.json' 'sample_data/california_housing_test.csv' 'sample_data/california_housing_train.csv' 'sample_data/mnist_test.csv' 'sample_data/mnist_train_small.csv' 'sample_data/README.md' 'SRR8599150_S1_L001_R1_001.fastq.gz' 'SRR8599150_S1_L001_R2_001.fastq.gz' 't2g.txt' 'transcripts.txt' 1 2 # Read matrix into R res_mat <- read_count_output ( \"counts_unfiltered\" , name = \"cells_x_genes\" )","title":"Run kallisto and bustools"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#basic-qc","text":"","title":"Basic QC"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#filter-empty-droplets","text":"Most barcodes in the matrix correspond to empty droplets. A common way to determine which barcodes are empty droplets and which are real cells is to plot the rank of total UMI counts of each barcode against the total UMI count itself, which is commonly called knee plot. The inflection point in that plot, signifying a change in state, is used as a cutoff for total UMI counts; barcodes below that cutoff are deemed empty droplets and removed. 1 dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 55421 96775 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 25.74 3.00 2753.00 1 bc_rank <- barcodeRanks ( res_mat , lower = 10 )","title":"Filter empty droplets"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#examine-the-knee-plot","text":"The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. Will be added to the next release #' version of BUSpaRse. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( total , rank )) + geom_line () + geom_hline ( aes ( yintercept = rank_cutoff ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = inflection ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( y = \"Rank\" , x = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) 1 2 3 res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 21574 3655","title":"Examine the knee plot"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#visualizing-count-distributions","text":"Percentage of transcripts from mitochondrially encoded genes 1 2 3 tr2g <- read_tsv ( \"t2g.txt\" , col_names = c ( \"transcript\" , \"gene\" , \"gene_symbol\" )) %>% select ( - transcript ) %>% distinct () \u001b[36m\u2500\u2500\u001b[39m \u001b[1m\u001b[1mColumn specification\u001b[1m\u001b[22m \u001b[36m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u001b[39m cols( transcript = \u001b[31mcol_character()\u001b[39m, gene = \u001b[31mcol_character()\u001b[39m, gene_symbol = \u001b[31mcol_character()\u001b[39m ) 1 2 # Convert from Ensembl gene ID to gene symbol rownames ( res_mat ) <- tr2g $ gene_symbol [ match ( rownames ( res_mat ), tr2g $ gene )] 1 seu <- CreateSeuratObject ( res_mat , min.cells = 3 , min.features = 200 ) Warning message: \u201cNon-unique features (rownames) present in the input matrix, making unique\u201d 1 seu [[ \"percent.mt\" ]] <- PercentageFeatureSet ( seu , pattern = \"^mt-\" ) 1 2 3 # Visualize QC metrics as a violin plot options ( repr.plot.width = 12 , repr.plot.height = 6 ) VlnPlot ( seu , features = c ( \"nFeature_RNA\" , \"nCount_RNA\" , \"percent.mt\" ), ncol = 3 , pt.size = 0.1 ) 1 2 3 4 5 6 7 8 options ( repr.plot.width = 9 , repr.plot.height = 6 ) ggplot ( seu @ meta.data , aes ( nCount_RNA , nFeature_RNA )) + geom_hex ( bins = 100 ) + scale_fill_scico ( palette = \"devon\" , direction = -1 , end = 0.9 ) + scale_x_log10 ( breaks = breaks_log ( 12 )) + scale_y_log10 ( breaks = breaks_log ( 12 )) + annotation_logticks () + labs ( x = \"Total UMI counts\" , y = \"Number of genes detected\" ) + theme ( panel.grid.minor = element_blank ()) Warning message : \u201cComputation failed in `stat_binhex()` : Package `hexbin` required for `stat_binhex` . Please install and try again . \u201d 1 2 3 4 ggplot ( seu @ meta.data , aes ( nCount_RNA , percent.mt )) + geom_pointdensity () + scale_color_scico ( palette = \"devon\" , direction = -1 , end = 0.9 ) + labs ( x = \"Total UMI counts\" , y = \"Percentage mitochondrial\" ) The color shows density of points, as the density is not apparent when many points are stacked on top of each other. Cells with high percentage of mitochondrially encoded transcripts are often removed in QC, as those are likely to be low quality cells. If a cell is lysed in sample preparation, transcripts in the mitochondria are less likely to be lost than transcripts in the cytoplasm due to the double membrane of the mitochondria, so cells that lysed tend to have a higher percentage of mitochondrially encoded transcripts. We filter cells with more than 3% mitochondrial content based on the plot above. 1 seu <- subset ( seu , subset = percent.mt < 3 ) 1 seu <- NormalizeData ( seu ) %>% ScaleData () Centering and scaling data matrix","title":"Visualizing count distributions"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#analysis","text":"","title":"Analysis"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#identify-highly-variable-genes","text":"1 2 3 4 seu <- FindVariableFeatures ( seu , nfeatures = 3000 ) top10 <- head ( VariableFeatures ( seu ), 10 ) plot1 <- VariableFeaturePlot ( seu , log = FALSE ) LabelPoints ( plot = plot1 , points = top10 , repel = TRUE ) When using repel , set xnudge and ynudge to 0 for optimal results","title":"Identify highly variable genes"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#pca","text":"1 2 seu <- RunPCA ( seu , verbose = FALSE , npcs = 20 ) # uses HVG by default ElbowPlot ( seu , ndims = 20 ) 1 PCAPlot ( seu )","title":"PCA"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#clustering-and-visualization","text":"There are many algorithms for clustering cells, and while they have been compared in detail in various benchmarks (see e.g., Duo et al. 2018 ), there is no univerally agreed upon method. Here we demonstrate clustering using Louvain clustering , which is a popular method for clustering single-cell RNA-seq data. The method was published in Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \"Fast unfolding of communities in large networks\". Journal of Statistical Mechanics: Theory and Experiment. 2008 (10): P10008. 1 2 seu <- FindNeighbors ( seu , dims = 1 : 10 ) seu <- FindClusters ( seu ) Computing nearest neighbor graph Computing SNN Modularity Optimizer version 1 . 3 . 0 by Ludo Waltman and Nees Jan van Eck Number of nodes : 3507 Number of edges : 112378 Running Louvain algorithm ... Maximum modularity in 10 random starts : 0 . 7206 Number of communities : 8 Elapsed time : 0 seconds 1 PCAPlot ( seu )","title":"Clustering and visualization"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#tsne","text":"t-SNE is a non-linear dimensionality reduction technique described in: Maaten, Laurens van der, and Geoffrey Hinton. \"Visualizing data using t-SNE.\" Journal of machine learning research 9.Nov (2008): 2579-2605. Here it is applied to the 10-dimensional PCA projection of the cells. 1 2 seu <- RunTSNE ( seu , dims = 1 : 10 ) TSNEPlot ( seu )","title":"tSNE"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#umap","text":"UMAP (UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction) is a manifold learning technique that can also be used to visualize cells. It was published in: McInnes, Leland, John Healy, and James Melville. \"Umap: Uniform manifold approximation and projection for dimension reduction.\" arXiv preprint arXiv:1802.03426 (2018). 1 2 seu <- RunUMAP ( seu , dims = 1 : 10 , verbose = FALSE ) UMAPPlot ( seu ) Warning message : \u201c The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R - native UWOT using the cosine metric To use Python UMAP via reticulate , set umap . method to ' umap-learn ' and metric to ' correlation ' This message will be shown once per session \u201d","title":"UMAP"},{"location":"tutorials/kb_getting_started/R/kb_intro_2_R.html#discussion","text":"This notebook has demonstrated visualization of cells following pre-processing of single-cell RNA-seq data. 1 Sys.time () - start_time Time difference of 38.41409 mins Installing packages took about 26 minutes, which is a drawback of Rcpp. The QC and analysis post-installation takes about 10 minutes from reads to results. This includes downloading the data, filtering, clustering and visualization. Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located . 1","title":"Discussion"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html","text":"Introduction to single-cell RNA-seq II: getting started with analysis \u00b6 This notebook demonstrates pre-processing and basic analysis of the mouse retinal cells GSE126783 dataset from Koren et al., 2019 . Following pre-processing using kallisto and bustools and basic QC, the notebook demonstrates some initial analysis. The approximate running time of the notebook is about 13 minutes. The notebook was written by Kyung Hoi (Joseph) Min, A. Sina Booeshaghi and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook, as well as specific methods they run (these are cited inline in the notebook): Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Wolf, F. A., Angere, P. and Theis, F.J. SCANPY: large-scale single-cell gene expression data analysis. Genome Biology (2018). doi:10.1186/s13059-017-1382-0 An R notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses. Setup \u00b6 1 2 3 # This is used to time the running of the notebook import time start_time = time.time() Install python packages \u00b6 1 2 3 4 5 # These packages are pre-installed on Google Colab, but are included here to facilitate running this notebook locally !pip install --quiet matplotlib !pip install --quiet scikit-learn !pip install --quiet numpy !pip install --quiet scipy 1 2 3 %%time # `kb` is a wrapper for the kallisto and bustools program, and the kb-python package contains the kallisto and bustools executables. !pip install --quiet kb-python==0.24.1 \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 35 . 4 MB 82 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 133 kB 39 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 8 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 45 . 3 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 107 ms , sys : 25 . 2 ms , total : 133 ms Wall time : 10 . 2 s 1 2 3 %%time # Install scanpy and other packages needed for single-cell RNA-seq analysis !pip install --quiet scanpy python-igraph louvain MulticoreTSNE pybiomart \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 0 MB 8 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3 . 2 MB 50 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 2 MB 44 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 11 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 1 MB 48 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 10 . 0 MB / s \u001b[? 25 h Building wheel for MulticoreTSNE ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 108 ms , sys : 23 . 3 ms , total : 132 ms Wall time : 14 . 8 s 1 2 3 4 5 6 7 8 9 10 11 12 # Import packages import anndata import matplotlib import matplotlib.pyplot as plt import numpy as np import pandas as pd import scanpy as sc from sklearn.decomposition import TruncatedSVD from scipy import sparse, io matplotlib.rcParams.update({'font.size': 12}) %config InlineBackend.figure_format = 'retina' Download the data \u00b6 Note: We use the -O option for wget to rename the files so they can be easily identified. The notebook requires reads in fastq format; the files can be processed in gzip compressed format. In this example the reads are downloaded from a Box drive; see the data download notebook for information on where to find publicly available single-cell RNA-seq data. 1 2 3 4 %%time !wget -q https://caltech.box.com/shared/static/9u2qk1uqu6py03phooe1ti0kjd9v87pu.txt -O checksums.txt !wget -q https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz -O SRR8599150_S1_L001_R1_001.fastq.gz !wget -q https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz -O SRR8599150_S1_L001_R2_001.fastq.gz CPU times: user 229 ms, sys: 67.9 ms, total: 297 ms Wall time: 52.9 s 1 # This is formatted as code Next, we verify the integrity of the files that were downloaded to confirm that they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing SRR8599150_S1_L001_R1_001.fastq.gz: OK SRR8599150_S1_L001_R2_001.fastq.gz: OK Download an index \u00b6 Note: See this notebook for a tutorial on how to build custom transcriptome indices or indices for RNA velocity. 1 2 3 %%time # This downloads a pre-built index for kallisto to use when pseudoaligning the reads !kb ref -d mouse -i index.idx -g t2g.txt [ 2021 - 07 - 07 18 : 15 : 23 , 071 ] INFO Downloading files for mouse from https : // caltech . box . com / shared / static / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz to tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz [ 2021 - 07 - 07 18 : 16 : 52 , 467 ] INFO Extracting files from tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz CPU times : user 584 ms , sys : 114 ms , total : 698 ms Wall time : 2 min 12 s Pseudoalignment and counting \u00b6 Run kallisto and bustools \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice that this requires providing the index and transcript-to-gene mapping downloaded in the previous step to the -i and -g arguments respectively. Also, since the reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, the -x 10xv2 argument is used. To view other supported technologies, run kb --list . Note: To output a Loom file instead, replace the --h5ad flag with --loom . To obtain the raw matrix output by kb instead of the H5AD or Loom converted files, omit these flags. 1 2 3 4 %%time # This step runs `kb` to pseudoalign the reads, and then generate the cells x gene matrix in h5ad format. !kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 \\ SRR8599150_S1_L001_R1_001.fastq.gz SRR8599150_S1_L001_R2_001.fastq.gz [2021-07-07 18:17:35,074] INFO Generating BUS file from [2021-07-07 18:17:35,074] INFO SRR8599150_S1_L001_R1_001.fastq.gz [2021-07-07 18:17:35,074] INFO SRR8599150_S1_L001_R2_001.fastq.gz [2021-07-07 18:19:52,582] INFO Sorting BUS file ./output.bus to tmp/output.s.bus [2021-07-07 18:19:55,911] INFO Whitelist not provided [2021-07-07 18:19:55,912] INFO Copying pre-packaged 10XV2 whitelist to . [2021-07-07 18:19:56,015] INFO Inspecting BUS file tmp/output.s.bus [2021-07-07 18:19:57,425] INFO Correcting BUS records in tmp/output.s.bus to tmp/output.s.c.bus with whitelist ./10xv2_whitelist.txt [2021-07-07 18:20:11,880] INFO Sorting BUS file tmp/output.s.c.bus to ./output.unfiltered.bus [2021-07-07 18:20:14,882] INFO Generating count matrix ./counts_unfiltered/cells_x_genes from BUS file ./output.unfiltered.bus [2021-07-07 18:20:16,944] INFO Converting matrix ./counts_unfiltered/cells_x_genes.mtx to h5ad ./counts_unfiltered/adata.h5ad CPU times: user 1.05 s, sys: 159 ms, total: 1.2 s Wall time: 2min 45s Exercise \u00b6 Loom is a alternative format for storing single-cell count matrices. Output a Loom file with kb by replacing the --h5ad flag with --loom , or obtain the raw matrix output by omitting the flags 1 2 3 4 %%time # # This runs `kb` to pseudoalign the reads, and then generate the cells x gene matrix in Loom format. # !kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 \\ # SRR8599150_S1_L001_R1_001.fastq.gz SRR8599150_S1_L001_R2_001.fastq.gz CPU times: user 2 \u00b5s, sys: 0 ns, total: 2 \u00b5s Wall time: 3.58 \u00b5s Basic QC \u00b6 First, the cells x genes matrix is imported into an H5AD-formatted Anndata matrix. Anndata is a convenient format for storing single-cell count matrices in Python. 1 2 3 # import data adata = anndata.read('counts_unfiltered/adata.h5ad') adata AnnData object with n_obs \u00d7 n_vars = 96775 \u00d7 55421 Represent the cells in 2D with PCA This is one type of embedding in which cells in higher dimensional gene expression space are represented in two dimensions. 1 2 3 4 5 6 7 8 9 10 11 12 # Perform SVD tsvd = TruncatedSVD(n_components=2) tsvd.fit(adata.X) X = tsvd.transform(adata.X) # Plot the cells in the 2D PCA projection fig, ax = plt.subplots(figsize=(10, 7)) ax.scatter(X[:,0], X[:,1], alpha=0.5, c=\"green\") plt.axis('off') plt.show() Test for library saturation \u00b6 For each cell we ask how many genes did we detect (or see non-zero expression). The idea is that if we have \"saturated\" our sequencing library then increasing the number of UMI counts (x-axis) will not yield an appreciable increase in the number of genes detected (y-axis). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Create a plot showing genes detected as a function of UMI counts. fig, ax = plt.subplots(figsize=(10, 7)) x = np.asarray(adata.X.sum(axis=1))[:,0] y = np.asarray(np.sum(adata.X>0, axis=1))[:,0] ax.scatter(x, y, color=\"green\", alpha=0.25) ax.set_xlabel(\"UMI Counts\") ax.set_ylabel(\"Genes Detected\") ax.set_xscale('log') ax.set_yscale('log', nonposy='clip') ax.set_xlim((0.5, 4500)) ax.set_ylim((0.5,2000)) plt.show() Examine the knee plot \u00b6 The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis. The idea is that \"real\" cells have a certain number of UMI counts and that a threshold on the UMI counts filters those cells. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #@title Threshold cells according to knee plot { run: \"auto\", vertical-output: true } cutoff = 200#@param {type:\"integer\"} knee = np.sort((np.array(adata.X.sum(axis=1))).flatten())[::-1] cell_set = np.arange(len(knee)) num_cells = cell_set[knee > cutoff][::-1][0] fig, ax = plt.subplots(figsize=(10, 7)) ax.loglog(knee, cell_set, linewidth=5, color=\"g\") ax.axvline(x=cutoff, linewidth=3, color=\"k\") ax.axhline(y=num_cells, linewidth=3, color=\"k\") ax.set_xlabel(\"UMI Counts\") ax.set_ylabel(\"Set of Barcodes\") plt.grid(True, which=\"both\") plt.show() 1 print(f\"{num_cells:,.0f} cells passed the {cutoff} UMI threshold\") 3 , 791 cells passed the 200 UMI threshold The knee plot can be used to threshold cells based on the number of UMI counts they contain. The threshold is applied at the \"knee\", where there is a sharp dropoff in the number of UMIs per cell. In this example we use the nunber 3979 based on the publication describing the data. Filter empty droplets \u00b6 1 adata AnnData object with n_obs \u00d7 n_vars = 96775 \u00d7 55421 1 2 3 # Filter the cells according to the threshold determined from the knee plot sc.pp.filter_cells(adata, min_genes=200) sc.pp.filter_cells(adata, min_counts=knee[expected_num_cells]) 1 adata AnnData object with n_obs \u00d7 n_vars = 3536 \u00d7 55421 obs : 'n_genes' , 'n_counts' Filtering out by mitochondrial content \u00b6 1 mito_ensembl_ids = sc.queries.mitochondrial_genes(\"mmusculus\", attrname=\"ensembl_gene_id\") 1 2 3 4 5 6 7 mito_genes = mito_ensembl_ids[\"ensembl_gene_id\"].values # for each cell compute fraction of counts in mito genes vs. all genes # the `.A1` is only necessary as X is sparse (to transform to a dense array after summing) adata.obs['percent_mito'] = np.sum( adata[:, mito_genes].X, axis=1).A1 / np.sum(adata.X, axis=1).A1 # add the total counts per cell as observations-annotation to adata adata.obs['n_counts'] = adata.X.sum(axis=1).A1 1 sc.pl.scatter(adata, x='n_counts', y='percent_mito') 1 adata = adata[adata.obs.percent_mito < 0.03] Filter out genes that are not present in any cells \u00b6 1 sc.pp.filter_genes(adata, min_cells=3) Trying to set attribute ` . var ` of view , copying . 1 adata AnnData object with n_obs \u00d7 n_vars = 3507 \u00d7 15420 obs : 'n_genes' , 'n_counts' , 'percent_mito' var : 'n_cells' Visualizing count distributions \u00b6 Examination of the gene count and UMI count distributions is useful QC to evaluate the quality of the library and how deeply it was sequenced. 1 sc.pl.violin(adata, ['n_genes', 'n_counts', 'percent_mito'], jitter=0.4, multi_panel=True) Analysis \u00b6 In this part of the tutorial, the cells are clustered by Louvain community detection . Normalize the counts \u00b6 1 2 sc.pp.normalize_per_cell(adata, counts_per_cell_after=1e4) sc.pp.log1p(adata) Identify highly variable genes \u00b6 1 2 3 # flavor=\"cell_ranger\" is consistent with Seurat and flavor=\"suerat\" is not consistent with Seurat sc.pp.highly_variable_genes(adata, min_mean=0.01, max_mean=8, min_disp=1, n_top_genes=3000, n_bins=20, flavor=\"seurat\") sc.pl.highly_variable_genes(adata) 1 sc.pp.scale(adata, max_value=10) Clustering and visualization \u00b6 There are many algorithms for clustering cells, and while they have been compared in detail in various benchmarks (see e.g., Duo et al. 2018 ), there is no univerally agreed upon method. Here we demonstrate clustering using Louvain clustering , which is a popular method for clustering single-cell RNA-seq data. The method was published in Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \"Fast unfolding of communities in large networks\". Journal of Statistical Mechanics: Theory and Experiment. 2008 (10): P10008. 1 2 3 4 5 %%time # Cluster the cells using Louvain clustering sc.tl.pca(adata, svd_solver='arpack', use_highly_variable=True, n_comps=10) sc.pp.neighbors(adata, n_neighbors=30, n_pcs=10, knn=True) sc.tl.louvain(adata) /usr/local/lib/python3.7/dist-packages/numba/np/ufunc/parallel.py:363: NumbaWarning: The TBB threading layer requires TBB version 2019.5 or later i.e., TBB_INTERFACE_VERSION >= 11005. Found TBB_INTERFACE_VERSION = 9107. The TBB threading layer is disabled. warnings.warn(problem) CPU times: user 18.2 s, sys: 804 ms, total: 19 s Wall time: 18.8 s It is useful to revisit the PCA project with points colored by cluster. Previously we computed the PCA projection directly; here we use a function in ScanPy which does the same. PCA \u00b6 1 2 3 # Perform PCA and plot the projection to the first two dimensions, with points colored according to the Louvain clusters. fig, ax = plt.subplots(figsize=(10, 7)) sc.pl.pca(adata, color='louvain', ax=ax) The PCA representation is the result a linear map of the data from its ambient dimension, to low dimension (in the case above 2D). While such projections are useful, there are non-linear methods that can capture non-linear geometry in the data. tSNE \u00b6 t-SNE is a non-linear dimensionality reduction technique described in: Maaten, Laurens van der, and Geoffrey Hinton. \"Visualizing data using t-SNE.\" Journal of machine learning research 9.Nov (2008): 2579-2605. Here it is applied to the 10-dimensional PCA projection of the cells. 1 2 3 4 %%time # Visualize cells with t-SNE. The n_pcs parameter sets the number of principal components to project to prior to # performing t-SNE sc.tl.tsne(adata, n_pcs=10) CPU times: user 49.6 s, sys: 109 ms, total: 49.7 s Wall time: 25.4 s 1 2 fig, ax = plt.subplots(figsize=(10, 7)) sc.pl.tsne(adata, color='louvain', ax=ax) UMAP \u00b6 UMAP stands for Uniform Manifold Approximation and Projection is a non-linear dimensionality reduction techinque described in Leland McInnes and John Healy and James Melville, \"UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction\" 2018 1802.03426 arXiv stat.ML 1 2 3 4 %%time # Visualize cells with t-SNE. The n_pcs parameter sets the number of principal components to project to prior to # performing t-SNE sc.tl.umap(adata) CPU times: user 13 s, sys: 132 ms, total: 13.2 s Wall time: 12.6 s 1 2 fig, ax = plt.subplots(figsize=(10, 7)) sc.pl.umap(adata, color='louvain', ax=ax) Exercises \u00b6 The variance explained by each principal component is a measure of how well a projection to that component represents the data. Compute the variance explained by each component. 1 2 # Compute and plot the variance explained by the PC subspaces. # sc.pl.pca_variance_ratio(adata) In the notebook we visualized the data using t-SNE and UMAP. These two techniques can produce different two dimensional embeddings based with different parameters and even different random seeds. Change around these parameters to see how they affect the embedding. For tSNE parameters see https://icb-scanpy.readthedocs-hosted.com/en/stable/api/scanpy.tl.tsne.html For UMAP parameters see https://icb-scanpy.readthedocs-hosted.com/en/stable/api/scanpy.tl.umap.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # %%time # # Visualize cells with UMAP. # sc.tl.tsne(adata, # n_pcs=None, # use_rep=None, # perplexity=30, # early_exaggeration=12, # learning_rate=1000, # random_state=0, # use_fast_tsne=True, # n_jobs=None, # copy=False) # fig, ax = plt.subplots(figsize=(10, 7)) # sc.pl.tsne(adata, color='louvain', ax=ax) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # %%time # # Visualize cells with UMAP. # sc.tl.umap(adata, # min_dist=0.5, # spread=1.0, # n_components=2, # maxiter=None, # alpha=1.0, # gamma=1.0, # negative_sample_rate=5, # init_pos='spectral', # random_state=0, # a=None, # b=None, # copy=False, # method='umap') # fig, ax = plt.subplots(figsize=(10, 7)) # sc.pl.umap(adata, color='louvain', ax=ax) Discussion \u00b6 This notebook has demonstrated visualization of cells following pre-processing of single-cell RNA-seq data. 1 2 # Running time of the notebook print(\"{:.2f} minutes\".format((time.time()-start_time)/60)) 7.70 minutes Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"Python"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#introduction-to-single-cell-rna-seq-ii-getting-started-with-analysis","text":"This notebook demonstrates pre-processing and basic analysis of the mouse retinal cells GSE126783 dataset from Koren et al., 2019 . Following pre-processing using kallisto and bustools and basic QC, the notebook demonstrates some initial analysis. The approximate running time of the notebook is about 13 minutes. The notebook was written by Kyung Hoi (Joseph) Min, A. Sina Booeshaghi and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publications which describe the tools used in the notebook, as well as specific methods they run (these are cited inline in the notebook): Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Wolf, F. A., Angere, P. and Theis, F.J. SCANPY: large-scale single-cell gene expression data analysis. Genome Biology (2018). doi:10.1186/s13059-017-1382-0 An R notebook implementing the same analysis is available here . See the kallistobus.tools tutorials site for additional notebooks demonstrating other analyses.","title":"Introduction to single-cell RNA-seq II: getting started with analysis"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#setup","text":"1 2 3 # This is used to time the running of the notebook import time start_time = time.time()","title":"Setup"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#install-python-packages","text":"1 2 3 4 5 # These packages are pre-installed on Google Colab, but are included here to facilitate running this notebook locally !pip install --quiet matplotlib !pip install --quiet scikit-learn !pip install --quiet numpy !pip install --quiet scipy 1 2 3 %%time # `kb` is a wrapper for the kallisto and bustools program, and the kb-python package contains the kallisto and bustools executables. !pip install --quiet kb-python==0.24.1 \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 35 . 4 MB 82 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 133 kB 39 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 8 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 45 . 3 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 107 ms , sys : 25 . 2 ms , total : 133 ms Wall time : 10 . 2 s 1 2 3 %%time # Install scanpy and other packages needed for single-cell RNA-seq analysis !pip install --quiet scanpy python-igraph louvain MulticoreTSNE pybiomart \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 0 MB 8 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3 . 2 MB 50 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 2 . 2 MB 44 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 11 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 1 MB 48 . 9 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 10 . 0 MB / s \u001b[? 25 h Building wheel for MulticoreTSNE ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone CPU times : user 108 ms , sys : 23 . 3 ms , total : 132 ms Wall time : 14 . 8 s 1 2 3 4 5 6 7 8 9 10 11 12 # Import packages import anndata import matplotlib import matplotlib.pyplot as plt import numpy as np import pandas as pd import scanpy as sc from sklearn.decomposition import TruncatedSVD from scipy import sparse, io matplotlib.rcParams.update({'font.size': 12}) %config InlineBackend.figure_format = 'retina'","title":"Install python packages"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#download-the-data","text":"Note: We use the -O option for wget to rename the files so they can be easily identified. The notebook requires reads in fastq format; the files can be processed in gzip compressed format. In this example the reads are downloaded from a Box drive; see the data download notebook for information on where to find publicly available single-cell RNA-seq data. 1 2 3 4 %%time !wget -q https://caltech.box.com/shared/static/9u2qk1uqu6py03phooe1ti0kjd9v87pu.txt -O checksums.txt !wget -q https://caltech.box.com/shared/static/w9ww8et5o029s2e3usjzpbq8lpot29rh.gz -O SRR8599150_S1_L001_R1_001.fastq.gz !wget -q https://caltech.box.com/shared/static/ql00zyvqnpy7bf8ogdoe9zfy907guzy9.gz -O SRR8599150_S1_L001_R2_001.fastq.gz CPU times: user 229 ms, sys: 67.9 ms, total: 297 ms Wall time: 52.9 s 1 # This is formatted as code Next, we verify the integrity of the files that were downloaded to confirm that they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing SRR8599150_S1_L001_R1_001.fastq.gz: OK SRR8599150_S1_L001_R2_001.fastq.gz: OK","title":"Download the data"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#download-an-index","text":"Note: See this notebook for a tutorial on how to build custom transcriptome indices or indices for RNA velocity. 1 2 3 %%time # This downloads a pre-built index for kallisto to use when pseudoaligning the reads !kb ref -d mouse -i index.idx -g t2g.txt [ 2021 - 07 - 07 18 : 15 : 23 , 071 ] INFO Downloading files for mouse from https : // caltech . box . com / shared / static / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz to tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz [ 2021 - 07 - 07 18 : 16 : 52 , 467 ] INFO Extracting files from tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz CPU times : user 584 ms , sys : 114 ms , total : 698 ms Wall time : 2 min 12 s","title":"Download an index"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#pseudoalignment-and-counting","text":"","title":"Pseudoalignment and counting"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#run-kallisto-and-bustools","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice that this requires providing the index and transcript-to-gene mapping downloaded in the previous step to the -i and -g arguments respectively. Also, since the reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, the -x 10xv2 argument is used. To view other supported technologies, run kb --list . Note: To output a Loom file instead, replace the --h5ad flag with --loom . To obtain the raw matrix output by kb instead of the H5AD or Loom converted files, omit these flags. 1 2 3 4 %%time # This step runs `kb` to pseudoalign the reads, and then generate the cells x gene matrix in h5ad format. !kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 \\ SRR8599150_S1_L001_R1_001.fastq.gz SRR8599150_S1_L001_R2_001.fastq.gz [2021-07-07 18:17:35,074] INFO Generating BUS file from [2021-07-07 18:17:35,074] INFO SRR8599150_S1_L001_R1_001.fastq.gz [2021-07-07 18:17:35,074] INFO SRR8599150_S1_L001_R2_001.fastq.gz [2021-07-07 18:19:52,582] INFO Sorting BUS file ./output.bus to tmp/output.s.bus [2021-07-07 18:19:55,911] INFO Whitelist not provided [2021-07-07 18:19:55,912] INFO Copying pre-packaged 10XV2 whitelist to . [2021-07-07 18:19:56,015] INFO Inspecting BUS file tmp/output.s.bus [2021-07-07 18:19:57,425] INFO Correcting BUS records in tmp/output.s.bus to tmp/output.s.c.bus with whitelist ./10xv2_whitelist.txt [2021-07-07 18:20:11,880] INFO Sorting BUS file tmp/output.s.c.bus to ./output.unfiltered.bus [2021-07-07 18:20:14,882] INFO Generating count matrix ./counts_unfiltered/cells_x_genes from BUS file ./output.unfiltered.bus [2021-07-07 18:20:16,944] INFO Converting matrix ./counts_unfiltered/cells_x_genes.mtx to h5ad ./counts_unfiltered/adata.h5ad CPU times: user 1.05 s, sys: 159 ms, total: 1.2 s Wall time: 2min 45s","title":"Run kallisto and bustools"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#exercise","text":"Loom is a alternative format for storing single-cell count matrices. Output a Loom file with kb by replacing the --h5ad flag with --loom , or obtain the raw matrix output by omitting the flags 1 2 3 4 %%time # # This runs `kb` to pseudoalign the reads, and then generate the cells x gene matrix in Loom format. # !kb count -i index.idx -g t2g.txt -x 10xv2 --h5ad -t 2 \\ # SRR8599150_S1_L001_R1_001.fastq.gz SRR8599150_S1_L001_R2_001.fastq.gz CPU times: user 2 \u00b5s, sys: 0 ns, total: 2 \u00b5s Wall time: 3.58 \u00b5s","title":"Exercise"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#basic-qc","text":"First, the cells x genes matrix is imported into an H5AD-formatted Anndata matrix. Anndata is a convenient format for storing single-cell count matrices in Python. 1 2 3 # import data adata = anndata.read('counts_unfiltered/adata.h5ad') adata AnnData object with n_obs \u00d7 n_vars = 96775 \u00d7 55421 Represent the cells in 2D with PCA This is one type of embedding in which cells in higher dimensional gene expression space are represented in two dimensions. 1 2 3 4 5 6 7 8 9 10 11 12 # Perform SVD tsvd = TruncatedSVD(n_components=2) tsvd.fit(adata.X) X = tsvd.transform(adata.X) # Plot the cells in the 2D PCA projection fig, ax = plt.subplots(figsize=(10, 7)) ax.scatter(X[:,0], X[:,1], alpha=0.5, c=\"green\") plt.axis('off') plt.show()","title":"Basic QC"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#test-for-library-saturation","text":"For each cell we ask how many genes did we detect (or see non-zero expression). The idea is that if we have \"saturated\" our sequencing library then increasing the number of UMI counts (x-axis) will not yield an appreciable increase in the number of genes detected (y-axis). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Create a plot showing genes detected as a function of UMI counts. fig, ax = plt.subplots(figsize=(10, 7)) x = np.asarray(adata.X.sum(axis=1))[:,0] y = np.asarray(np.sum(adata.X>0, axis=1))[:,0] ax.scatter(x, y, color=\"green\", alpha=0.25) ax.set_xlabel(\"UMI Counts\") ax.set_ylabel(\"Genes Detected\") ax.set_xscale('log') ax.set_yscale('log', nonposy='clip') ax.set_xlim((0.5, 4500)) ax.set_ylim((0.5,2000)) plt.show()","title":"Test for library saturation"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#examine-the-knee-plot","text":"The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis. The idea is that \"real\" cells have a certain number of UMI counts and that a threshold on the UMI counts filters those cells. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #@title Threshold cells according to knee plot { run: \"auto\", vertical-output: true } cutoff = 200#@param {type:\"integer\"} knee = np.sort((np.array(adata.X.sum(axis=1))).flatten())[::-1] cell_set = np.arange(len(knee)) num_cells = cell_set[knee > cutoff][::-1][0] fig, ax = plt.subplots(figsize=(10, 7)) ax.loglog(knee, cell_set, linewidth=5, color=\"g\") ax.axvline(x=cutoff, linewidth=3, color=\"k\") ax.axhline(y=num_cells, linewidth=3, color=\"k\") ax.set_xlabel(\"UMI Counts\") ax.set_ylabel(\"Set of Barcodes\") plt.grid(True, which=\"both\") plt.show() 1 print(f\"{num_cells:,.0f} cells passed the {cutoff} UMI threshold\") 3 , 791 cells passed the 200 UMI threshold The knee plot can be used to threshold cells based on the number of UMI counts they contain. The threshold is applied at the \"knee\", where there is a sharp dropoff in the number of UMIs per cell. In this example we use the nunber 3979 based on the publication describing the data.","title":"Examine the knee plot"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#filter-empty-droplets","text":"1 adata AnnData object with n_obs \u00d7 n_vars = 96775 \u00d7 55421 1 2 3 # Filter the cells according to the threshold determined from the knee plot sc.pp.filter_cells(adata, min_genes=200) sc.pp.filter_cells(adata, min_counts=knee[expected_num_cells]) 1 adata AnnData object with n_obs \u00d7 n_vars = 3536 \u00d7 55421 obs : 'n_genes' , 'n_counts'","title":"Filter empty droplets"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#filtering-out-by-mitochondrial-content","text":"1 mito_ensembl_ids = sc.queries.mitochondrial_genes(\"mmusculus\", attrname=\"ensembl_gene_id\") 1 2 3 4 5 6 7 mito_genes = mito_ensembl_ids[\"ensembl_gene_id\"].values # for each cell compute fraction of counts in mito genes vs. all genes # the `.A1` is only necessary as X is sparse (to transform to a dense array after summing) adata.obs['percent_mito'] = np.sum( adata[:, mito_genes].X, axis=1).A1 / np.sum(adata.X, axis=1).A1 # add the total counts per cell as observations-annotation to adata adata.obs['n_counts'] = adata.X.sum(axis=1).A1 1 sc.pl.scatter(adata, x='n_counts', y='percent_mito') 1 adata = adata[adata.obs.percent_mito < 0.03]","title":"Filtering out by mitochondrial content"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#filter-out-genes-that-are-not-present-in-any-cells","text":"1 sc.pp.filter_genes(adata, min_cells=3) Trying to set attribute ` . var ` of view , copying . 1 adata AnnData object with n_obs \u00d7 n_vars = 3507 \u00d7 15420 obs : 'n_genes' , 'n_counts' , 'percent_mito' var : 'n_cells'","title":"Filter out genes that are not present in any cells"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#visualizing-count-distributions","text":"Examination of the gene count and UMI count distributions is useful QC to evaluate the quality of the library and how deeply it was sequenced. 1 sc.pl.violin(adata, ['n_genes', 'n_counts', 'percent_mito'], jitter=0.4, multi_panel=True)","title":"Visualizing count distributions"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#analysis","text":"In this part of the tutorial, the cells are clustered by Louvain community detection .","title":"Analysis"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#normalize-the-counts","text":"1 2 sc.pp.normalize_per_cell(adata, counts_per_cell_after=1e4) sc.pp.log1p(adata)","title":"Normalize the counts"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#identify-highly-variable-genes","text":"1 2 3 # flavor=\"cell_ranger\" is consistent with Seurat and flavor=\"suerat\" is not consistent with Seurat sc.pp.highly_variable_genes(adata, min_mean=0.01, max_mean=8, min_disp=1, n_top_genes=3000, n_bins=20, flavor=\"seurat\") sc.pl.highly_variable_genes(adata) 1 sc.pp.scale(adata, max_value=10)","title":"Identify highly variable genes"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#clustering-and-visualization","text":"There are many algorithms for clustering cells, and while they have been compared in detail in various benchmarks (see e.g., Duo et al. 2018 ), there is no univerally agreed upon method. Here we demonstrate clustering using Louvain clustering , which is a popular method for clustering single-cell RNA-seq data. The method was published in Blondel, Vincent D; Guillaume, Jean-Loup; Lambiotte, Renaud; Lefebvre, Etienne (9 October 2008). \"Fast unfolding of communities in large networks\". Journal of Statistical Mechanics: Theory and Experiment. 2008 (10): P10008. 1 2 3 4 5 %%time # Cluster the cells using Louvain clustering sc.tl.pca(adata, svd_solver='arpack', use_highly_variable=True, n_comps=10) sc.pp.neighbors(adata, n_neighbors=30, n_pcs=10, knn=True) sc.tl.louvain(adata) /usr/local/lib/python3.7/dist-packages/numba/np/ufunc/parallel.py:363: NumbaWarning: The TBB threading layer requires TBB version 2019.5 or later i.e., TBB_INTERFACE_VERSION >= 11005. Found TBB_INTERFACE_VERSION = 9107. The TBB threading layer is disabled. warnings.warn(problem) CPU times: user 18.2 s, sys: 804 ms, total: 19 s Wall time: 18.8 s It is useful to revisit the PCA project with points colored by cluster. Previously we computed the PCA projection directly; here we use a function in ScanPy which does the same.","title":"Clustering and visualization"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#pca","text":"1 2 3 # Perform PCA and plot the projection to the first two dimensions, with points colored according to the Louvain clusters. fig, ax = plt.subplots(figsize=(10, 7)) sc.pl.pca(adata, color='louvain', ax=ax) The PCA representation is the result a linear map of the data from its ambient dimension, to low dimension (in the case above 2D). While such projections are useful, there are non-linear methods that can capture non-linear geometry in the data.","title":"PCA"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#tsne","text":"t-SNE is a non-linear dimensionality reduction technique described in: Maaten, Laurens van der, and Geoffrey Hinton. \"Visualizing data using t-SNE.\" Journal of machine learning research 9.Nov (2008): 2579-2605. Here it is applied to the 10-dimensional PCA projection of the cells. 1 2 3 4 %%time # Visualize cells with t-SNE. The n_pcs parameter sets the number of principal components to project to prior to # performing t-SNE sc.tl.tsne(adata, n_pcs=10) CPU times: user 49.6 s, sys: 109 ms, total: 49.7 s Wall time: 25.4 s 1 2 fig, ax = plt.subplots(figsize=(10, 7)) sc.pl.tsne(adata, color='louvain', ax=ax)","title":"tSNE"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#umap","text":"UMAP stands for Uniform Manifold Approximation and Projection is a non-linear dimensionality reduction techinque described in Leland McInnes and John Healy and James Melville, \"UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction\" 2018 1802.03426 arXiv stat.ML 1 2 3 4 %%time # Visualize cells with t-SNE. The n_pcs parameter sets the number of principal components to project to prior to # performing t-SNE sc.tl.umap(adata) CPU times: user 13 s, sys: 132 ms, total: 13.2 s Wall time: 12.6 s 1 2 fig, ax = plt.subplots(figsize=(10, 7)) sc.pl.umap(adata, color='louvain', ax=ax)","title":"UMAP"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#exercises","text":"The variance explained by each principal component is a measure of how well a projection to that component represents the data. Compute the variance explained by each component. 1 2 # Compute and plot the variance explained by the PC subspaces. # sc.pl.pca_variance_ratio(adata) In the notebook we visualized the data using t-SNE and UMAP. These two techniques can produce different two dimensional embeddings based with different parameters and even different random seeds. Change around these parameters to see how they affect the embedding. For tSNE parameters see https://icb-scanpy.readthedocs-hosted.com/en/stable/api/scanpy.tl.tsne.html For UMAP parameters see https://icb-scanpy.readthedocs-hosted.com/en/stable/api/scanpy.tl.umap.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # %%time # # Visualize cells with UMAP. # sc.tl.tsne(adata, # n_pcs=None, # use_rep=None, # perplexity=30, # early_exaggeration=12, # learning_rate=1000, # random_state=0, # use_fast_tsne=True, # n_jobs=None, # copy=False) # fig, ax = plt.subplots(figsize=(10, 7)) # sc.pl.tsne(adata, color='louvain', ax=ax) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # %%time # # Visualize cells with UMAP. # sc.tl.umap(adata, # min_dist=0.5, # spread=1.0, # n_components=2, # maxiter=None, # alpha=1.0, # gamma=1.0, # negative_sample_rate=5, # init_pos='spectral', # random_state=0, # a=None, # b=None, # copy=False, # method='umap') # fig, ax = plt.subplots(figsize=(10, 7)) # sc.pl.umap(adata, color='louvain', ax=ax)","title":"Exercises"},{"location":"tutorials/kb_getting_started/python/kb_intro_2_python.html#discussion","text":"This notebook has demonstrated visualization of cells following pre-processing of single-cell RNA-seq data. 1 2 # Running time of the notebook print(\"{:.2f} minutes\".format((time.time()-start_time)/60)) 7.70 minutes Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"Discussion"},{"location":"tutorials/kb_kite/python/kb_kite.html","text":"Pre-processing and analysis of feature barcode single-cell RNA-seq data with KITE. \u00b6 In this notebook, we will perform pre-processing and analysis of 10x Genomics pbmc_1k_protein_v3 feature barcoding dataset using the Kallisto Indexing and Tag Extraction (KITE) workflow, implemented with a wrapper called kb . It was developed by Kyung Hoi (Joseph) Min and A. Sina Booeshaghi. In Feature Barcoding assays, cellular data are recorded as short DNA sequences using procedures adapted from single-cell RNA-seq. The KITE workflow generates a \"Mismatch Map\" containing the sequences of all Feature Barcodes used in the experiment as well as all of their single-base mismatches. The Mismatch Map is used to produce transcipt-to-gene (.t2g) and fasta (.fa) files to be used as inputs for kallisto. An index is made with kallisto index, then kallisto | bustools effectively searches the sequencing data for the sequences in the Mismatch Map. Pre-processing \u00b6 Download the data \u00b6 Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 %%time !wget -q https://caltech.box.com/shared/static/asmj4nu90ydhsrk3pm7aaxu00cnnfige.txt -O checksums.txt !wget -q https://caltech.box.com/shared/static/mp2vr3p6dztdyatuag8ir3cektmrztg8.gz -O pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz !wget -q https://caltech.box.com/shared/static/f3payi1za7mn0jfai7vm10sy3yqwgpqh.gz -O pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz !wget -q https://caltech.box.com/shared/static/e112bbczh9o1rl6gfin36bqp0ga7uvdy.gz -O pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz !wget -q https://caltech.box.com/shared/static/3ve2axc8dr8v5nnrhmynrdgpqj6xg42k.gz -O pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz CPU times: user 477 ms, sys: 86.2 ms, total: 563 ms Wall time: 1min Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz: OK pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz: OK pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz: OK pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz: OK Install kb \u00b6 Install kb for running the kallisto|bustools workflow. 1 !pip install --quiet git+https://github.com/pachterlab/kb_python@devel \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 2 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 314 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 43 . 4 MB / s \u001b[? 25 h Building wheel for kb - python ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Build the feature barcode mismatch index \u00b6 kb is able to generate a FASTA file containing all hamming distance < 2 variants of the feature barcodes and create a kallisto index of these sequences. But it in order to do so, we first need to prepare a TSV containing feature barcode sequences in the first column and the feature barcode names in the second. First, we download the feature reference file provided by 10x Genomics. 1 !wget -q http://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_protein_v3/pbmc_1k_protein_v3_feature_ref.csv Let's load it in as a Pandas DataFrame. 1 2 3 4 import pandas as pd df = pd.read_csv('pbmc_1k_protein_v3_feature_ref.csv') df .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id name read pattern sequence feature_type 0 CD3 CD3_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN AACAAGACCCTTGAG Antibody Capture 1 CD4 CD4_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TACCCGTAATAGCGT Antibody Capture 2 CD8a CD8a_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ATTGGCACTCAGATG Antibody Capture 3 CD14 CD14_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GAAAGTCAAAGCACT Antibody Capture 4 CD15 CD15_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ACGAATCAATCTGTG Antibody Capture 5 CD16 CD16_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GTCTTTGTCAGTGCA Antibody Capture 6 CD56 CD56_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GTTGTCCGACAATAC Antibody Capture 7 CD19 CD19_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TCAACGCTTGGCTAG Antibody Capture 8 CD25 CD25_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GTGCATTCAACAGTA Antibody Capture 9 CD45RA CD45RA_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GATGAGAACAGGTTT Antibody Capture 10 CD45RO CD45RO_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TGCATGTCATCGGTG Antibody Capture 11 PD-1 PD-1_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN AAGTCGTGAGGCATG Antibody Capture 12 TIGIT TIGIT_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TGAAGGCTCATTTGT Antibody Capture 13 CD127 CD127_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ACATTGACGCAACTA Antibody Capture 14 IgG2a IgG2a_control_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN CTCTATTCAGACCAG Antibody Capture 15 IgG1 IgG1_control_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ACTCACTGGAGTCTC Antibody Capture 16 IgG2b IgG2b_control_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ATCACATCGTTGCCA Antibody Capture We'll convert this dataframe into a TSV format that kb requires. 1 2 df[['sequence', 'id']].to_csv('features.tsv', index=None, header=None, sep='\\t') !cat features.tsv AACAAGACCCTTGAG CD3 TACCCGTAATAGCGT CD4 ATTGGCACTCAGATG CD8a GAAAGTCAAAGCACT CD14 ACGAATCAATCTGTG CD15 GTCTTTGTCAGTGCA CD16 GTTGTCCGACAATAC CD56 TCAACGCTTGGCTAG CD19 GTGCATTCAACAGTA CD25 GATGAGAACAGGTTT CD45RA TGCATGTCATCGGTG CD45RO AAGTCGTGAGGCATG PD-1 TGAAGGCTCATTTGT TIGIT ACATTGACGCAACTA CD127 CTCTATTCAGACCAG IgG2a ACTCACTGGAGTCTC IgG1 ATCACATCGTTGCCA IgG2b Finally, we use kb to generate the mismatch kallisto index. 1 !kb ref -i mismatch.idx -f1 mismatch.fa -g t2g.txt --workflow kite features.tsv [2021-03-31 23:30:15,970] INFO Generating mismatch FASTA at mismatch.fa [2021-03-31 23:30:15,982] INFO Creating transcript-to-gene mapping at t2g.txt [2021-03-31 23:30:15,986] INFO Indexing mismatch.fa to mismatch.idx Generate a feature count matrix in H5AD format \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we generated in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v3 Chemistry, hence the -x 10xv3 argument. To view other supported technologies, run kb --list . Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 6 %%time !kb count --h5ad -i mismatch.idx -g t2g.txt -x 10xv3 --workflow kite -t 2 \\ pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz \\ pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz \\ pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz \\ pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz [2021-03-31 23:30:17,474] INFO Using index mismatch.idx to generate BUS file to . from [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz [2021-03-31 23:32:02,567] INFO Sorting BUS file ./output.bus to ./tmp/output.s.bus [2021-03-31 23:32:18,183] INFO Whitelist not provided [2021-03-31 23:32:18,183] INFO Copying pre-packaged 10XV3 whitelist to . [2021-03-31 23:32:19,157] INFO Inspecting BUS file ./tmp/output.s.bus [2021-03-31 23:32:31,284] INFO Correcting BUS records in ./tmp/output.s.bus to ./tmp/output.s.c.bus with whitelist ./10xv3_whitelist.txt [2021-03-31 23:32:49,746] INFO Sorting BUS file ./tmp/output.s.c.bus to ./output.unfiltered.bus [2021-03-31 23:33:01,416] INFO Generating count matrix ./counts_unfiltered/cells_x_features from BUS file ./output.unfiltered.bus [2021-03-31 23:33:03,924] INFO Reading matrix ./counts_unfiltered/cells_x_features.mtx [2021-03-31 23:33:05,698] INFO Writing matrix to h5ad ./counts_unfiltered/adata.h5ad CPU times: user 1.3 s, sys: 180 ms, total: 1.48 s Wall time: 2min 49s Analysis \u00b6 In this part of the tutorial, we will load the RNA count matrix generated by kb count into Python and cluster the cells with Leiden. Install packages \u00b6 Google Colab does not come with Scanpy , python-igraph , or louvain (but comes with matplotlib , numpy , pandas , and scipy ). 1 !pip --quiet install leidenalg scanpy MulticoreTSNE Import packages \u00b6 1 2 3 import anndata import numpy as np import scanpy as sc 1 adata = anndata.read_h5ad('counts_unfiltered/adata.h5ad') 1 adata AnnData object with n_obs \u00d7 n_vars = 124716 \u00d7 17 var : 'feature_name' 1 adata.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } barcode AAACCCAAGAAACCCA AAACCCAAGACGAGGA AAACCCAAGAGTGTGT AAACCCAAGAGTGTTG AAACCCAAGATAGCAC 1 adata.var .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } feature_name feature_id CD3 CD3 CD4 CD4 CD8a CD8a CD14 CD14 CD15 CD15 CD16 CD16 CD56 CD56 CD19 CD19 CD25 CD25 CD45RA CD45RA CD45RO CD45RO PD-1 PD-1 TIGIT TIGIT CD127 CD127 IgG2a IgG2a IgG1 IgG1 IgG2b IgG2b Plot counts \u00b6 1 sc.pp.filter_cells(adata, min_counts=0) 1 sc.pp.filter_genes(adata, min_counts=0) 1 sc.pl.violin(adata, keys='n_counts') 1 adata.obs['n_countslog'] = np.log1p(adata.obs['n_counts']) 1 sc.pl.violin(adata, keys='n_countslog') 1 adata.obs.index Index(['AAACCCAAGAAACCCA', 'AAACCCAAGACGAGGA', 'AAACCCAAGAGTGTGT', 'AAACCCAAGAGTGTTG', 'AAACCCAAGATAGCAC', 'AAACCCAAGATGAGTC', 'AAACCCAAGATGGTAC', 'AAACCCAAGATTCGTT', 'AAACCCAAGATTTGGG', 'AAACCCAAGCAAGCAT', ... 'TTTGTTGTCGTCGCCT', 'TTTGTTGTCGTTGACG', 'TTTGTTGTCTAACCGG', 'TTTGTTGTCTATGTAG', 'TTTGTTGTCTCAACAA', 'TTTGTTGTCTCACTCA', 'TTTGTTGTCTCTTCGA', 'TTTGTTGTCTCTTGGT', 'TTTGTTGTCTGCACTT', 'TTTGTTGTCTGCGACA'], dtype='object', name='barcode', length=124716) 1 2 3 sc.pp.filter_cells(adata, min_counts=1000) sc.pl.violin(adata, keys='n_countslog', title=\"kallisto UMI counts\") adata AnnData object with n_obs \u00d7 n_vars = 725 \u00d7 17 obs : 'n_counts' , 'n_countslog' var : 'feature_name' , 'n_counts' Here are violin plots for each Feature Barcode (antibody-oligo conjugates, x-axis) across all cells. 1 sc.pl.violin(adata, keys=list(adata.var.index)[-17:], xlabel='kallisto') Cluster with Leiden \u00b6 1 sc.pp.normalize_per_cell(adata, counts_per_cell_after=10000) 1 2 sc.pp.neighbors(adata) sc.tl.umap(adata) 1 sc.tl.leiden(adata, resolution=0.05) 1 sc.pl.umap(adata, color='leiden', palette='tab10') Embedding and Antibody Quantification \u00b6 1 sc.pl.umap(adata, color=adata.var.index) 1 sc.pl.violin(adata, keys=list(adata.var.index[:2]), groupby='leiden') 1","title":"Python"},{"location":"tutorials/kb_kite/python/kb_kite.html#pre-processing-and-analysis-of-feature-barcode-single-cell-rna-seq-data-with-kite","text":"In this notebook, we will perform pre-processing and analysis of 10x Genomics pbmc_1k_protein_v3 feature barcoding dataset using the Kallisto Indexing and Tag Extraction (KITE) workflow, implemented with a wrapper called kb . It was developed by Kyung Hoi (Joseph) Min and A. Sina Booeshaghi. In Feature Barcoding assays, cellular data are recorded as short DNA sequences using procedures adapted from single-cell RNA-seq. The KITE workflow generates a \"Mismatch Map\" containing the sequences of all Feature Barcodes used in the experiment as well as all of their single-base mismatches. The Mismatch Map is used to produce transcipt-to-gene (.t2g) and fasta (.fa) files to be used as inputs for kallisto. An index is made with kallisto index, then kallisto | bustools effectively searches the sequencing data for the sequences in the Mismatch Map.","title":"Pre-processing and analysis of feature barcode single-cell RNA-seq data with KITE."},{"location":"tutorials/kb_kite/python/kb_kite.html#pre-processing","text":"","title":"Pre-processing"},{"location":"tutorials/kb_kite/python/kb_kite.html#download-the-data","text":"Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 %%time !wget -q https://caltech.box.com/shared/static/asmj4nu90ydhsrk3pm7aaxu00cnnfige.txt -O checksums.txt !wget -q https://caltech.box.com/shared/static/mp2vr3p6dztdyatuag8ir3cektmrztg8.gz -O pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz !wget -q https://caltech.box.com/shared/static/f3payi1za7mn0jfai7vm10sy3yqwgpqh.gz -O pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz !wget -q https://caltech.box.com/shared/static/e112bbczh9o1rl6gfin36bqp0ga7uvdy.gz -O pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz !wget -q https://caltech.box.com/shared/static/3ve2axc8dr8v5nnrhmynrdgpqj6xg42k.gz -O pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz CPU times: user 477 ms, sys: 86.2 ms, total: 563 ms Wall time: 1min Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz: OK pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz: OK pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz: OK pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz: OK","title":"Download the data"},{"location":"tutorials/kb_kite/python/kb_kite.html#install-kb","text":"Install kb for running the kallisto|bustools workflow. 1 !pip install --quiet git+https://github.com/pachterlab/kb_python@devel \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 2 . 6 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 314 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 43 . 4 MB / s \u001b[? 25 h Building wheel for kb - python ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone","title":"Install kb"},{"location":"tutorials/kb_kite/python/kb_kite.html#build-the-feature-barcode-mismatch-index","text":"kb is able to generate a FASTA file containing all hamming distance < 2 variants of the feature barcodes and create a kallisto index of these sequences. But it in order to do so, we first need to prepare a TSV containing feature barcode sequences in the first column and the feature barcode names in the second. First, we download the feature reference file provided by 10x Genomics. 1 !wget -q http://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_protein_v3/pbmc_1k_protein_v3_feature_ref.csv Let's load it in as a Pandas DataFrame. 1 2 3 4 import pandas as pd df = pd.read_csv('pbmc_1k_protein_v3_feature_ref.csv') df .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } id name read pattern sequence feature_type 0 CD3 CD3_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN AACAAGACCCTTGAG Antibody Capture 1 CD4 CD4_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TACCCGTAATAGCGT Antibody Capture 2 CD8a CD8a_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ATTGGCACTCAGATG Antibody Capture 3 CD14 CD14_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GAAAGTCAAAGCACT Antibody Capture 4 CD15 CD15_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ACGAATCAATCTGTG Antibody Capture 5 CD16 CD16_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GTCTTTGTCAGTGCA Antibody Capture 6 CD56 CD56_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GTTGTCCGACAATAC Antibody Capture 7 CD19 CD19_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TCAACGCTTGGCTAG Antibody Capture 8 CD25 CD25_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GTGCATTCAACAGTA Antibody Capture 9 CD45RA CD45RA_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN GATGAGAACAGGTTT Antibody Capture 10 CD45RO CD45RO_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TGCATGTCATCGGTG Antibody Capture 11 PD-1 PD-1_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN AAGTCGTGAGGCATG Antibody Capture 12 TIGIT TIGIT_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN TGAAGGCTCATTTGT Antibody Capture 13 CD127 CD127_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ACATTGACGCAACTA Antibody Capture 14 IgG2a IgG2a_control_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN CTCTATTCAGACCAG Antibody Capture 15 IgG1 IgG1_control_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ACTCACTGGAGTCTC Antibody Capture 16 IgG2b IgG2b_control_TotalSeqB R2 5PNNNNNNNNNN(BC)NNNNNNNNN ATCACATCGTTGCCA Antibody Capture We'll convert this dataframe into a TSV format that kb requires. 1 2 df[['sequence', 'id']].to_csv('features.tsv', index=None, header=None, sep='\\t') !cat features.tsv AACAAGACCCTTGAG CD3 TACCCGTAATAGCGT CD4 ATTGGCACTCAGATG CD8a GAAAGTCAAAGCACT CD14 ACGAATCAATCTGTG CD15 GTCTTTGTCAGTGCA CD16 GTTGTCCGACAATAC CD56 TCAACGCTTGGCTAG CD19 GTGCATTCAACAGTA CD25 GATGAGAACAGGTTT CD45RA TGCATGTCATCGGTG CD45RO AAGTCGTGAGGCATG PD-1 TGAAGGCTCATTTGT TIGIT ACATTGACGCAACTA CD127 CTCTATTCAGACCAG IgG2a ACTCACTGGAGTCTC IgG1 ATCACATCGTTGCCA IgG2b Finally, we use kb to generate the mismatch kallisto index. 1 !kb ref -i mismatch.idx -f1 mismatch.fa -g t2g.txt --workflow kite features.tsv [2021-03-31 23:30:15,970] INFO Generating mismatch FASTA at mismatch.fa [2021-03-31 23:30:15,982] INFO Creating transcript-to-gene mapping at t2g.txt [2021-03-31 23:30:15,986] INFO Indexing mismatch.fa to mismatch.idx","title":"Build the feature barcode mismatch index"},{"location":"tutorials/kb_kite/python/kb_kite.html#generate-a-feature-count-matrix-in-h5ad-format","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we generated in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v3 Chemistry, hence the -x 10xv3 argument. To view other supported technologies, run kb --list . Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 6 %%time !kb count --h5ad -i mismatch.idx -g t2g.txt -x 10xv3 --workflow kite -t 2 \\ pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz \\ pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz \\ pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz \\ pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz [2021-03-31 23:30:17,474] INFO Using index mismatch.idx to generate BUS file to . from [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L001_R1_001.fastq.gz [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L001_R2_001.fastq.gz [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L002_R1_001.fastq.gz [2021-03-31 23:30:17,474] INFO pbmc_1k_protein_v3_antibody_S2_L002_R2_001.fastq.gz [2021-03-31 23:32:02,567] INFO Sorting BUS file ./output.bus to ./tmp/output.s.bus [2021-03-31 23:32:18,183] INFO Whitelist not provided [2021-03-31 23:32:18,183] INFO Copying pre-packaged 10XV3 whitelist to . [2021-03-31 23:32:19,157] INFO Inspecting BUS file ./tmp/output.s.bus [2021-03-31 23:32:31,284] INFO Correcting BUS records in ./tmp/output.s.bus to ./tmp/output.s.c.bus with whitelist ./10xv3_whitelist.txt [2021-03-31 23:32:49,746] INFO Sorting BUS file ./tmp/output.s.c.bus to ./output.unfiltered.bus [2021-03-31 23:33:01,416] INFO Generating count matrix ./counts_unfiltered/cells_x_features from BUS file ./output.unfiltered.bus [2021-03-31 23:33:03,924] INFO Reading matrix ./counts_unfiltered/cells_x_features.mtx [2021-03-31 23:33:05,698] INFO Writing matrix to h5ad ./counts_unfiltered/adata.h5ad CPU times: user 1.3 s, sys: 180 ms, total: 1.48 s Wall time: 2min 49s","title":"Generate a feature count matrix in H5AD format"},{"location":"tutorials/kb_kite/python/kb_kite.html#analysis","text":"In this part of the tutorial, we will load the RNA count matrix generated by kb count into Python and cluster the cells with Leiden.","title":"Analysis"},{"location":"tutorials/kb_kite/python/kb_kite.html#install-packages","text":"Google Colab does not come with Scanpy , python-igraph , or louvain (but comes with matplotlib , numpy , pandas , and scipy ). 1 !pip --quiet install leidenalg scanpy MulticoreTSNE","title":"Install packages"},{"location":"tutorials/kb_kite/python/kb_kite.html#import-packages","text":"1 2 3 import anndata import numpy as np import scanpy as sc 1 adata = anndata.read_h5ad('counts_unfiltered/adata.h5ad') 1 adata AnnData object with n_obs \u00d7 n_vars = 124716 \u00d7 17 var : 'feature_name' 1 adata.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } barcode AAACCCAAGAAACCCA AAACCCAAGACGAGGA AAACCCAAGAGTGTGT AAACCCAAGAGTGTTG AAACCCAAGATAGCAC 1 adata.var .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } feature_name feature_id CD3 CD3 CD4 CD4 CD8a CD8a CD14 CD14 CD15 CD15 CD16 CD16 CD56 CD56 CD19 CD19 CD25 CD25 CD45RA CD45RA CD45RO CD45RO PD-1 PD-1 TIGIT TIGIT CD127 CD127 IgG2a IgG2a IgG1 IgG1 IgG2b IgG2b","title":"Import packages"},{"location":"tutorials/kb_kite/python/kb_kite.html#plot-counts","text":"1 sc.pp.filter_cells(adata, min_counts=0) 1 sc.pp.filter_genes(adata, min_counts=0) 1 sc.pl.violin(adata, keys='n_counts') 1 adata.obs['n_countslog'] = np.log1p(adata.obs['n_counts']) 1 sc.pl.violin(adata, keys='n_countslog') 1 adata.obs.index Index(['AAACCCAAGAAACCCA', 'AAACCCAAGACGAGGA', 'AAACCCAAGAGTGTGT', 'AAACCCAAGAGTGTTG', 'AAACCCAAGATAGCAC', 'AAACCCAAGATGAGTC', 'AAACCCAAGATGGTAC', 'AAACCCAAGATTCGTT', 'AAACCCAAGATTTGGG', 'AAACCCAAGCAAGCAT', ... 'TTTGTTGTCGTCGCCT', 'TTTGTTGTCGTTGACG', 'TTTGTTGTCTAACCGG', 'TTTGTTGTCTATGTAG', 'TTTGTTGTCTCAACAA', 'TTTGTTGTCTCACTCA', 'TTTGTTGTCTCTTCGA', 'TTTGTTGTCTCTTGGT', 'TTTGTTGTCTGCACTT', 'TTTGTTGTCTGCGACA'], dtype='object', name='barcode', length=124716) 1 2 3 sc.pp.filter_cells(adata, min_counts=1000) sc.pl.violin(adata, keys='n_countslog', title=\"kallisto UMI counts\") adata AnnData object with n_obs \u00d7 n_vars = 725 \u00d7 17 obs : 'n_counts' , 'n_countslog' var : 'feature_name' , 'n_counts' Here are violin plots for each Feature Barcode (antibody-oligo conjugates, x-axis) across all cells. 1 sc.pl.violin(adata, keys=list(adata.var.index)[-17:], xlabel='kallisto')","title":"Plot counts"},{"location":"tutorials/kb_kite/python/kb_kite.html#cluster-with-leiden","text":"1 sc.pp.normalize_per_cell(adata, counts_per_cell_after=10000) 1 2 sc.pp.neighbors(adata) sc.tl.umap(adata) 1 sc.tl.leiden(adata, resolution=0.05) 1 sc.pl.umap(adata, color='leiden', palette='tab10')","title":"Cluster with Leiden"},{"location":"tutorials/kb_kite/python/kb_kite.html#embedding-and-antibody-quantification","text":"1 sc.pl.umap(adata, color=adata.var.index) 1 sc.pl.violin(adata, keys=list(adata.var.index[:2]), groupby='leiden') 1","title":"Embedding and Antibody Quantification"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html","text":"Processing Multiple Lanes at Once \u00b6 This tutorial provides instructions for how to pre-process the mouse T cells SRR8206317 dataset from Miller & Sen et al., 2019 using the kallisto | bustools workflow. Download the data \u00b6 1 !wget -q ftp://ftp.sra.ebi.ac.uk/vol1/run/SRR820/SRR8206317/d10_Tet_possorted_genome_bam.bam Install kb and bamtofastq \u00b6 We will be using bamtofastq to generate the original FASTQ files from the BAM files provided by the authors. 1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 131 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 6 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 37 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 19 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 45 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 44 . 8 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 8 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 6 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 7 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 39 . 6 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone 1 2 !wget -q http://cf.10xgenomics.com/misc/bamtofastq-1.2.0 !chmod +x bamtofastq-1.2.0 1 !./bamtofastq-1.2.0 bamtofastq v1 .2.0 Invalid arguments . Usage : bamtofastq [ options ] < bam > < output - path > bamtofastq ( - h | --help) Download a pre-built mouse index \u00b6 1 2 %%time !kb ref -d mouse -i index.idx -g t2g.txt [ 2021 - 03 - 31 23 : 49 : 33 , 545 ] INFO Downloading files for mouse from https : // caltech . box . com / shared / static / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz to tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz 100 % 1.89 G / 1.89 G [ 01 : 26 < 00 : 00 , 23.4 MB / s ] [ 2021 - 03 - 31 23 : 51 : 01 , 788 ] INFO Extracting files from tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz CPU times : user 1.29 s , sys : 298 ms , total : 1.58 s Wall time : 2 min 1 s Generate the FASTQs from the BAM file \u00b6 Use the bamtofastq utility to generate the FASTQs. 1 2 %%time !./bamtofastq-1.2.0 --reads-per-fastq=500000000 d10_Tet_possorted_genome_bam.bam ./fastqs bamtofastq v1.2.0 Args { arg_bam: \"d10_Tet_possorted_genome_bam.bam\", arg_output_path: \"./fastqs\", flag_nthreads: 4, flag_locus: None, flag_bx_list: None, flag_reads_per_fastq: 500000000, flag_gemcode: false, flag_lr20: false, flag_cr11: false } Writing finished. Observed 85992089 read pairs. Wrote 85992089 read pairs CPU times: user 4.46 s, sys: 491 ms, total: 4.95 s Wall time: 12min 12s Generate an RNA count matrix in H5AD Format \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 6 7 8 9 !kb count -i index.idx -g t2g.txt -x 10xv2 -o output -t 2 \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R2_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R2_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R2_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R2_001.fastq.gz [2021-04-01 00:03:48,050] INFO Using index index.idx to generate BUS file to output from [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R2_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R2_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R2_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R2_001.fastq.gz [2021-04-01 00:10:48,408] INFO Sorting BUS file output/output.bus to output/tmp/output.s.bus [2021-04-01 00:12:03,976] INFO Whitelist not provided [2021-04-01 00:12:03,976] INFO Copying pre-packaged 10XV2 whitelist to output [2021-04-01 00:12:04,105] INFO Inspecting BUS file output/tmp/output.s.bus [2021-04-01 00:12:22,834] INFO Correcting BUS records in output/tmp/output.s.bus to output/tmp/output.s.c.bus with whitelist output/10xv2_whitelist.txt [2021-04-01 00:12:39,443] INFO Sorting BUS file output/tmp/output.s.c.bus to output/output.unfiltered.bus [2021-04-01 00:13:57,946] INFO Generating count matrix output/counts_unfiltered/cells_x_genes from BUS file output/output.unfiltered.bus Load the count matrices into a notebook \u00b6 See the getting started tutorial for how to load the count matrices into ScanPy for analysis. 1","title":"Python"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#processing-multiple-lanes-at-once","text":"This tutorial provides instructions for how to pre-process the mouse T cells SRR8206317 dataset from Miller & Sen et al., 2019 using the kallisto | bustools workflow.","title":"Processing Multiple Lanes at Once"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#download-the-data","text":"1 !wget -q ftp://ftp.sra.ebi.ac.uk/vol1/run/SRR820/SRR8206317/d10_Tet_possorted_genome_bam.bam","title":"Download the data"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#install-kb-and-bamtofastq","text":"We will be using bamtofastq to generate the original FASTQ files from the BAM files provided by the authors. 1 !pip install --quiet kb-python \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 59 . 1 MB 131 kB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 6 . 3 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13 . 2 MB 37 . 1 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 10 . 3 MB 19 . 2 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 122 kB 45 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112 kB 44 . 8 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 81 kB 8 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 6 . 0 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 71 kB 7 . 7 MB / s \u001b[ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1 . 2 MB 39 . 6 MB / s \u001b[? 25 h Building wheel for loompy ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for numpy - groupies ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for sinfo ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for umap - learn ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone Building wheel for pynndescent ( setup . py ) ... \u001b[? 25 l \u001b[? 25 hdone 1 2 !wget -q http://cf.10xgenomics.com/misc/bamtofastq-1.2.0 !chmod +x bamtofastq-1.2.0 1 !./bamtofastq-1.2.0 bamtofastq v1 .2.0 Invalid arguments . Usage : bamtofastq [ options ] < bam > < output - path > bamtofastq ( - h | --help)","title":"Install kb and bamtofastq"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#download-a-pre-built-mouse-index","text":"1 2 %%time !kb ref -d mouse -i index.idx -g t2g.txt [ 2021 - 03 - 31 23 : 49 : 33 , 545 ] INFO Downloading files for mouse from https : // caltech . box . com / shared / static / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz to tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz 100 % 1.89 G / 1.89 G [ 01 : 26 < 00 : 00 , 23.4 MB / s ] [ 2021 - 03 - 31 23 : 51 : 01 , 788 ] INFO Extracting files from tmp / vcaz6cujop0xuapdmz0pplp3aoqc41si . gz CPU times : user 1.29 s , sys : 298 ms , total : 1.58 s Wall time : 2 min 1 s","title":"Download a pre-built mouse index"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#generate-the-fastqs-from-the-bam-file","text":"Use the bamtofastq utility to generate the FASTQs. 1 2 %%time !./bamtofastq-1.2.0 --reads-per-fastq=500000000 d10_Tet_possorted_genome_bam.bam ./fastqs bamtofastq v1.2.0 Args { arg_bam: \"d10_Tet_possorted_genome_bam.bam\", arg_output_path: \"./fastqs\", flag_nthreads: 4, flag_locus: None, flag_bx_list: None, flag_reads_per_fastq: 500000000, flag_gemcode: false, flag_lr20: false, flag_cr11: false } Writing finished. Observed 85992089 read pairs. Wrote 85992089 read pairs CPU times: user 4.46 s, sys: 491 ms, total: 4.95 s Wall time: 12min 12s","title":"Generate the FASTQs from the BAM file"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#generate-an-rna-count-matrix-in-h5ad-format","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 6 7 8 9 !kb count -i index.idx -g t2g.txt -x 10xv2 -o output -t 2 \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R2_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R2_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R2_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R1_001.fastq.gz \\ fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R2_001.fastq.gz [2021-04-01 00:03:48,050] INFO Using index index.idx to generate BUS file to output from [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L001_R2_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L002_R2_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L003_R2_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R1_001.fastq.gz [2021-04-01 00:03:48,051] INFO fastqs/MAR1_POOL_2_10_tet_SI-GA-C8_MissingLibrary_1_HJNKJBGX5/bamtofastq_S1_L004_R2_001.fastq.gz [2021-04-01 00:10:48,408] INFO Sorting BUS file output/output.bus to output/tmp/output.s.bus [2021-04-01 00:12:03,976] INFO Whitelist not provided [2021-04-01 00:12:03,976] INFO Copying pre-packaged 10XV2 whitelist to output [2021-04-01 00:12:04,105] INFO Inspecting BUS file output/tmp/output.s.bus [2021-04-01 00:12:22,834] INFO Correcting BUS records in output/tmp/output.s.bus to output/tmp/output.s.c.bus with whitelist output/10xv2_whitelist.txt [2021-04-01 00:12:39,443] INFO Sorting BUS file output/tmp/output.s.c.bus to output/output.unfiltered.bus [2021-04-01 00:13:57,946] INFO Generating count matrix output/counts_unfiltered/cells_x_genes from BUS file output/output.unfiltered.bus","title":"Generate an RNA count matrix in H5AD Format"},{"location":"tutorials/kb_multiple_fastqs/python/kb_multiple_files.html#load-the-count-matrices-into-a-notebook","text":"See the getting started tutorial for how to load the count matrices into ScanPy for analysis. 1","title":"Load the count matrices into a notebook"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html","text":"Pre-processing mouse single-nuclei RNA-seq data with kallisto and bustools \u00b6 In this tutorial we will process the 10x dataset 1k Brain Nuclei from an E18 Mouse using kallisto bus and a custom built DNA and intron index for mouse. We will generate two matrices: one for spliced transcripts and one for unspliced transcripts, and sum them to obtain total nuclear transcripts. 1 !date Thu Jan 16 15:52:05 UTC 2020 Pre-processing \u00b6 Download the data \u00b6 Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 %%time !wget https://caltech.box.com/shared/static/j337aflq9ublmwaripkepob41mr23216.txt -O checksums.txt !wget https://caltech.box.com/shared/static/2j8shgwmalzcjawuow51678a8yssvdef.gz -O nuclei_900_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/k2yydqlz2jtckw1shk5h536mxn47nm9n.gz -O nuclei_900_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/tlqdm0w3tvy8ogyktsz7ahggwurc6kkj.gz -O nuclei_900_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/gqrvkqllr9d7zq4e3yfrng9kgfbejowe.gz -O nuclei_900_S1_L002_R2_001.fastq.gz -- 2020 - 01 - 16 15 : 52 : 07 -- https : // caltech . box . com / shared / static / j337aflq9ublmwaripkepob41mr23216 . txt Resolving caltech . box . com ( caltech . box . com )... 107.152.26.197 , 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.26.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / j337aflq9ublmwaripkepob41mr23216 . txt [ following ] -- 2020 - 01 - 16 15 : 52 : 12 -- https : // caltech . box . com / public / static / j337aflq9ublmwaripkepob41mr23216 . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / j337aflq9ublmwaripkepob41mr23216 . txt [ following ] -- 2020 - 01 - 16 15 : 52 : 12 -- https : // caltech . app . box . com / public / static / j337aflq9ublmwaripkepob41mr23216 . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.199 , 107.152.26.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! GcwiYMLuutOlK9x2GOcgBeJEzw7h5lJWU6P_DhY5cEFRktRc - MWgWWB1g94XLVSAuhxsYnAcFDQJ4VBAH_a3ObNnzvrJJwFkt220Nma3TJoLifXB3oWGWH3teBvR3pcjKZ7KijVqs6vO7Yofh44COuvzpbvEYfUqaXK - 8 PqHHQtQ7ZavLSV20ykoB81K - ZyLzSOIFoJjG8o - D8uz3uw5AInnVlDuKdN1qyQ17eujvTTBn4sj4joxaifmiZK - O7XA - FbcXkdHYUKwNhWzLPexMBsJKd1WT5qF7VAVmhajA6wo46bsrF_LTGETw_U5difW6etQNE_IuthI4anrdPV4ClJQDGCrL8whiuR5EGttUDzBmdNXgKJ8fTgOMUVQ5y4Ceij - F4bXTUW9lGGSYok7gdyHt3VnjkdMCbvq - t9kPN8esW_deFaJAH3BzU_jZ6u4652y5MDrWZMIg6r7wxMpGkG0smbZHN0PDIkESjMmkgSC - 3 mDxucly0sxtcD5 - er0lOVpPuJivePQl_rNBSKmbXOrpSNfkWcR - o6eFkXVQcdHw - 1 j_DUpBtOqfhIg0rVCkvI82UBKesxf0gbVBERcQ54RTRdfDqfuXZKwbogxTie85n5LC3F75QVtJr9TT8y18nEgj02qEoChVIcIBJiiTv7pTAW_rCxBlOGDNN - iY4VyeP2PBZ6CKkEHlbaFT2L0LYLQMfvkXBYEC00S0e2rqQoXED6sTvxVVD3Df4tMskd9l7NDIF1OxNk7IueJhtiDICKMydwA860XmmOkfGMK1YkYJKdpqoAU04nY2_SO0gmtjEtJMSqxcr6Yr2nuVbnmU1sRu0Su2lMIrIB1QLF7ma1gsYArHbBa3e8tGddxykgkA_8gfUbRFzmmqvKKCWYo1yPnGqoZUNmg - s26zQimtE - ahQ4ePIA35N9HCvT3SP2IPIr1lLa1zkKckGFLSRvrlCV0X5Hr - I2CJlgslvnER35EIIxnnKA - Ey7wSrMbAOBkBVBMLpLGL15on0e - tP1knNZ2JdqQ0WahXYJaAmOk5ks4Dar8pO0gwsQIibD5BmtTW6Ag9qg0Au0Zgg5mqWUJc - QTsh9eqAx73I - YXBAci_oaKkmv4uZjej2NHM0lq8mej4onFQNAsA_m - Zxvgx5tdv - FqfcVvPSOMw10_wWatDcXxF - TcjTUtDpqhIJDfJNq8_CPzX_XyW6j05F5 - Qa - pCZZjAHjPL8K0Mtnvj8Y2_2NIJW7kxyerJ2YUM_UipTYzxXVEV8wv4bCF5OxwV8fNlXnYkbl - 2 hc2NjTD9of0XA6uWa_FyPUetjM1xtQN89D3olZ9wyX411FkvCnj2qhBEs1vJjjJs4dT3pEY0MzO0CUtAgxOKppttE . / download [ following ] -- 2020 - 01 - 16 15 : 52 : 13 -- https : // public . boxcloud . com / d / 1 / b1 ! GcwiYMLuutOlK9x2GOcgBeJEzw7h5lJWU6P_DhY5cEFRktRc - MWgWWB1g94XLVSAuhxsYnAcFDQJ4VBAH_a3ObNnzvrJJwFkt220Nma3TJoLifXB3oWGWH3teBvR3pcjKZ7KijVqs6vO7Yofh44COuvzpbvEYfUqaXK - 8 PqHHQtQ7ZavLSV20ykoB81K - ZyLzSOIFoJjG8o - D8uz3uw5AInnVlDuKdN1qyQ17eujvTTBn4sj4joxaifmiZK - O7XA - FbcXkdHYUKwNhWzLPexMBsJKd1WT5qF7VAVmhajA6wo46bsrF_LTGETw_U5difW6etQNE_IuthI4anrdPV4ClJQDGCrL8whiuR5EGttUDzBmdNXgKJ8fTgOMUVQ5y4Ceij - F4bXTUW9lGGSYok7gdyHt3VnjkdMCbvq - t9kPN8esW_deFaJAH3BzU_jZ6u4652y5MDrWZMIg6r7wxMpGkG0smbZHN0PDIkESjMmkgSC - 3 mDxucly0sxtcD5 - er0lOVpPuJivePQl_rNBSKmbXOrpSNfkWcR - o6eFkXVQcdHw - 1 j_DUpBtOqfhIg0rVCkvI82UBKesxf0gbVBERcQ54RTRdfDqfuXZKwbogxTie85n5LC3F75QVtJr9TT8y18nEgj02qEoChVIcIBJiiTv7pTAW_rCxBlOGDNN - iY4VyeP2PBZ6CKkEHlbaFT2L0LYLQMfvkXBYEC00S0e2rqQoXED6sTvxVVD3Df4tMskd9l7NDIF1OxNk7IueJhtiDICKMydwA860XmmOkfGMK1YkYJKdpqoAU04nY2_SO0gmtjEtJMSqxcr6Yr2nuVbnmU1sRu0Su2lMIrIB1QLF7ma1gsYArHbBa3e8tGddxykgkA_8gfUbRFzmmqvKKCWYo1yPnGqoZUNmg - s26zQimtE - ahQ4ePIA35N9HCvT3SP2IPIr1lLa1zkKckGFLSRvrlCV0X5Hr - I2CJlgslvnER35EIIxnnKA - Ey7wSrMbAOBkBVBMLpLGL15on0e - tP1knNZ2JdqQ0WahXYJaAmOk5ks4Dar8pO0gwsQIibD5BmtTW6Ag9qg0Au0Zgg5mqWUJc - QTsh9eqAx73I - YXBAci_oaKkmv4uZjej2NHM0lq8mej4onFQNAsA_m - Zxvgx5tdv - FqfcVvPSOMw10_wWatDcXxF - TcjTUtDpqhIJDfJNq8_CPzX_XyW6j05F5 - Qa - pCZZjAHjPL8K0Mtnvj8Y2_2NIJW7kxyerJ2YUM_UipTYzxXVEV8wv4bCF5OxwV8fNlXnYkbl - 2 hc2NjTD9of0XA6uWa_FyPUetjM1xtQN89D3olZ9wyX411FkvCnj2qhBEs1vJjjJs4dT3pEY0MzO0CUtAgxOKppttE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.26.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.26.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 408 [ text/plain ] Saving to : \u2018 checksums . txt \u2019 checksums . txt 100 %[ ===================> ] 408 -- . - KB / s in 0 s 2020 - 01 - 16 15 : 52 : 13 ( 95.3 MB / s ) - \u2018 checksums . txt \u2019 saved [ 408/408 ] -- 2020 - 01 - 16 15 : 52 : 14 -- https : // caltech . box . com / shared / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.26.197 , 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.26.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 14 -- https : // caltech . box . com / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 14 -- https : // caltech . app . box . com / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.199 , 107.152.26.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! 5 U6Zu_0JeqnVVcz5PDt4XxrXXLpaSp2XNMDZ8Xf3Z1OJcH_gaUEBqmCnFYkZmilbCIlf_R01pEelr0aDWUVm5FliiDmW4jTzQnM_hm2iEesumpJG8ssdu40dAtXERs9ZHNbHSy1P9nXJGtccGJPrKBCQBQyBBCjHigChYvrcrxvArQBzjatym5JkG2cZagUV6Dn8VA4N9LCShceA3YPhlXpG_ - X7p1T1DcIoi6U6jbZUMbJW_NQWPvyELi1sfgy4_WL3ubWZnTDroUlDAAGlJ2A38LW9pljkIN2tdupF3yuvulv2MPfz0Bn_K5ncwoicKNNZ95k3CELi_70hkWmcHVvtJEO0CvI6r8rHFdghxsUFxwopNq - 77 sNYnxEZiCE - lj7bKZzzhH015p7Kx6haSmbe9WqmVkJMP1Cn1hke_DTCMv_d13BJkvt5Ywt1uPf0n - k3bmOUZpoAa4fXTWLrE0fn4PtmgXRZ4RZURHcIT1WCO8FKRnkUhlp - Vg0W9n3pEwJUUivqO_tcav6KPYWVElVk67teYNNnEAeNF_8ogUvuITdrZWTWSpZ5agP - jFND4_1vf_L7ZvrOFwCgIz0SRByJdT9wCJ9ofGCyQ_ECuIpAiArn5BGvnNwutuuH3N3RgWOVTr5Mhy6zYbME5u1qocmUx0Uvv8CNnASSMQ74nMqLVoDd7EByDCrW9ONOn6MEW - tX4U65ArB3tnwT_Gnx7yvOgWNpIg8bjlb7FPX3kbvO7wQe7qMQqH0GvFveeQw3 - 3 g04tya_WLMpcrd2dxdSfku3vkWeOd34jIL2IKVjd7wqUhf6O2DFQcRFrrZ7cxgiRXQ7uABbY7qS9eykxQvetzIhHbGSZEm9d0VSEQKEIb - KMimKxGVCul2FQSf - 6 beI6n - DBwso3VO7sxUzM8OCUN0YElsYuqfXVT2 - 5 U_Hr - qkYQWi1S6xhGdif5toSuTEzn4_WPGTklAkkDHJT_Z83GMhLs65QCOfrELlsm_Tw0LWw - CpbRrrbAGbrZRCxDdh4NuHmV5aH0mREQgxQ1gta - 9 hrlBTTELfX73t27xgOBeAe2AazG6K8G8pDxxchRWUOjNHEwYJQ - rMT9n6xRHHJzm1NiOElOXU - AiI2012vx02xbJGo8vm3SQfV4On09G7Sblq_4D9eRHLzHf0dGiURAMrpiApc1VFC0 - NlEhEBO - 3 TkiM_xI9OjZYYx9uiE9tEPmLS9zJUrnvoIbf5iHnrEha4 - CFZw - KIUmYdlpTlSSILnT5mT1wzm_DUoMoIe9GlrGCRvx60cm6F5F2bC2ehrUqtJoeOZP9XCp7wW3V8T5vOLBgiUECr1Ry9hlZaqkFwWYDNHxwUabYmHNyAfTDpUI4zvF79mZ7b7sb2h_UpSmS4Ab_HLroZYBCe7iLn3qRuLoP_A3BvohWxHAO_dMYqV1VA .. / download [ following ] -- 2020 - 01 - 16 15 : 52 : 15 -- https : // public . boxcloud . com / d / 1 / b1 ! 5 U6Zu_0JeqnVVcz5PDt4XxrXXLpaSp2XNMDZ8Xf3Z1OJcH_gaUEBqmCnFYkZmilbCIlf_R01pEelr0aDWUVm5FliiDmW4jTzQnM_hm2iEesumpJG8ssdu40dAtXERs9ZHNbHSy1P9nXJGtccGJPrKBCQBQyBBCjHigChYvrcrxvArQBzjatym5JkG2cZagUV6Dn8VA4N9LCShceA3YPhlXpG_ - X7p1T1DcIoi6U6jbZUMbJW_NQWPvyELi1sfgy4_WL3ubWZnTDroUlDAAGlJ2A38LW9pljkIN2tdupF3yuvulv2MPfz0Bn_K5ncwoicKNNZ95k3CELi_70hkWmcHVvtJEO0CvI6r8rHFdghxsUFxwopNq - 77 sNYnxEZiCE - lj7bKZzzhH015p7Kx6haSmbe9WqmVkJMP1Cn1hke_DTCMv_d13BJkvt5Ywt1uPf0n - k3bmOUZpoAa4fXTWLrE0fn4PtmgXRZ4RZURHcIT1WCO8FKRnkUhlp - Vg0W9n3pEwJUUivqO_tcav6KPYWVElVk67teYNNnEAeNF_8ogUvuITdrZWTWSpZ5agP - jFND4_1vf_L7ZvrOFwCgIz0SRByJdT9wCJ9ofGCyQ_ECuIpAiArn5BGvnNwutuuH3N3RgWOVTr5Mhy6zYbME5u1qocmUx0Uvv8CNnASSMQ74nMqLVoDd7EByDCrW9ONOn6MEW - tX4U65ArB3tnwT_Gnx7yvOgWNpIg8bjlb7FPX3kbvO7wQe7qMQqH0GvFveeQw3 - 3 g04tya_WLMpcrd2dxdSfku3vkWeOd34jIL2IKVjd7wqUhf6O2DFQcRFrrZ7cxgiRXQ7uABbY7qS9eykxQvetzIhHbGSZEm9d0VSEQKEIb - KMimKxGVCul2FQSf - 6 beI6n - DBwso3VO7sxUzM8OCUN0YElsYuqfXVT2 - 5 U_Hr - qkYQWi1S6xhGdif5toSuTEzn4_WPGTklAkkDHJT_Z83GMhLs65QCOfrELlsm_Tw0LWw - CpbRrrbAGbrZRCxDdh4NuHmV5aH0mREQgxQ1gta - 9 hrlBTTELfX73t27xgOBeAe2AazG6K8G8pDxxchRWUOjNHEwYJQ - rMT9n6xRHHJzm1NiOElOXU - AiI2012vx02xbJGo8vm3SQfV4On09G7Sblq_4D9eRHLzHf0dGiURAMrpiApc1VFC0 - NlEhEBO - 3 TkiM_xI9OjZYYx9uiE9tEPmLS9zJUrnvoIbf5iHnrEha4 - CFZw - KIUmYdlpTlSSILnT5mT1wzm_DUoMoIe9GlrGCRvx60cm6F5F2bC2ehrUqtJoeOZP9XCp7wW3V8T5vOLBgiUECr1Ry9hlZaqkFwWYDNHxwUabYmHNyAfTDpUI4zvF79mZ7b7sb2h_UpSmS4Ab_HLroZYBCe7iLn3qRuLoP_A3BvohWxHAO_dMYqV1VA .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.26.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.26.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 627431870 ( 598 M ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L001_R1_001 . fastq . gz \u2019 nuclei_900_S1_L001_ 100 %[ ===================> ] 598.37 M 23.1 MB / s in 26 s 2020 - 01 - 16 15 : 52 : 41 ( 22.7 MB / s ) - \u2018 nuclei_900_S1_L001_R1_001 . fastq . gz \u2019 saved [ 627431870/627431870 ] -- 2020 - 01 - 16 15 : 52 : 42 -- https : // caltech . box . com / shared / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.26.197 , 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.26.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 42 -- https : // caltech . box . com / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 42 -- https : // caltech . app . box . com / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.199 , 107.152.26.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! cM7F - H9GC5xcOTIcPEDIng1keb1_sf_4S9a_OTqkd7FRTT5sHg - gF9tD7JUuRRkJrhgOgAInFK8YcJQq_XA619I9Qj0UFxrLb7nMBToxBXF4Ml_gXYKiuq0Y6L2B65mL6mN1hROJDOl6X598o2N4nurQrUV5Hd2oABh70YznMfdDgX - U_Y - dQBMWL9EzLL2QPiYskaeHcNk1QdxoiciFCd6PwpXct - aIFfL1tHnlE9pJ2Jniad7y1Ymv8rdAN_nvzGq68 - vhYAR6Ypsy3UeJ_84tMCMy2KdvY0aqQdnl7jpPLSHNDV1VWFLCJat2mYmwi4mx9jOI__ydx_efWv_T5MegHs3e1GmCA38YvswdJDjgqiChEuXwV6yvVmRZSVisScRJz5_LwwMKTmGmMu4Hpa0WsG0Mret8kZ8lujx4EZLHE4LQhUQ1aBO_xwDyPrZ_TavMDuAF_e2ZDkTahwALIF2cDVOYy58wzpa - iy7rbA5E - jlceLKd5IoKbanw0OHNRBE8Gi1pQ9 - uP - rfg8wf3DU7qHh - C7 - I - IJFDpmlfqNESMHBywNZmuOvcQ0hT6lDGMU0NZD4Y8WFjH9UmKE2apmwv5qyNFFXpyYsG2ne - zdLoe0FirKHDkto7hnX - 3 jewG9eY5V2oIMby7XBmJa2CQFL - Fz1VCiuD0HkkUobMFKzPAIsNpZJlUwfpNq21dJG9WLRzcQ - njX6A_hD621Zg_QGxt3kDZF_r7NpAfwSLz4aHyVjuBucQgbEVwiMtm - qUC5dsGJEv8qioS9dSC3JHuoYi7yde28uPW3RUGgDzD2ZDspMaEI7GQqrW_kqNHq3uTTG_hdx_o8e63dFZ0HXjWT - D09ziZd7_6A2p4NCf2aDNW_Ys8y0PkrVX1VyLHxqpT2j62 - t9y5l - fd3AlRkgAe1WnmJVOUTKATHzYKK4MQKSW5bQ6fMV1Khb_HjVWzk - zpoZGBKNYkPEAGmQQv7Tmr9CZ_gD2aoCDibXCFBXi2k - TftSsnlzKbZkIF2IdSPHWpthXwj6Xf44Qnx1HRCp10MlrZmPI49TlNa2ZzHQUm2TEvFuqwzUMB7qIPWUEGdgSfIUpc00t3Yhx_2BaGbIzCp6Cp4O6BgTymoRSErj_Xg29Y4Xzkyen1nUc2zc0pWSd_h - iK5Jt9FmOupM4LJVSM_b04nIPARZFR7GxhRbzE5YX - EZhy2_yJIsH_Ajl0fPdZ2sDm3zne3OhdcBZ - Ea0BEqpemjOh1a717iX1b2LbLf5wkx2lmlVUhkO09FtwYqw - U26jrElqmfOl6vEDvG - GUJoYTHrSJ_nVFbaqt2eGqU6HGSyS7FQa0LVR5jANJPU2vi78s8y0FF75_CIMYHpjVYyQXkgEGNVmpm5wKBdagk4E9YSeSRey0gETkz1iVigAf80EL - c5nvMUfCvOktgDrjRo . / download [ following ] -- 2020 - 01 - 16 15 : 52 : 43 -- https : // public . boxcloud . com / d / 1 / b1 ! cM7F - H9GC5xcOTIcPEDIng1keb1_sf_4S9a_OTqkd7FRTT5sHg - gF9tD7JUuRRkJrhgOgAInFK8YcJQq_XA619I9Qj0UFxrLb7nMBToxBXF4Ml_gXYKiuq0Y6L2B65mL6mN1hROJDOl6X598o2N4nurQrUV5Hd2oABh70YznMfdDgX - U_Y - dQBMWL9EzLL2QPiYskaeHcNk1QdxoiciFCd6PwpXct - aIFfL1tHnlE9pJ2Jniad7y1Ymv8rdAN_nvzGq68 - vhYAR6Ypsy3UeJ_84tMCMy2KdvY0aqQdnl7jpPLSHNDV1VWFLCJat2mYmwi4mx9jOI__ydx_efWv_T5MegHs3e1GmCA38YvswdJDjgqiChEuXwV6yvVmRZSVisScRJz5_LwwMKTmGmMu4Hpa0WsG0Mret8kZ8lujx4EZLHE4LQhUQ1aBO_xwDyPrZ_TavMDuAF_e2ZDkTahwALIF2cDVOYy58wzpa - iy7rbA5E - jlceLKd5IoKbanw0OHNRBE8Gi1pQ9 - uP - rfg8wf3DU7qHh - C7 - I - IJFDpmlfqNESMHBywNZmuOvcQ0hT6lDGMU0NZD4Y8WFjH9UmKE2apmwv5qyNFFXpyYsG2ne - zdLoe0FirKHDkto7hnX - 3 jewG9eY5V2oIMby7XBmJa2CQFL - Fz1VCiuD0HkkUobMFKzPAIsNpZJlUwfpNq21dJG9WLRzcQ - njX6A_hD621Zg_QGxt3kDZF_r7NpAfwSLz4aHyVjuBucQgbEVwiMtm - qUC5dsGJEv8qioS9dSC3JHuoYi7yde28uPW3RUGgDzD2ZDspMaEI7GQqrW_kqNHq3uTTG_hdx_o8e63dFZ0HXjWT - D09ziZd7_6A2p4NCf2aDNW_Ys8y0PkrVX1VyLHxqpT2j62 - t9y5l - fd3AlRkgAe1WnmJVOUTKATHzYKK4MQKSW5bQ6fMV1Khb_HjVWzk - zpoZGBKNYkPEAGmQQv7Tmr9CZ_gD2aoCDibXCFBXi2k - TftSsnlzKbZkIF2IdSPHWpthXwj6Xf44Qnx1HRCp10MlrZmPI49TlNa2ZzHQUm2TEvFuqwzUMB7qIPWUEGdgSfIUpc00t3Yhx_2BaGbIzCp6Cp4O6BgTymoRSErj_Xg29Y4Xzkyen1nUc2zc0pWSd_h - iK5Jt9FmOupM4LJVSM_b04nIPARZFR7GxhRbzE5YX - EZhy2_yJIsH_Ajl0fPdZ2sDm3zne3OhdcBZ - Ea0BEqpemjOh1a717iX1b2LbLf5wkx2lmlVUhkO09FtwYqw - U26jrElqmfOl6vEDvG - GUJoYTHrSJ_nVFbaqt2eGqU6HGSyS7FQa0LVR5jANJPU2vi78s8y0FF75_CIMYHpjVYyQXkgEGNVmpm5wKBdagk4E9YSeSRey0gETkz1iVigAf80EL - c5nvMUfCvOktgDrjRo . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.26.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.26.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 1775938697 ( 1.7 G ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L001_R2_001 . fastq . gz \u2019 nuclei_900_S1_L001_ 100 %[ ===================> ] 1.65 G 25.4 MB / s in 66 s 2020 - 01 - 16 15 : 53 : 50 ( 25.6 MB / s ) - \u2018 nuclei_900_S1_L001_R2_001 . fastq . gz \u2019 saved [ 1775938697/1775938697 ] -- 2020 - 01 - 16 15 : 53 : 50 -- https : // caltech . box . com / shared / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.25.197 , 107.152.24.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.25.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz [ following ] -- 2020 - 01 - 16 15 : 53 : 50 -- https : // caltech . box . com / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz [ following ] -- 2020 - 01 - 16 15 : 53 : 50 -- https : // caltech . app . box . com / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.26.199 , 107.152.27.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.26.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! UpSBIsWK59JE_USL_X0zT7AA4IRB7hbcmLNrL0FEo0Dt4ThSyOx7Q8_J2S8riTT6_4D3PABwaLWLqxyQBOh237ZHCJp7bjubDL7 - JUopsW6dWCNgkwBeI5HQT_qya_pK7qd6kVvhP - YC_ssA7aueoRqMkPVnLRR2vEs1373v4ws6GQun7Cv4KhQsy3Y1G9fSL5a7jnoyhVAKY1T_jb - 3 bMlaEe0Lw5lOppJ1XvKLTasEVlmxJYBpsBUkGFMf2ReI5hBU4YCx - UlZiyKNFBs0 - gwb6XjlbrY4VOSlvGwxYwC0AVRmabz3RPM0 - grARJAlf2Nbmc_xSJjWKrlW8e79Ac4tSNG7IHEWX_O5wxLYAOfaLWMsZnnfGXAzE5a5IiYfhA7dq0egt8SBf2e5HraIwhkwO3_ud7hh0To2jcRJ - 0 c4VDk2eus9uYm92NDOSm0gxFSrSVIRpeK59y - V0OcjDDxjbVvHJxhKpEZET0G4q84NudifP8diW5sEKcvU4xTyUxF - oYJwv6HEvlXdtS5AQM - hLK - sjiJtdPU - 8 taL5f - xOkTIxnngzRRhlyDj8dy4eRDEgJlStPEdpUidCinmNsTCKvzqCuUcLoruGNUZawSSUwKqISaYkjNqqT22Tazth - Q2dnDCx4zo9btVH3Th9FZeff3JpsdtVRDkHLC - k8xcqGbAqG8bS7gDo8p3SeBDcCVzWibYqSwBYkGQ7WXs4Rgixwzd8SA2W - 2 A5pjZUnA03EEOMr6fCezBKA6u4VrpeKB_zfnDNwMPJCRouU7bkWPx6JmEczPfF7MR3EQW_HAEqVeM7L5g7YOxBq_TzgQz4kiwKENa97dNXPsFW96G8Wz2EkPzmfAHSvTM154ZNWB2H593eLU9EL1VskNZuUis - RFlsSNhXQkjcbbWJ - e48aKCU8tz67SqEaOs9jI - 5 BgblQp5sYl7KfquV3_VYUMqhB0fFrRW_5S88vHuje21yAl7TskomNDi0IPserkvsRECt7EbqIReDHeskpZY_YayU7I_CXjMXCIZ2UeqXGsI9Uw1kt0A55yGHTlu3nGb0D4lnXtVq9rA8WG483qATUmS23LYXbmbWa7_cJUWQclBC4fh - 2 C4h3oIwfOMrqgFUgwIW7FCScT8i1REUvtG_WaGv - 79 AziBs3R7loL - q1TR_HPMSkEbPT6lZWcXuF - orWadDZg9mcmxvIVNwwI2Kcbx5AnZa6BkuF1NRLyMc6kSC3A4E1ml8UXLmW7Ti_Hoc_WO6pTmnkkZd9ODWXM9D9eiBfbwfLExxgbws8Mt85EVqoV2fbSGTjlOeEsToWuhmhYfDSYeDZw - 5 - tjt1UnNoaD5D5z54CbnXZxX3uvx47Ninx_KnKvFpXN6EbPYo2PXYIO8il09FajIj3tNBXEIQZERszgeSpNGZkmcufJr8jprNP27w .. / download [ following ] -- 2020 - 01 - 16 15 : 53 : 51 -- https : // public . boxcloud . com / d / 1 / b1 ! UpSBIsWK59JE_USL_X0zT7AA4IRB7hbcmLNrL0FEo0Dt4ThSyOx7Q8_J2S8riTT6_4D3PABwaLWLqxyQBOh237ZHCJp7bjubDL7 - JUopsW6dWCNgkwBeI5HQT_qya_pK7qd6kVvhP - YC_ssA7aueoRqMkPVnLRR2vEs1373v4ws6GQun7Cv4KhQsy3Y1G9fSL5a7jnoyhVAKY1T_jb - 3 bMlaEe0Lw5lOppJ1XvKLTasEVlmxJYBpsBUkGFMf2ReI5hBU4YCx - UlZiyKNFBs0 - gwb6XjlbrY4VOSlvGwxYwC0AVRmabz3RPM0 - grARJAlf2Nbmc_xSJjWKrlW8e79Ac4tSNG7IHEWX_O5wxLYAOfaLWMsZnnfGXAzE5a5IiYfhA7dq0egt8SBf2e5HraIwhkwO3_ud7hh0To2jcRJ - 0 c4VDk2eus9uYm92NDOSm0gxFSrSVIRpeK59y - V0OcjDDxjbVvHJxhKpEZET0G4q84NudifP8diW5sEKcvU4xTyUxF - oYJwv6HEvlXdtS5AQM - hLK - sjiJtdPU - 8 taL5f - xOkTIxnngzRRhlyDj8dy4eRDEgJlStPEdpUidCinmNsTCKvzqCuUcLoruGNUZawSSUwKqISaYkjNqqT22Tazth - Q2dnDCx4zo9btVH3Th9FZeff3JpsdtVRDkHLC - k8xcqGbAqG8bS7gDo8p3SeBDcCVzWibYqSwBYkGQ7WXs4Rgixwzd8SA2W - 2 A5pjZUnA03EEOMr6fCezBKA6u4VrpeKB_zfnDNwMPJCRouU7bkWPx6JmEczPfF7MR3EQW_HAEqVeM7L5g7YOxBq_TzgQz4kiwKENa97dNXPsFW96G8Wz2EkPzmfAHSvTM154ZNWB2H593eLU9EL1VskNZuUis - RFlsSNhXQkjcbbWJ - e48aKCU8tz67SqEaOs9jI - 5 BgblQp5sYl7KfquV3_VYUMqhB0fFrRW_5S88vHuje21yAl7TskomNDi0IPserkvsRECt7EbqIReDHeskpZY_YayU7I_CXjMXCIZ2UeqXGsI9Uw1kt0A55yGHTlu3nGb0D4lnXtVq9rA8WG483qATUmS23LYXbmbWa7_cJUWQclBC4fh - 2 C4h3oIwfOMrqgFUgwIW7FCScT8i1REUvtG_WaGv - 79 AziBs3R7loL - q1TR_HPMSkEbPT6lZWcXuF - orWadDZg9mcmxvIVNwwI2Kcbx5AnZa6BkuF1NRLyMc6kSC3A4E1ml8UXLmW7Ti_Hoc_WO6pTmnkkZd9ODWXM9D9eiBfbwfLExxgbws8Mt85EVqoV2fbSGTjlOeEsToWuhmhYfDSYeDZw - 5 - tjt1UnNoaD5D5z54CbnXZxX3uvx47Ninx_KnKvFpXN6EbPYo2PXYIO8il09FajIj3tNBXEIQZERszgeSpNGZkmcufJr8jprNP27w .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.24.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.24.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 630554964 ( 601 M ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L002_R1_001 . fastq . gz \u2019 nuclei_900_S1_L002_ 100 %[ ===================> ] 601.34 M 12.4 MB / s in 47 s 2020 - 01 - 16 15 : 54 : 38 ( 12.8 MB / s ) - \u2018 nuclei_900_S1_L002_R1_001 . fastq . gz \u2019 saved [ 630554964/630554964 ] -- 2020 - 01 - 16 15 : 54 : 39 -- https : // caltech . box . com / shared / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.25.197 , 107.152.24.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.25.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz [ following ] -- 2020 - 01 - 16 15 : 54 : 39 -- https : // caltech . box . com / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz [ following ] -- 2020 - 01 - 16 15 : 54 : 39 -- https : // caltech . app . box . com / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.26.199 , 107.152.27.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.26.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! eSBRhEjnaGBNdIysLMxDJwbEGKBI6iXrGsTMIedrDwgQbgwehejXPFG - E1iLSBUDfYdCUl87Kl6 - 1 c0h5LLPc6_S8Xv1GciJSIP4FQsSFnJI2yk304f87Z69O2sdOlHtOe4KFe5abT0R1reDd8eaXqT0QO8AkjttXlH1Nn4CJ7nlCXZWptCNrOyfmi5cRbLt - dnWHUyv3o1YzCnoYAvvW - lyXcQloP25G80fpfzHDry8e5e4WlDZag9AOrtrmc8t3QLH8875LU3 - AM - VT3Cyyca5LFcZJ42ESv62w6fnQHongPS9Rw - 1 ULp3nytnmQLgWF4E4kxYst7qUYV5Jmfg1UzboCi2ld0nBT4FWhpm8r37k51ZDNYc338UWJizAsjjHtO4e0vrAukWOgOPwyof7_jVx - g6wj0f7BXu3LNFMbbl9c6DkAsTGP9k - dfb9uELb1iLiYQQTSsxw9FXKJoxepRZJVPKnfUV4QOy449S8KJlCqe_gopt0u6V7E7yya9GhPIZtgtkgVLGSGCgaGsSETTy4Ab3hnOIWVhwocPEr_AST5IcC1WI71q22n6gY80eMXa61Pu0bzCI - gIoKGIGrnX8D1SaYfUK5EXcZ2dfhVrU85Dj_FuOK4_QFsFVRzbJfzowewSFOCIKt6kQDxvTcz2gIC5puHg8DJL0thNSY5YonBMHbbuikl7nlr2S2NT24X9ii7i - cMX87abVNpu1gir8D0qtRzrdUNc5 - 1 UMMmXfyrGT5frLxPT0wZZyfvVHSvoIf22EDBMD4_h4hlt_MGXExuPhsroeIaBhMBKnEJkp5mOsFJsKfGh8ZIbAwDu0Q3GPKFdIqY1LWuwL2qOQDqjG2KM2FDk_bh - qNy9xVQ8swIYXMlEB - 9 mC5wXtsOAHJzb9f2q9P3dqn0Jc - vYINs - onNOYwGqHHfGyupQJ3GqAdvVWcuhy - ARGj4XLVied2vhgC8E1YxlQ9jlZMszuwt - 3 _fLKZ_xwlz4VTPLtP7hNYc9OIEKg03yViIiyBFNllviCVHs1ej0Xicmn5S5Z_R8toCOHUkS4hiz560zZbCwZk5BmIqYdne3Im5cOeeDN_FNVxxL9njXlj7FZm7p1q_sKOxw0oUHGp54URZEuFWP6o4HgB - Bo0ZzWyTjgiJWHzww0UJ8uUiphlInz4FLc72k7lx2En04_SHlP2VrXF7nAdkaSQOynlerPO03bPfzmDNE1ZDTq_KIBD9W_9WD36nmOHJKY34kc - SWR7s - g8494ASxsIvubNonM1wEivcUJt3pazsE3IMZNuo2_cfh0DcARwuoCAunGR18wBgSh85XdpUwI5E6WXylPdyphNfNiso2aX3MIk7018KlJJ - vzrDG7U3bArSmgmtUnd1vzVKw0a1a4QHCyeKgJR0FyaP0vAjj5KQNpZAcfd0lVqfdPQOaPa5AY / download [ following ] -- 2020 - 01 - 16 15 : 54 : 40 -- https : // public . boxcloud . com / d / 1 / b1 ! eSBRhEjnaGBNdIysLMxDJwbEGKBI6iXrGsTMIedrDwgQbgwehejXPFG - E1iLSBUDfYdCUl87Kl6 - 1 c0h5LLPc6_S8Xv1GciJSIP4FQsSFnJI2yk304f87Z69O2sdOlHtOe4KFe5abT0R1reDd8eaXqT0QO8AkjttXlH1Nn4CJ7nlCXZWptCNrOyfmi5cRbLt - dnWHUyv3o1YzCnoYAvvW - lyXcQloP25G80fpfzHDry8e5e4WlDZag9AOrtrmc8t3QLH8875LU3 - AM - VT3Cyyca5LFcZJ42ESv62w6fnQHongPS9Rw - 1 ULp3nytnmQLgWF4E4kxYst7qUYV5Jmfg1UzboCi2ld0nBT4FWhpm8r37k51ZDNYc338UWJizAsjjHtO4e0vrAukWOgOPwyof7_jVx - g6wj0f7BXu3LNFMbbl9c6DkAsTGP9k - dfb9uELb1iLiYQQTSsxw9FXKJoxepRZJVPKnfUV4QOy449S8KJlCqe_gopt0u6V7E7yya9GhPIZtgtkgVLGSGCgaGsSETTy4Ab3hnOIWVhwocPEr_AST5IcC1WI71q22n6gY80eMXa61Pu0bzCI - gIoKGIGrnX8D1SaYfUK5EXcZ2dfhVrU85Dj_FuOK4_QFsFVRzbJfzowewSFOCIKt6kQDxvTcz2gIC5puHg8DJL0thNSY5YonBMHbbuikl7nlr2S2NT24X9ii7i - cMX87abVNpu1gir8D0qtRzrdUNc5 - 1 UMMmXfyrGT5frLxPT0wZZyfvVHSvoIf22EDBMD4_h4hlt_MGXExuPhsroeIaBhMBKnEJkp5mOsFJsKfGh8ZIbAwDu0Q3GPKFdIqY1LWuwL2qOQDqjG2KM2FDk_bh - qNy9xVQ8swIYXMlEB - 9 mC5wXtsOAHJzb9f2q9P3dqn0Jc - vYINs - onNOYwGqHHfGyupQJ3GqAdvVWcuhy - ARGj4XLVied2vhgC8E1YxlQ9jlZMszuwt - 3 _fLKZ_xwlz4VTPLtP7hNYc9OIEKg03yViIiyBFNllviCVHs1ej0Xicmn5S5Z_R8toCOHUkS4hiz560zZbCwZk5BmIqYdne3Im5cOeeDN_FNVxxL9njXlj7FZm7p1q_sKOxw0oUHGp54URZEuFWP6o4HgB - Bo0ZzWyTjgiJWHzww0UJ8uUiphlInz4FLc72k7lx2En04_SHlP2VrXF7nAdkaSQOynlerPO03bPfzmDNE1ZDTq_KIBD9W_9WD36nmOHJKY34kc - SWR7s - g8494ASxsIvubNonM1wEivcUJt3pazsE3IMZNuo2_cfh0DcARwuoCAunGR18wBgSh85XdpUwI5E6WXylPdyphNfNiso2aX3MIk7018KlJJ - vzrDG7U3bArSmgmtUnd1vzVKw0a1a4QHCyeKgJR0FyaP0vAjj5KQNpZAcfd0lVqfdPQOaPa5AY / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.24.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.24.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 1784669831 ( 1.7 G ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L002_R2_001 . fastq . gz \u2019 nuclei_900_S1_L002_ 100 %[ ===================> ] 1.66 G 17.5 MB / s in 95 s 2020 - 01 - 16 15 : 56 : 15 ( 17.9 MB / s ) - \u2018 nuclei_900_S1_L002_R2_001 . fastq . gz \u2019 saved [ 1784669831/1784669831 ] CPU times : user 2.09 s , sys : 407 ms , total : 2.49 s Wall time : 4 min 9 s Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing nuclei_900_S1_L001_R1_001.fastq.gz: OK nuclei_900_S1_L001_R2_001.fastq.gz: OK nuclei_900_S1_L002_R1_001.fastq.gz: OK nuclei_900_S1_L002_R2_001.fastq.gz: OK Install kb \u00b6 Install kb for running the kallisto | bustools workflow. 1 !pip install git+https://github.com/pachterlab/kb_python@count-kite Collecting git + https : // github . com / pachterlab / kb_python @ count - kite Cloning https : // github . com / pachterlab / kb_python ( to revision count - kite ) to / tmp / pip - req - build - 00 ne_j5p Running command git clone - q https : // github . com / pachterlab / kb_python / tmp / pip - req - build - 00 ne_j5p Running command git checkout - b count - kite -- track origin / count - kite Switched to a new branch 'count-kite' Branch 'count-kite' set up to track remote branch 'count-kite' from 'origin' . Collecting anndata >= 0.6 . 22. post1 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 2 b / 72 / 87196 c15f68d9865c31a43a10cf7c50bcbcedd5607d09f9aada0b3963103 / anndata - 0.6 . 22. post1 - py3 - none - any . whl ( 47 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 1.8 MB / s \u001b [ ? 25 hCollecting loompy >= 3.0 . 6 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 36 / 52 / 74 ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9 / loompy - 3.0 . 6. tar . gz ( 41 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5.1 MB / s \u001b [ ? 25 hRequirement already satisfied : requests >= 2.19 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 2.21 . 0 ) Collecting tqdm >= 4.39 . 0 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 72 / c9 / 7 fc20feac72e79032a7c8138fd0d395dc6d8812b5b9edf53c3afd0b31017 / tqdm - 4.41 . 1 - py2 . py3 - none - any . whl ( 56 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 61 kB 3.9 MB / s \u001b [ ? 25 hRequirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 0.25 . 3 ) Requirement already satisfied : numpy ~= 1.14 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.17 . 5 ) Requirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.8 . 0 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 5.5 . 0 ) Requirement already satisfied : scipy ~= 1.0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.4 . 1 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 42.0 . 2 ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.47 . 0 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 7.0 ) Collecting numpy - groupies \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 57 / ae / 18217 b57ba3e4bb8a44ecbfc161ed065f6d1b90c75d404bd6ba8d6f024e2 / numpy_groupies - 0.9 . 10. tar . gz ( 43 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4.7 MB / s \u001b [ ? 25 hRequirement already satisfied : urllib3 < 1.25 , >= 1.21 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 1.24 . 3 ) Requirement already satisfied : certifi >= 2017.4 . 17 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2019.11 . 28 ) Requirement already satisfied : idna < 2.9 , >= 2.5 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2.8 ) Requirement already satisfied : chardet < 3.1 . 0 , >= 3.0 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 3.0 . 4 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.6 . 1 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2018.9 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.12 . 0 ) Requirement already satisfied : llvmlite >= 0.31 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.31 . 0 ) Building wheels for collected packages : kb - python , loompy , numpy - groupies Building wheel for kb - python ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for kb - python : filename = kb_python - 0.24 . 4 - cp36 - none - any . whl size = 80991434 sha256 = 46 c80d686746b8cc5f5ea19481297c38fcb7c928c8f472d75d4261ce74266483 Stored in directory : / tmp / pip - ephem - wheel - cache - 6 ek0s5dl / wheels / 8 e / 56 / 56 / c89223de74af26792675e82f4bb5223e7cf0d653a33038e34c Building wheel for loompy ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for loompy : filename = loompy - 3.0 . 6 - cp36 - none - any . whl size = 47896 sha256 = 5 aa0e8271e5ecd4bdfc5ad2636af749cb6b32c6dc5789e4cca70337993c1f066 Stored in directory : / root /. cache / pip / wheels / f9 / a4 / 90 / 5 a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9 Building wheel for numpy - groupies ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for numpy - groupies : filename = numpy_groupies - 0 + unknown - cp36 - none - any . whl size = 28044 sha256 = 7 f56b834c065c60c4db18f99a2d651074b23e468028919e5ff9422f774ebc9cf Stored in directory : / root /. cache / pip / wheels / 30 / ac / 83 / 64 d5f9293aeaec63f9539142fc629a41af064cae1b3d8d94aa Successfully built kb - python loompy numpy - groupies Installing collected packages : anndata , numpy - groupies , loompy , tqdm , kb - python Found existing installation : tqdm 4.28 . 1 Uninstalling tqdm - 4.28 . 1 : Successfully uninstalled tqdm - 4.28 . 1 Successfully installed anndata - 0.6 . 22. post1 kb - python - 0.24 . 4 loompy - 3.0 . 6 numpy - groupies - 0 + unknown tqdm - 4.41 . 1 Download mouse reference files and build the index \u00b6 We build a mouse cDNA and intron index from the mouse genome and annotations provided by Ensembl. 1 2 3 %%time !wget ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz --2020-01-16 15:56:57-- ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz => \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/mus_musculus/dna ... done. ==> SIZE Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... 805984352 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... done. Length: 805984352 (769M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 768.65M 23.0MB/s in 36s 2020-01-16 15:57:35 (21.1 MB/s) - \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 saved [805984352] --2020-01-16 15:57:36-- ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz => \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/mus_musculus ... done. ==> SIZE Mus_musculus.GRCm38.98.gtf.gz ... 30256597 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.98.gtf.gz ... done. Length: 30256597 (29M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 28.85M 14.0MB/s in 2.1s 2020-01-16 15:57:40 (14.0 MB/s) - \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 saved [30256597] CPU times: user 371 ms, sys: 76.5 ms, total: 447 ms Wall time: 43.2 s Notice we use the -n option to split the index into multiple files. This helps reduce the maximum memory usage so that Google Colab doesn't run out of memory. 1 2 3 4 %%time !kb ref -i index.idx -g t2g.txt -f1 cdna.fa -f2 intron.fa \\ -c1 cdna_t2c.txt -c2 intron_t2c.txt --workflow lamanno -n 8 \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz Mus_musculus.GRCm38.98.gtf.gz [ 2020 - 01 - 16 15 : 57 : 41 , 860 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2020 - 01 - 16 15 : 57 : 41 , 860 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 15 : 58 : 08 , 556 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmptuipvatl [ 2020 - 01 - 16 16 : 05 : 44 , 930 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 16 : 05 : 48 , 839 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmpqc7d85yg [ 2020 - 01 - 16 16 : 06 : 50 , 352 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpzpi_mdzg [ 2020 - 01 - 16 16 : 06 : 50 , 352 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: GL456383.1, GL456367.1, GL456390.1, GL456389.1, GL456379.1, GL456387.1, GL456370.1, GL456394.1, GL456359.1, GL456392.1, GL456378.1, GL456213.1, GL456396.1, JH584300.1, GL456360.1, GL456393.1, JH584301.1, GL456366.1, JH584302.1, GL456382.1, GL456368.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 16 : 07 : 59 , 570 ] INFO Wrote 142446 cDNA transcripts [ 2020 - 01 - 16 16 : 07 : 59 , 575 ] INFO Creating cDNA transcripts - to - capture at / content / tmp / tmpgun332i9 [ 2020 - 01 - 16 16 : 08 : 00 , 603 ] INFO Splitting genome into introns at / content / tmp / tmp4cl5pq5u [ 2020 - 01 - 16 16 : 12 : 49 , 090 ] INFO Wrote 647972 intron sequences [ 2020 - 01 - 16 16 : 12 : 49 , 095 ] INFO Creating intron transcripts - to - capture at / content / tmp / tmpb7kwg4ry [ 2020 - 01 - 16 16 : 13 : 55 , 504 ] INFO Concatenating 1 cDNA FASTAs to cdna . fa [ 2020 - 01 - 16 16 : 14 : 00 , 221 ] INFO Concatenating 1 cDNA transcripts - to - captures to cdna_t2c . txt [ 2020 - 01 - 16 16 : 14 : 00 , 320 ] INFO Concatenating 1 intron FASTAs to intron . fa [ 2020 - 01 - 16 16 : 14 : 50 , 492 ] INFO Concatenating 1 intron transcripts - to - captures to intron_t2c . txt [ 2020 - 01 - 16 16 : 14 : 50 , 803 ] INFO Concatenating cDNA and intron FASTAs to / content / tmp / tmp6ssxsc_j [ 2020 - 01 - 16 16 : 16 : 10 , 955 ] INFO Creating transcript - to - gene mapping at t2g . txt [ 2020 - 01 - 16 16 : 17 : 18 , 925 ] INFO Splitting / content / tmp / tmp6ssxsc_j into 8 parts [ 2020 - 01 - 16 16 : 18 : 13 , 532 ] INFO Indexing / content / tmp / tmpzw65y9wa to index . idx . 0 [ 2020 - 01 - 16 16 : 35 : 27 , 873 ] INFO Indexing / content / tmp / tmp4h1a02ef to index . idx . 1 [ 2020 - 01 - 16 16 : 49 : 46 , 788 ] INFO Indexing / content / tmp / tmptw5rlyf0 to index . idx . 2 [ 2020 - 01 - 16 17 : 04 : 53 , 914 ] INFO Indexing / content / tmp / tmpavi28g7n to index . idx . 3 [ 2020 - 01 - 16 17 : 19 : 13 , 835 ] INFO Indexing / content / tmp / tmpofcnmlri to index . idx . 4 [ 2020 - 01 - 16 17 : 33 : 31 , 933 ] INFO Indexing / content / tmp / tmpq_weqj_3 to index . idx . 5 [ 2020 - 01 - 16 17 : 48 : 06 , 886 ] INFO Indexing / content / tmp / tmpp7xih6mo to index . idx . 6 [ 2020 - 01 - 16 18 : 03 : 09 , 010 ] INFO Indexing / content / tmp / tmpyj0138gw to index . idx . 7 CPU times : user 36 . 7 s , sys : 6 . 37 s , total : 43 . 1 s Wall time : 2 h 20 min 44 s Generate RNA count matrices \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively, as well as the transcripts-to-capture lists to the -c1 and -c2 arguments. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . Note the --workflow nucleus to indicate this is a single nucleus experiment. Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 %%time !kb count -i index.idx.0,index.idx.1,index.idx.2,index.idx.3,index.idx.4,index.idx.5,index.idx.6,index.idx.7 \\ -g t2g.txt -c1 cdna_t2c.txt -c2 intron_t2c.txt -x 10xv2 -o output -t 2 --workflow nucleus --h5ad \\ nuclei_900_S1_L001_R1_001.fastq.gz nuclei_900_S1_L001_R2_001.fastq.gz \\ nuclei_900_S1_L002_R1_001.fastq.gz nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:26:55,274] INFO Generating BUS file using 8 indices [2020-01-16 21:26:55,274] INFO Generating BUS file to output/tmp/bus_part0 from [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:26:55,275] INFO Using index index.idx.0 [2020-01-16 21:38:46,592] INFO Generating BUS file to output/tmp/bus_part1 from [2020-01-16 21:38:46,592] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 21:38:46,592] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 21:38:46,593] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 21:38:46,593] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:38:46,593] INFO Using index index.idx.1 [2020-01-16 21:54:34,715] INFO Generating BUS file to output/tmp/bus_part2 from [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:54:34,716] INFO Using index index.idx.2 [2020-01-16 22:10:18,962] INFO Generating BUS file to output/tmp/bus_part3 from [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:10:18,963] INFO Using index index.idx.3 [2020-01-16 22:26:04,028] INFO Generating BUS file to output/tmp/bus_part4 from [2020-01-16 22:26:04,028] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:26:04,029] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:26:04,029] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:26:04,029] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:26:04,029] INFO Using index index.idx.4 [2020-01-16 22:41:47,809] INFO Generating BUS file to output/tmp/bus_part5 from [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:41:47,809] INFO Using index index.idx.5 [2020-01-16 22:57:47,130] INFO Generating BUS file to output/tmp/bus_part6 from [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:57:47,130] INFO Using index index.idx.6 [2020-01-16 23:13:46,707] INFO Generating BUS file to output/tmp/bus_part7 from [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 23:13:46,708] INFO Using index index.idx.7 [2020-01-16 23:29:45,121] INFO Merging BUS records to output from [2020-01-16 23:29:45,121] INFO output/tmp/bus_part0 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part1 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part2 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part3 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part4 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part5 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part6 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part7 [2020-01-16 23:33:12,815] INFO Sorting BUS file output/output.bus to output/tmp/output.s.bus [2020-01-16 23:35:04,359] INFO Whitelist not provided [2020-01-16 23:35:04,359] INFO Copying pre-packaged 10XV2 whitelist to output [2020-01-16 23:35:04,517] INFO Inspecting BUS file output/tmp/output.s.bus [2020-01-16 23:36:04,780] INFO Correcting BUS records in output/tmp/output.s.bus to output/tmp/output.s.c.bus with whitelist output/10xv2_whitelist.txt [2020-01-16 23:37:08,241] INFO Sorting BUS file output/tmp/output.s.c.bus to output/output.unfiltered.bus [2020-01-16 23:38:44,109] INFO Capturing records from BUS file output/output.unfiltered.bus to output/tmp/spliced.bus with capture list intron_t2c.txt [2020-01-16 23:40:15,469] INFO Sorting BUS file output/tmp/spliced.bus to output/spliced.unfiltered.bus [2020-01-16 23:40:31,065] INFO Generating count matrix output/counts_unfiltered/spliced from BUS file output/spliced.unfiltered.bus [2020-01-16 23:41:40,242] INFO Capturing records from BUS file output/output.unfiltered.bus to output/tmp/unspliced.bus with capture list cdna_t2c.txt [2020-01-16 23:43:55,755] INFO Sorting BUS file output/tmp/unspliced.bus to output/unspliced.unfiltered.bus [2020-01-16 23:44:28,286] INFO Generating count matrix output/counts_unfiltered/unspliced from BUS file output/unspliced.unfiltered.bus [2020-01-16 23:45:40,436] INFO Reading matrix output/counts_unfiltered/spliced.mtx [2020-01-16 23:45:51,189] INFO Reading matrix output/counts_unfiltered/unspliced.mtx [2020-01-16 23:45:57,929] INFO Combining matrices [2020-01-16 23:45:58,596] INFO Writing matrices to h5ad output/counts_unfiltered/adata.h5ad CPU times: user 38.4 s, sys: 5.08 s, total: 43.5 s Wall time: 2h 19min 8s Load the anndata into python \u00b6 kb automatically sums the counts of genes for barcodes common to both spliced and unspliced matrices as an Anndata object in H5AD format (because --h5ad was used). 1 import anndata 1 adata = anndata.read('output/counts_unfiltered/adata.h5ad') 1 adata AnnData object with n_obs \u00d7 n_vars = 175538 \u00d7 55421 1 adata.obs .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } index AAACCTGAGAAAGTGG AAACCTGAGAAGCCCA AAACCTGAGAATTCCC AAACCTGAGACACGAC AAACCTGAGACCCACC ... TTTGTCATCTTACCGC TTTGTCATCTTAGCCC TTTGTCATCTTCAACT TTTGTCATCTTGAGGT TTTGTCATCTTTAGTC 175538 rows \u00d7 0 columns 1 adata.var .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } index ENSMUSG00000026535.9 ENSMUSG00000026315.13 ENSMUSG00000000817.10 ENSMUSG00000063558.4 ENSMUSG00000001138.13 ... ENSMUSG00000118447.1 ENSMUSG00000118422.1 ENSMUSG00000118472.1 ENSMUSG00000118404.1 ENSMUSG00000118417.1 55421 rows \u00d7 0 columns 1","title":"Python"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#pre-processing-mouse-single-nuclei-rna-seq-data-with-kallisto-and-bustools","text":"In this tutorial we will process the 10x dataset 1k Brain Nuclei from an E18 Mouse using kallisto bus and a custom built DNA and intron index for mouse. We will generate two matrices: one for spliced transcripts and one for unspliced transcripts, and sum them to obtain total nuclear transcripts. 1 !date Thu Jan 16 15:52:05 UTC 2020","title":"Pre-processing mouse single-nuclei RNA-seq data with kallisto and bustools"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#pre-processing","text":"","title":"Pre-processing"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#download-the-data","text":"Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 %%time !wget https://caltech.box.com/shared/static/j337aflq9ublmwaripkepob41mr23216.txt -O checksums.txt !wget https://caltech.box.com/shared/static/2j8shgwmalzcjawuow51678a8yssvdef.gz -O nuclei_900_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/k2yydqlz2jtckw1shk5h536mxn47nm9n.gz -O nuclei_900_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/tlqdm0w3tvy8ogyktsz7ahggwurc6kkj.gz -O nuclei_900_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/gqrvkqllr9d7zq4e3yfrng9kgfbejowe.gz -O nuclei_900_S1_L002_R2_001.fastq.gz -- 2020 - 01 - 16 15 : 52 : 07 -- https : // caltech . box . com / shared / static / j337aflq9ublmwaripkepob41mr23216 . txt Resolving caltech . box . com ( caltech . box . com )... 107.152.26.197 , 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.26.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / j337aflq9ublmwaripkepob41mr23216 . txt [ following ] -- 2020 - 01 - 16 15 : 52 : 12 -- https : // caltech . box . com / public / static / j337aflq9ublmwaripkepob41mr23216 . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / j337aflq9ublmwaripkepob41mr23216 . txt [ following ] -- 2020 - 01 - 16 15 : 52 : 12 -- https : // caltech . app . box . com / public / static / j337aflq9ublmwaripkepob41mr23216 . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.199 , 107.152.26.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! GcwiYMLuutOlK9x2GOcgBeJEzw7h5lJWU6P_DhY5cEFRktRc - MWgWWB1g94XLVSAuhxsYnAcFDQJ4VBAH_a3ObNnzvrJJwFkt220Nma3TJoLifXB3oWGWH3teBvR3pcjKZ7KijVqs6vO7Yofh44COuvzpbvEYfUqaXK - 8 PqHHQtQ7ZavLSV20ykoB81K - ZyLzSOIFoJjG8o - D8uz3uw5AInnVlDuKdN1qyQ17eujvTTBn4sj4joxaifmiZK - O7XA - FbcXkdHYUKwNhWzLPexMBsJKd1WT5qF7VAVmhajA6wo46bsrF_LTGETw_U5difW6etQNE_IuthI4anrdPV4ClJQDGCrL8whiuR5EGttUDzBmdNXgKJ8fTgOMUVQ5y4Ceij - F4bXTUW9lGGSYok7gdyHt3VnjkdMCbvq - t9kPN8esW_deFaJAH3BzU_jZ6u4652y5MDrWZMIg6r7wxMpGkG0smbZHN0PDIkESjMmkgSC - 3 mDxucly0sxtcD5 - er0lOVpPuJivePQl_rNBSKmbXOrpSNfkWcR - o6eFkXVQcdHw - 1 j_DUpBtOqfhIg0rVCkvI82UBKesxf0gbVBERcQ54RTRdfDqfuXZKwbogxTie85n5LC3F75QVtJr9TT8y18nEgj02qEoChVIcIBJiiTv7pTAW_rCxBlOGDNN - iY4VyeP2PBZ6CKkEHlbaFT2L0LYLQMfvkXBYEC00S0e2rqQoXED6sTvxVVD3Df4tMskd9l7NDIF1OxNk7IueJhtiDICKMydwA860XmmOkfGMK1YkYJKdpqoAU04nY2_SO0gmtjEtJMSqxcr6Yr2nuVbnmU1sRu0Su2lMIrIB1QLF7ma1gsYArHbBa3e8tGddxykgkA_8gfUbRFzmmqvKKCWYo1yPnGqoZUNmg - s26zQimtE - ahQ4ePIA35N9HCvT3SP2IPIr1lLa1zkKckGFLSRvrlCV0X5Hr - I2CJlgslvnER35EIIxnnKA - Ey7wSrMbAOBkBVBMLpLGL15on0e - tP1knNZ2JdqQ0WahXYJaAmOk5ks4Dar8pO0gwsQIibD5BmtTW6Ag9qg0Au0Zgg5mqWUJc - QTsh9eqAx73I - YXBAci_oaKkmv4uZjej2NHM0lq8mej4onFQNAsA_m - Zxvgx5tdv - FqfcVvPSOMw10_wWatDcXxF - TcjTUtDpqhIJDfJNq8_CPzX_XyW6j05F5 - Qa - pCZZjAHjPL8K0Mtnvj8Y2_2NIJW7kxyerJ2YUM_UipTYzxXVEV8wv4bCF5OxwV8fNlXnYkbl - 2 hc2NjTD9of0XA6uWa_FyPUetjM1xtQN89D3olZ9wyX411FkvCnj2qhBEs1vJjjJs4dT3pEY0MzO0CUtAgxOKppttE . / download [ following ] -- 2020 - 01 - 16 15 : 52 : 13 -- https : // public . boxcloud . com / d / 1 / b1 ! GcwiYMLuutOlK9x2GOcgBeJEzw7h5lJWU6P_DhY5cEFRktRc - MWgWWB1g94XLVSAuhxsYnAcFDQJ4VBAH_a3ObNnzvrJJwFkt220Nma3TJoLifXB3oWGWH3teBvR3pcjKZ7KijVqs6vO7Yofh44COuvzpbvEYfUqaXK - 8 PqHHQtQ7ZavLSV20ykoB81K - ZyLzSOIFoJjG8o - D8uz3uw5AInnVlDuKdN1qyQ17eujvTTBn4sj4joxaifmiZK - O7XA - FbcXkdHYUKwNhWzLPexMBsJKd1WT5qF7VAVmhajA6wo46bsrF_LTGETw_U5difW6etQNE_IuthI4anrdPV4ClJQDGCrL8whiuR5EGttUDzBmdNXgKJ8fTgOMUVQ5y4Ceij - F4bXTUW9lGGSYok7gdyHt3VnjkdMCbvq - t9kPN8esW_deFaJAH3BzU_jZ6u4652y5MDrWZMIg6r7wxMpGkG0smbZHN0PDIkESjMmkgSC - 3 mDxucly0sxtcD5 - er0lOVpPuJivePQl_rNBSKmbXOrpSNfkWcR - o6eFkXVQcdHw - 1 j_DUpBtOqfhIg0rVCkvI82UBKesxf0gbVBERcQ54RTRdfDqfuXZKwbogxTie85n5LC3F75QVtJr9TT8y18nEgj02qEoChVIcIBJiiTv7pTAW_rCxBlOGDNN - iY4VyeP2PBZ6CKkEHlbaFT2L0LYLQMfvkXBYEC00S0e2rqQoXED6sTvxVVD3Df4tMskd9l7NDIF1OxNk7IueJhtiDICKMydwA860XmmOkfGMK1YkYJKdpqoAU04nY2_SO0gmtjEtJMSqxcr6Yr2nuVbnmU1sRu0Su2lMIrIB1QLF7ma1gsYArHbBa3e8tGddxykgkA_8gfUbRFzmmqvKKCWYo1yPnGqoZUNmg - s26zQimtE - ahQ4ePIA35N9HCvT3SP2IPIr1lLa1zkKckGFLSRvrlCV0X5Hr - I2CJlgslvnER35EIIxnnKA - Ey7wSrMbAOBkBVBMLpLGL15on0e - tP1knNZ2JdqQ0WahXYJaAmOk5ks4Dar8pO0gwsQIibD5BmtTW6Ag9qg0Au0Zgg5mqWUJc - QTsh9eqAx73I - YXBAci_oaKkmv4uZjej2NHM0lq8mej4onFQNAsA_m - Zxvgx5tdv - FqfcVvPSOMw10_wWatDcXxF - TcjTUtDpqhIJDfJNq8_CPzX_XyW6j05F5 - Qa - pCZZjAHjPL8K0Mtnvj8Y2_2NIJW7kxyerJ2YUM_UipTYzxXVEV8wv4bCF5OxwV8fNlXnYkbl - 2 hc2NjTD9of0XA6uWa_FyPUetjM1xtQN89D3olZ9wyX411FkvCnj2qhBEs1vJjjJs4dT3pEY0MzO0CUtAgxOKppttE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.26.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.26.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 408 [ text/plain ] Saving to : \u2018 checksums . txt \u2019 checksums . txt 100 %[ ===================> ] 408 -- . - KB / s in 0 s 2020 - 01 - 16 15 : 52 : 13 ( 95.3 MB / s ) - \u2018 checksums . txt \u2019 saved [ 408/408 ] -- 2020 - 01 - 16 15 : 52 : 14 -- https : // caltech . box . com / shared / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.26.197 , 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.26.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 14 -- https : // caltech . box . com / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 14 -- https : // caltech . app . box . com / public / static / 2 j8shgwmalzcjawuow51678a8yssvdef . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.199 , 107.152.26.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! 5 U6Zu_0JeqnVVcz5PDt4XxrXXLpaSp2XNMDZ8Xf3Z1OJcH_gaUEBqmCnFYkZmilbCIlf_R01pEelr0aDWUVm5FliiDmW4jTzQnM_hm2iEesumpJG8ssdu40dAtXERs9ZHNbHSy1P9nXJGtccGJPrKBCQBQyBBCjHigChYvrcrxvArQBzjatym5JkG2cZagUV6Dn8VA4N9LCShceA3YPhlXpG_ - X7p1T1DcIoi6U6jbZUMbJW_NQWPvyELi1sfgy4_WL3ubWZnTDroUlDAAGlJ2A38LW9pljkIN2tdupF3yuvulv2MPfz0Bn_K5ncwoicKNNZ95k3CELi_70hkWmcHVvtJEO0CvI6r8rHFdghxsUFxwopNq - 77 sNYnxEZiCE - lj7bKZzzhH015p7Kx6haSmbe9WqmVkJMP1Cn1hke_DTCMv_d13BJkvt5Ywt1uPf0n - k3bmOUZpoAa4fXTWLrE0fn4PtmgXRZ4RZURHcIT1WCO8FKRnkUhlp - Vg0W9n3pEwJUUivqO_tcav6KPYWVElVk67teYNNnEAeNF_8ogUvuITdrZWTWSpZ5agP - jFND4_1vf_L7ZvrOFwCgIz0SRByJdT9wCJ9ofGCyQ_ECuIpAiArn5BGvnNwutuuH3N3RgWOVTr5Mhy6zYbME5u1qocmUx0Uvv8CNnASSMQ74nMqLVoDd7EByDCrW9ONOn6MEW - tX4U65ArB3tnwT_Gnx7yvOgWNpIg8bjlb7FPX3kbvO7wQe7qMQqH0GvFveeQw3 - 3 g04tya_WLMpcrd2dxdSfku3vkWeOd34jIL2IKVjd7wqUhf6O2DFQcRFrrZ7cxgiRXQ7uABbY7qS9eykxQvetzIhHbGSZEm9d0VSEQKEIb - KMimKxGVCul2FQSf - 6 beI6n - DBwso3VO7sxUzM8OCUN0YElsYuqfXVT2 - 5 U_Hr - qkYQWi1S6xhGdif5toSuTEzn4_WPGTklAkkDHJT_Z83GMhLs65QCOfrELlsm_Tw0LWw - CpbRrrbAGbrZRCxDdh4NuHmV5aH0mREQgxQ1gta - 9 hrlBTTELfX73t27xgOBeAe2AazG6K8G8pDxxchRWUOjNHEwYJQ - rMT9n6xRHHJzm1NiOElOXU - AiI2012vx02xbJGo8vm3SQfV4On09G7Sblq_4D9eRHLzHf0dGiURAMrpiApc1VFC0 - NlEhEBO - 3 TkiM_xI9OjZYYx9uiE9tEPmLS9zJUrnvoIbf5iHnrEha4 - CFZw - KIUmYdlpTlSSILnT5mT1wzm_DUoMoIe9GlrGCRvx60cm6F5F2bC2ehrUqtJoeOZP9XCp7wW3V8T5vOLBgiUECr1Ry9hlZaqkFwWYDNHxwUabYmHNyAfTDpUI4zvF79mZ7b7sb2h_UpSmS4Ab_HLroZYBCe7iLn3qRuLoP_A3BvohWxHAO_dMYqV1VA .. / download [ following ] -- 2020 - 01 - 16 15 : 52 : 15 -- https : // public . boxcloud . com / d / 1 / b1 ! 5 U6Zu_0JeqnVVcz5PDt4XxrXXLpaSp2XNMDZ8Xf3Z1OJcH_gaUEBqmCnFYkZmilbCIlf_R01pEelr0aDWUVm5FliiDmW4jTzQnM_hm2iEesumpJG8ssdu40dAtXERs9ZHNbHSy1P9nXJGtccGJPrKBCQBQyBBCjHigChYvrcrxvArQBzjatym5JkG2cZagUV6Dn8VA4N9LCShceA3YPhlXpG_ - X7p1T1DcIoi6U6jbZUMbJW_NQWPvyELi1sfgy4_WL3ubWZnTDroUlDAAGlJ2A38LW9pljkIN2tdupF3yuvulv2MPfz0Bn_K5ncwoicKNNZ95k3CELi_70hkWmcHVvtJEO0CvI6r8rHFdghxsUFxwopNq - 77 sNYnxEZiCE - lj7bKZzzhH015p7Kx6haSmbe9WqmVkJMP1Cn1hke_DTCMv_d13BJkvt5Ywt1uPf0n - k3bmOUZpoAa4fXTWLrE0fn4PtmgXRZ4RZURHcIT1WCO8FKRnkUhlp - Vg0W9n3pEwJUUivqO_tcav6KPYWVElVk67teYNNnEAeNF_8ogUvuITdrZWTWSpZ5agP - jFND4_1vf_L7ZvrOFwCgIz0SRByJdT9wCJ9ofGCyQ_ECuIpAiArn5BGvnNwutuuH3N3RgWOVTr5Mhy6zYbME5u1qocmUx0Uvv8CNnASSMQ74nMqLVoDd7EByDCrW9ONOn6MEW - tX4U65ArB3tnwT_Gnx7yvOgWNpIg8bjlb7FPX3kbvO7wQe7qMQqH0GvFveeQw3 - 3 g04tya_WLMpcrd2dxdSfku3vkWeOd34jIL2IKVjd7wqUhf6O2DFQcRFrrZ7cxgiRXQ7uABbY7qS9eykxQvetzIhHbGSZEm9d0VSEQKEIb - KMimKxGVCul2FQSf - 6 beI6n - DBwso3VO7sxUzM8OCUN0YElsYuqfXVT2 - 5 U_Hr - qkYQWi1S6xhGdif5toSuTEzn4_WPGTklAkkDHJT_Z83GMhLs65QCOfrELlsm_Tw0LWw - CpbRrrbAGbrZRCxDdh4NuHmV5aH0mREQgxQ1gta - 9 hrlBTTELfX73t27xgOBeAe2AazG6K8G8pDxxchRWUOjNHEwYJQ - rMT9n6xRHHJzm1NiOElOXU - AiI2012vx02xbJGo8vm3SQfV4On09G7Sblq_4D9eRHLzHf0dGiURAMrpiApc1VFC0 - NlEhEBO - 3 TkiM_xI9OjZYYx9uiE9tEPmLS9zJUrnvoIbf5iHnrEha4 - CFZw - KIUmYdlpTlSSILnT5mT1wzm_DUoMoIe9GlrGCRvx60cm6F5F2bC2ehrUqtJoeOZP9XCp7wW3V8T5vOLBgiUECr1Ry9hlZaqkFwWYDNHxwUabYmHNyAfTDpUI4zvF79mZ7b7sb2h_UpSmS4Ab_HLroZYBCe7iLn3qRuLoP_A3BvohWxHAO_dMYqV1VA .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.26.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.26.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 627431870 ( 598 M ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L001_R1_001 . fastq . gz \u2019 nuclei_900_S1_L001_ 100 %[ ===================> ] 598.37 M 23.1 MB / s in 26 s 2020 - 01 - 16 15 : 52 : 41 ( 22.7 MB / s ) - \u2018 nuclei_900_S1_L001_R1_001 . fastq . gz \u2019 saved [ 627431870/627431870 ] -- 2020 - 01 - 16 15 : 52 : 42 -- https : // caltech . box . com / shared / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.26.197 , 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.26.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 42 -- https : // caltech . box . com / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz [ following ] -- 2020 - 01 - 16 15 : 52 : 42 -- https : // caltech . app . box . com / public / static / k2yydqlz2jtckw1shk5h536mxn47nm9n . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.199 , 107.152.26.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! cM7F - H9GC5xcOTIcPEDIng1keb1_sf_4S9a_OTqkd7FRTT5sHg - gF9tD7JUuRRkJrhgOgAInFK8YcJQq_XA619I9Qj0UFxrLb7nMBToxBXF4Ml_gXYKiuq0Y6L2B65mL6mN1hROJDOl6X598o2N4nurQrUV5Hd2oABh70YznMfdDgX - U_Y - dQBMWL9EzLL2QPiYskaeHcNk1QdxoiciFCd6PwpXct - aIFfL1tHnlE9pJ2Jniad7y1Ymv8rdAN_nvzGq68 - vhYAR6Ypsy3UeJ_84tMCMy2KdvY0aqQdnl7jpPLSHNDV1VWFLCJat2mYmwi4mx9jOI__ydx_efWv_T5MegHs3e1GmCA38YvswdJDjgqiChEuXwV6yvVmRZSVisScRJz5_LwwMKTmGmMu4Hpa0WsG0Mret8kZ8lujx4EZLHE4LQhUQ1aBO_xwDyPrZ_TavMDuAF_e2ZDkTahwALIF2cDVOYy58wzpa - iy7rbA5E - jlceLKd5IoKbanw0OHNRBE8Gi1pQ9 - uP - rfg8wf3DU7qHh - C7 - I - IJFDpmlfqNESMHBywNZmuOvcQ0hT6lDGMU0NZD4Y8WFjH9UmKE2apmwv5qyNFFXpyYsG2ne - zdLoe0FirKHDkto7hnX - 3 jewG9eY5V2oIMby7XBmJa2CQFL - Fz1VCiuD0HkkUobMFKzPAIsNpZJlUwfpNq21dJG9WLRzcQ - njX6A_hD621Zg_QGxt3kDZF_r7NpAfwSLz4aHyVjuBucQgbEVwiMtm - qUC5dsGJEv8qioS9dSC3JHuoYi7yde28uPW3RUGgDzD2ZDspMaEI7GQqrW_kqNHq3uTTG_hdx_o8e63dFZ0HXjWT - D09ziZd7_6A2p4NCf2aDNW_Ys8y0PkrVX1VyLHxqpT2j62 - t9y5l - fd3AlRkgAe1WnmJVOUTKATHzYKK4MQKSW5bQ6fMV1Khb_HjVWzk - zpoZGBKNYkPEAGmQQv7Tmr9CZ_gD2aoCDibXCFBXi2k - TftSsnlzKbZkIF2IdSPHWpthXwj6Xf44Qnx1HRCp10MlrZmPI49TlNa2ZzHQUm2TEvFuqwzUMB7qIPWUEGdgSfIUpc00t3Yhx_2BaGbIzCp6Cp4O6BgTymoRSErj_Xg29Y4Xzkyen1nUc2zc0pWSd_h - iK5Jt9FmOupM4LJVSM_b04nIPARZFR7GxhRbzE5YX - EZhy2_yJIsH_Ajl0fPdZ2sDm3zne3OhdcBZ - Ea0BEqpemjOh1a717iX1b2LbLf5wkx2lmlVUhkO09FtwYqw - U26jrElqmfOl6vEDvG - GUJoYTHrSJ_nVFbaqt2eGqU6HGSyS7FQa0LVR5jANJPU2vi78s8y0FF75_CIMYHpjVYyQXkgEGNVmpm5wKBdagk4E9YSeSRey0gETkz1iVigAf80EL - c5nvMUfCvOktgDrjRo . / download [ following ] -- 2020 - 01 - 16 15 : 52 : 43 -- https : // public . boxcloud . com / d / 1 / b1 ! cM7F - H9GC5xcOTIcPEDIng1keb1_sf_4S9a_OTqkd7FRTT5sHg - gF9tD7JUuRRkJrhgOgAInFK8YcJQq_XA619I9Qj0UFxrLb7nMBToxBXF4Ml_gXYKiuq0Y6L2B65mL6mN1hROJDOl6X598o2N4nurQrUV5Hd2oABh70YznMfdDgX - U_Y - dQBMWL9EzLL2QPiYskaeHcNk1QdxoiciFCd6PwpXct - aIFfL1tHnlE9pJ2Jniad7y1Ymv8rdAN_nvzGq68 - vhYAR6Ypsy3UeJ_84tMCMy2KdvY0aqQdnl7jpPLSHNDV1VWFLCJat2mYmwi4mx9jOI__ydx_efWv_T5MegHs3e1GmCA38YvswdJDjgqiChEuXwV6yvVmRZSVisScRJz5_LwwMKTmGmMu4Hpa0WsG0Mret8kZ8lujx4EZLHE4LQhUQ1aBO_xwDyPrZ_TavMDuAF_e2ZDkTahwALIF2cDVOYy58wzpa - iy7rbA5E - jlceLKd5IoKbanw0OHNRBE8Gi1pQ9 - uP - rfg8wf3DU7qHh - C7 - I - IJFDpmlfqNESMHBywNZmuOvcQ0hT6lDGMU0NZD4Y8WFjH9UmKE2apmwv5qyNFFXpyYsG2ne - zdLoe0FirKHDkto7hnX - 3 jewG9eY5V2oIMby7XBmJa2CQFL - Fz1VCiuD0HkkUobMFKzPAIsNpZJlUwfpNq21dJG9WLRzcQ - njX6A_hD621Zg_QGxt3kDZF_r7NpAfwSLz4aHyVjuBucQgbEVwiMtm - qUC5dsGJEv8qioS9dSC3JHuoYi7yde28uPW3RUGgDzD2ZDspMaEI7GQqrW_kqNHq3uTTG_hdx_o8e63dFZ0HXjWT - D09ziZd7_6A2p4NCf2aDNW_Ys8y0PkrVX1VyLHxqpT2j62 - t9y5l - fd3AlRkgAe1WnmJVOUTKATHzYKK4MQKSW5bQ6fMV1Khb_HjVWzk - zpoZGBKNYkPEAGmQQv7Tmr9CZ_gD2aoCDibXCFBXi2k - TftSsnlzKbZkIF2IdSPHWpthXwj6Xf44Qnx1HRCp10MlrZmPI49TlNa2ZzHQUm2TEvFuqwzUMB7qIPWUEGdgSfIUpc00t3Yhx_2BaGbIzCp6Cp4O6BgTymoRSErj_Xg29Y4Xzkyen1nUc2zc0pWSd_h - iK5Jt9FmOupM4LJVSM_b04nIPARZFR7GxhRbzE5YX - EZhy2_yJIsH_Ajl0fPdZ2sDm3zne3OhdcBZ - Ea0BEqpemjOh1a717iX1b2LbLf5wkx2lmlVUhkO09FtwYqw - U26jrElqmfOl6vEDvG - GUJoYTHrSJ_nVFbaqt2eGqU6HGSyS7FQa0LVR5jANJPU2vi78s8y0FF75_CIMYHpjVYyQXkgEGNVmpm5wKBdagk4E9YSeSRey0gETkz1iVigAf80EL - c5nvMUfCvOktgDrjRo . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.26.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.26.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 1775938697 ( 1.7 G ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L001_R2_001 . fastq . gz \u2019 nuclei_900_S1_L001_ 100 %[ ===================> ] 1.65 G 25.4 MB / s in 66 s 2020 - 01 - 16 15 : 53 : 50 ( 25.6 MB / s ) - \u2018 nuclei_900_S1_L001_R2_001 . fastq . gz \u2019 saved [ 1775938697/1775938697 ] -- 2020 - 01 - 16 15 : 53 : 50 -- https : // caltech . box . com / shared / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.25.197 , 107.152.24.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.25.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz [ following ] -- 2020 - 01 - 16 15 : 53 : 50 -- https : // caltech . box . com / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz [ following ] -- 2020 - 01 - 16 15 : 53 : 50 -- https : // caltech . app . box . com / public / static / tlqdm0w3tvy8ogyktsz7ahggwurc6kkj . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.26.199 , 107.152.27.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.26.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! UpSBIsWK59JE_USL_X0zT7AA4IRB7hbcmLNrL0FEo0Dt4ThSyOx7Q8_J2S8riTT6_4D3PABwaLWLqxyQBOh237ZHCJp7bjubDL7 - JUopsW6dWCNgkwBeI5HQT_qya_pK7qd6kVvhP - YC_ssA7aueoRqMkPVnLRR2vEs1373v4ws6GQun7Cv4KhQsy3Y1G9fSL5a7jnoyhVAKY1T_jb - 3 bMlaEe0Lw5lOppJ1XvKLTasEVlmxJYBpsBUkGFMf2ReI5hBU4YCx - UlZiyKNFBs0 - gwb6XjlbrY4VOSlvGwxYwC0AVRmabz3RPM0 - grARJAlf2Nbmc_xSJjWKrlW8e79Ac4tSNG7IHEWX_O5wxLYAOfaLWMsZnnfGXAzE5a5IiYfhA7dq0egt8SBf2e5HraIwhkwO3_ud7hh0To2jcRJ - 0 c4VDk2eus9uYm92NDOSm0gxFSrSVIRpeK59y - V0OcjDDxjbVvHJxhKpEZET0G4q84NudifP8diW5sEKcvU4xTyUxF - oYJwv6HEvlXdtS5AQM - hLK - sjiJtdPU - 8 taL5f - xOkTIxnngzRRhlyDj8dy4eRDEgJlStPEdpUidCinmNsTCKvzqCuUcLoruGNUZawSSUwKqISaYkjNqqT22Tazth - Q2dnDCx4zo9btVH3Th9FZeff3JpsdtVRDkHLC - k8xcqGbAqG8bS7gDo8p3SeBDcCVzWibYqSwBYkGQ7WXs4Rgixwzd8SA2W - 2 A5pjZUnA03EEOMr6fCezBKA6u4VrpeKB_zfnDNwMPJCRouU7bkWPx6JmEczPfF7MR3EQW_HAEqVeM7L5g7YOxBq_TzgQz4kiwKENa97dNXPsFW96G8Wz2EkPzmfAHSvTM154ZNWB2H593eLU9EL1VskNZuUis - RFlsSNhXQkjcbbWJ - e48aKCU8tz67SqEaOs9jI - 5 BgblQp5sYl7KfquV3_VYUMqhB0fFrRW_5S88vHuje21yAl7TskomNDi0IPserkvsRECt7EbqIReDHeskpZY_YayU7I_CXjMXCIZ2UeqXGsI9Uw1kt0A55yGHTlu3nGb0D4lnXtVq9rA8WG483qATUmS23LYXbmbWa7_cJUWQclBC4fh - 2 C4h3oIwfOMrqgFUgwIW7FCScT8i1REUvtG_WaGv - 79 AziBs3R7loL - q1TR_HPMSkEbPT6lZWcXuF - orWadDZg9mcmxvIVNwwI2Kcbx5AnZa6BkuF1NRLyMc6kSC3A4E1ml8UXLmW7Ti_Hoc_WO6pTmnkkZd9ODWXM9D9eiBfbwfLExxgbws8Mt85EVqoV2fbSGTjlOeEsToWuhmhYfDSYeDZw - 5 - tjt1UnNoaD5D5z54CbnXZxX3uvx47Ninx_KnKvFpXN6EbPYo2PXYIO8il09FajIj3tNBXEIQZERszgeSpNGZkmcufJr8jprNP27w .. / download [ following ] -- 2020 - 01 - 16 15 : 53 : 51 -- https : // public . boxcloud . com / d / 1 / b1 ! UpSBIsWK59JE_USL_X0zT7AA4IRB7hbcmLNrL0FEo0Dt4ThSyOx7Q8_J2S8riTT6_4D3PABwaLWLqxyQBOh237ZHCJp7bjubDL7 - JUopsW6dWCNgkwBeI5HQT_qya_pK7qd6kVvhP - YC_ssA7aueoRqMkPVnLRR2vEs1373v4ws6GQun7Cv4KhQsy3Y1G9fSL5a7jnoyhVAKY1T_jb - 3 bMlaEe0Lw5lOppJ1XvKLTasEVlmxJYBpsBUkGFMf2ReI5hBU4YCx - UlZiyKNFBs0 - gwb6XjlbrY4VOSlvGwxYwC0AVRmabz3RPM0 - grARJAlf2Nbmc_xSJjWKrlW8e79Ac4tSNG7IHEWX_O5wxLYAOfaLWMsZnnfGXAzE5a5IiYfhA7dq0egt8SBf2e5HraIwhkwO3_ud7hh0To2jcRJ - 0 c4VDk2eus9uYm92NDOSm0gxFSrSVIRpeK59y - V0OcjDDxjbVvHJxhKpEZET0G4q84NudifP8diW5sEKcvU4xTyUxF - oYJwv6HEvlXdtS5AQM - hLK - sjiJtdPU - 8 taL5f - xOkTIxnngzRRhlyDj8dy4eRDEgJlStPEdpUidCinmNsTCKvzqCuUcLoruGNUZawSSUwKqISaYkjNqqT22Tazth - Q2dnDCx4zo9btVH3Th9FZeff3JpsdtVRDkHLC - k8xcqGbAqG8bS7gDo8p3SeBDcCVzWibYqSwBYkGQ7WXs4Rgixwzd8SA2W - 2 A5pjZUnA03EEOMr6fCezBKA6u4VrpeKB_zfnDNwMPJCRouU7bkWPx6JmEczPfF7MR3EQW_HAEqVeM7L5g7YOxBq_TzgQz4kiwKENa97dNXPsFW96G8Wz2EkPzmfAHSvTM154ZNWB2H593eLU9EL1VskNZuUis - RFlsSNhXQkjcbbWJ - e48aKCU8tz67SqEaOs9jI - 5 BgblQp5sYl7KfquV3_VYUMqhB0fFrRW_5S88vHuje21yAl7TskomNDi0IPserkvsRECt7EbqIReDHeskpZY_YayU7I_CXjMXCIZ2UeqXGsI9Uw1kt0A55yGHTlu3nGb0D4lnXtVq9rA8WG483qATUmS23LYXbmbWa7_cJUWQclBC4fh - 2 C4h3oIwfOMrqgFUgwIW7FCScT8i1REUvtG_WaGv - 79 AziBs3R7loL - q1TR_HPMSkEbPT6lZWcXuF - orWadDZg9mcmxvIVNwwI2Kcbx5AnZa6BkuF1NRLyMc6kSC3A4E1ml8UXLmW7Ti_Hoc_WO6pTmnkkZd9ODWXM9D9eiBfbwfLExxgbws8Mt85EVqoV2fbSGTjlOeEsToWuhmhYfDSYeDZw - 5 - tjt1UnNoaD5D5z54CbnXZxX3uvx47Ninx_KnKvFpXN6EbPYo2PXYIO8il09FajIj3tNBXEIQZERszgeSpNGZkmcufJr8jprNP27w .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.24.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.24.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 630554964 ( 601 M ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L002_R1_001 . fastq . gz \u2019 nuclei_900_S1_L002_ 100 %[ ===================> ] 601.34 M 12.4 MB / s in 47 s 2020 - 01 - 16 15 : 54 : 38 ( 12.8 MB / s ) - \u2018 nuclei_900_S1_L002_R1_001 . fastq . gz \u2019 saved [ 630554964/630554964 ] -- 2020 - 01 - 16 15 : 54 : 39 -- https : // caltech . box . com / shared / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz Resolving caltech . box . com ( caltech . box . com )... 107.152.25.197 , 107.152.24.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.25.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz [ following ] -- 2020 - 01 - 16 15 : 54 : 39 -- https : // caltech . box . com / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz [ following ] -- 2020 - 01 - 16 15 : 54 : 39 -- https : // caltech . app . box . com / public / static / gqrvkqllr9d7zq4e3yfrng9kgfbejowe . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.26.199 , 107.152.27.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.26.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! eSBRhEjnaGBNdIysLMxDJwbEGKBI6iXrGsTMIedrDwgQbgwehejXPFG - E1iLSBUDfYdCUl87Kl6 - 1 c0h5LLPc6_S8Xv1GciJSIP4FQsSFnJI2yk304f87Z69O2sdOlHtOe4KFe5abT0R1reDd8eaXqT0QO8AkjttXlH1Nn4CJ7nlCXZWptCNrOyfmi5cRbLt - dnWHUyv3o1YzCnoYAvvW - lyXcQloP25G80fpfzHDry8e5e4WlDZag9AOrtrmc8t3QLH8875LU3 - AM - VT3Cyyca5LFcZJ42ESv62w6fnQHongPS9Rw - 1 ULp3nytnmQLgWF4E4kxYst7qUYV5Jmfg1UzboCi2ld0nBT4FWhpm8r37k51ZDNYc338UWJizAsjjHtO4e0vrAukWOgOPwyof7_jVx - g6wj0f7BXu3LNFMbbl9c6DkAsTGP9k - dfb9uELb1iLiYQQTSsxw9FXKJoxepRZJVPKnfUV4QOy449S8KJlCqe_gopt0u6V7E7yya9GhPIZtgtkgVLGSGCgaGsSETTy4Ab3hnOIWVhwocPEr_AST5IcC1WI71q22n6gY80eMXa61Pu0bzCI - gIoKGIGrnX8D1SaYfUK5EXcZ2dfhVrU85Dj_FuOK4_QFsFVRzbJfzowewSFOCIKt6kQDxvTcz2gIC5puHg8DJL0thNSY5YonBMHbbuikl7nlr2S2NT24X9ii7i - cMX87abVNpu1gir8D0qtRzrdUNc5 - 1 UMMmXfyrGT5frLxPT0wZZyfvVHSvoIf22EDBMD4_h4hlt_MGXExuPhsroeIaBhMBKnEJkp5mOsFJsKfGh8ZIbAwDu0Q3GPKFdIqY1LWuwL2qOQDqjG2KM2FDk_bh - qNy9xVQ8swIYXMlEB - 9 mC5wXtsOAHJzb9f2q9P3dqn0Jc - vYINs - onNOYwGqHHfGyupQJ3GqAdvVWcuhy - ARGj4XLVied2vhgC8E1YxlQ9jlZMszuwt - 3 _fLKZ_xwlz4VTPLtP7hNYc9OIEKg03yViIiyBFNllviCVHs1ej0Xicmn5S5Z_R8toCOHUkS4hiz560zZbCwZk5BmIqYdne3Im5cOeeDN_FNVxxL9njXlj7FZm7p1q_sKOxw0oUHGp54URZEuFWP6o4HgB - Bo0ZzWyTjgiJWHzww0UJ8uUiphlInz4FLc72k7lx2En04_SHlP2VrXF7nAdkaSQOynlerPO03bPfzmDNE1ZDTq_KIBD9W_9WD36nmOHJKY34kc - SWR7s - g8494ASxsIvubNonM1wEivcUJt3pazsE3IMZNuo2_cfh0DcARwuoCAunGR18wBgSh85XdpUwI5E6WXylPdyphNfNiso2aX3MIk7018KlJJ - vzrDG7U3bArSmgmtUnd1vzVKw0a1a4QHCyeKgJR0FyaP0vAjj5KQNpZAcfd0lVqfdPQOaPa5AY / download [ following ] -- 2020 - 01 - 16 15 : 54 : 40 -- https : // public . boxcloud . com / d / 1 / b1 ! eSBRhEjnaGBNdIysLMxDJwbEGKBI6iXrGsTMIedrDwgQbgwehejXPFG - E1iLSBUDfYdCUl87Kl6 - 1 c0h5LLPc6_S8Xv1GciJSIP4FQsSFnJI2yk304f87Z69O2sdOlHtOe4KFe5abT0R1reDd8eaXqT0QO8AkjttXlH1Nn4CJ7nlCXZWptCNrOyfmi5cRbLt - dnWHUyv3o1YzCnoYAvvW - lyXcQloP25G80fpfzHDry8e5e4WlDZag9AOrtrmc8t3QLH8875LU3 - AM - VT3Cyyca5LFcZJ42ESv62w6fnQHongPS9Rw - 1 ULp3nytnmQLgWF4E4kxYst7qUYV5Jmfg1UzboCi2ld0nBT4FWhpm8r37k51ZDNYc338UWJizAsjjHtO4e0vrAukWOgOPwyof7_jVx - g6wj0f7BXu3LNFMbbl9c6DkAsTGP9k - dfb9uELb1iLiYQQTSsxw9FXKJoxepRZJVPKnfUV4QOy449S8KJlCqe_gopt0u6V7E7yya9GhPIZtgtkgVLGSGCgaGsSETTy4Ab3hnOIWVhwocPEr_AST5IcC1WI71q22n6gY80eMXa61Pu0bzCI - gIoKGIGrnX8D1SaYfUK5EXcZ2dfhVrU85Dj_FuOK4_QFsFVRzbJfzowewSFOCIKt6kQDxvTcz2gIC5puHg8DJL0thNSY5YonBMHbbuikl7nlr2S2NT24X9ii7i - cMX87abVNpu1gir8D0qtRzrdUNc5 - 1 UMMmXfyrGT5frLxPT0wZZyfvVHSvoIf22EDBMD4_h4hlt_MGXExuPhsroeIaBhMBKnEJkp5mOsFJsKfGh8ZIbAwDu0Q3GPKFdIqY1LWuwL2qOQDqjG2KM2FDk_bh - qNy9xVQ8swIYXMlEB - 9 mC5wXtsOAHJzb9f2q9P3dqn0Jc - vYINs - onNOYwGqHHfGyupQJ3GqAdvVWcuhy - ARGj4XLVied2vhgC8E1YxlQ9jlZMszuwt - 3 _fLKZ_xwlz4VTPLtP7hNYc9OIEKg03yViIiyBFNllviCVHs1ej0Xicmn5S5Z_R8toCOHUkS4hiz560zZbCwZk5BmIqYdne3Im5cOeeDN_FNVxxL9njXlj7FZm7p1q_sKOxw0oUHGp54URZEuFWP6o4HgB - Bo0ZzWyTjgiJWHzww0UJ8uUiphlInz4FLc72k7lx2En04_SHlP2VrXF7nAdkaSQOynlerPO03bPfzmDNE1ZDTq_KIBD9W_9WD36nmOHJKY34kc - SWR7s - g8494ASxsIvubNonM1wEivcUJt3pazsE3IMZNuo2_cfh0DcARwuoCAunGR18wBgSh85XdpUwI5E6WXylPdyphNfNiso2aX3MIk7018KlJJ - vzrDG7U3bArSmgmtUnd1vzVKw0a1a4QHCyeKgJR0FyaP0vAjj5KQNpZAcfd0lVqfdPQOaPa5AY / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.24.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.24.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 1784669831 ( 1.7 G ) [ application/octet-stream ] Saving to : \u2018 nuclei_900_S1_L002_R2_001 . fastq . gz \u2019 nuclei_900_S1_L002_ 100 %[ ===================> ] 1.66 G 17.5 MB / s in 95 s 2020 - 01 - 16 15 : 56 : 15 ( 17.9 MB / s ) - \u2018 nuclei_900_S1_L002_R2_001 . fastq . gz \u2019 saved [ 1784669831/1784669831 ] CPU times : user 2.09 s , sys : 407 ms , total : 2.49 s Wall time : 4 min 9 s Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing nuclei_900_S1_L001_R1_001.fastq.gz: OK nuclei_900_S1_L001_R2_001.fastq.gz: OK nuclei_900_S1_L002_R1_001.fastq.gz: OK nuclei_900_S1_L002_R2_001.fastq.gz: OK","title":"Download the data"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#install-kb","text":"Install kb for running the kallisto | bustools workflow. 1 !pip install git+https://github.com/pachterlab/kb_python@count-kite Collecting git + https : // github . com / pachterlab / kb_python @ count - kite Cloning https : // github . com / pachterlab / kb_python ( to revision count - kite ) to / tmp / pip - req - build - 00 ne_j5p Running command git clone - q https : // github . com / pachterlab / kb_python / tmp / pip - req - build - 00 ne_j5p Running command git checkout - b count - kite -- track origin / count - kite Switched to a new branch 'count-kite' Branch 'count-kite' set up to track remote branch 'count-kite' from 'origin' . Collecting anndata >= 0.6 . 22. post1 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 2 b / 72 / 87196 c15f68d9865c31a43a10cf7c50bcbcedd5607d09f9aada0b3963103 / anndata - 0.6 . 22. post1 - py3 - none - any . whl ( 47 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 1.8 MB / s \u001b [ ? 25 hCollecting loompy >= 3.0 . 6 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 36 / 52 / 74 ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9 / loompy - 3.0 . 6. tar . gz ( 41 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5.1 MB / s \u001b [ ? 25 hRequirement already satisfied : requests >= 2.19 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 2.21 . 0 ) Collecting tqdm >= 4.39 . 0 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 72 / c9 / 7 fc20feac72e79032a7c8138fd0d395dc6d8812b5b9edf53c3afd0b31017 / tqdm - 4.41 . 1 - py2 . py3 - none - any . whl ( 56 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 61 kB 3.9 MB / s \u001b [ ? 25 hRequirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 0.25 . 3 ) Requirement already satisfied : numpy ~= 1.14 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.17 . 5 ) Requirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.8 . 0 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 5.5 . 0 ) Requirement already satisfied : scipy ~= 1.0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.4 . 1 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 42.0 . 2 ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.47 . 0 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 7.0 ) Collecting numpy - groupies \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 57 / ae / 18217 b57ba3e4bb8a44ecbfc161ed065f6d1b90c75d404bd6ba8d6f024e2 / numpy_groupies - 0.9 . 10. tar . gz ( 43 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 4.7 MB / s \u001b [ ? 25 hRequirement already satisfied : urllib3 < 1.25 , >= 1.21 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 1.24 . 3 ) Requirement already satisfied : certifi >= 2017.4 . 17 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2019.11 . 28 ) Requirement already satisfied : idna < 2.9 , >= 2.5 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2.8 ) Requirement already satisfied : chardet < 3.1 . 0 , >= 3.0 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 3.0 . 4 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.6 . 1 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2018.9 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.12 . 0 ) Requirement already satisfied : llvmlite >= 0.31 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.31 . 0 ) Building wheels for collected packages : kb - python , loompy , numpy - groupies Building wheel for kb - python ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for kb - python : filename = kb_python - 0.24 . 4 - cp36 - none - any . whl size = 80991434 sha256 = 46 c80d686746b8cc5f5ea19481297c38fcb7c928c8f472d75d4261ce74266483 Stored in directory : / tmp / pip - ephem - wheel - cache - 6 ek0s5dl / wheels / 8 e / 56 / 56 / c89223de74af26792675e82f4bb5223e7cf0d653a33038e34c Building wheel for loompy ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for loompy : filename = loompy - 3.0 . 6 - cp36 - none - any . whl size = 47896 sha256 = 5 aa0e8271e5ecd4bdfc5ad2636af749cb6b32c6dc5789e4cca70337993c1f066 Stored in directory : / root /. cache / pip / wheels / f9 / a4 / 90 / 5 a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9 Building wheel for numpy - groupies ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for numpy - groupies : filename = numpy_groupies - 0 + unknown - cp36 - none - any . whl size = 28044 sha256 = 7 f56b834c065c60c4db18f99a2d651074b23e468028919e5ff9422f774ebc9cf Stored in directory : / root /. cache / pip / wheels / 30 / ac / 83 / 64 d5f9293aeaec63f9539142fc629a41af064cae1b3d8d94aa Successfully built kb - python loompy numpy - groupies Installing collected packages : anndata , numpy - groupies , loompy , tqdm , kb - python Found existing installation : tqdm 4.28 . 1 Uninstalling tqdm - 4.28 . 1 : Successfully uninstalled tqdm - 4.28 . 1 Successfully installed anndata - 0.6 . 22. post1 kb - python - 0.24 . 4 loompy - 3.0 . 6 numpy - groupies - 0 + unknown tqdm - 4.41 . 1","title":"Install kb"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#download-mouse-reference-files-and-build-the-index","text":"We build a mouse cDNA and intron index from the mouse genome and annotations provided by Ensembl. 1 2 3 %%time !wget ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz --2020-01-16 15:56:57-- ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz => \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/mus_musculus/dna ... done. ==> SIZE Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... 805984352 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... done. Length: 805984352 (769M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 768.65M 23.0MB/s in 36s 2020-01-16 15:57:35 (21.1 MB/s) - \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 saved [805984352] --2020-01-16 15:57:36-- ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz => \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/mus_musculus ... done. ==> SIZE Mus_musculus.GRCm38.98.gtf.gz ... 30256597 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.98.gtf.gz ... done. Length: 30256597 (29M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 28.85M 14.0MB/s in 2.1s 2020-01-16 15:57:40 (14.0 MB/s) - \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 saved [30256597] CPU times: user 371 ms, sys: 76.5 ms, total: 447 ms Wall time: 43.2 s Notice we use the -n option to split the index into multiple files. This helps reduce the maximum memory usage so that Google Colab doesn't run out of memory. 1 2 3 4 %%time !kb ref -i index.idx -g t2g.txt -f1 cdna.fa -f2 intron.fa \\ -c1 cdna_t2c.txt -c2 intron_t2c.txt --workflow lamanno -n 8 \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz Mus_musculus.GRCm38.98.gtf.gz [ 2020 - 01 - 16 15 : 57 : 41 , 860 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2020 - 01 - 16 15 : 57 : 41 , 860 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 15 : 58 : 08 , 556 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmptuipvatl [ 2020 - 01 - 16 16 : 05 : 44 , 930 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 16 : 05 : 48 , 839 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmpqc7d85yg [ 2020 - 01 - 16 16 : 06 : 50 , 352 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpzpi_mdzg [ 2020 - 01 - 16 16 : 06 : 50 , 352 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: GL456383.1, GL456367.1, GL456390.1, GL456389.1, GL456379.1, GL456387.1, GL456370.1, GL456394.1, GL456359.1, GL456392.1, GL456378.1, GL456213.1, GL456396.1, JH584300.1, GL456360.1, GL456393.1, JH584301.1, GL456366.1, JH584302.1, GL456382.1, GL456368.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 16 : 07 : 59 , 570 ] INFO Wrote 142446 cDNA transcripts [ 2020 - 01 - 16 16 : 07 : 59 , 575 ] INFO Creating cDNA transcripts - to - capture at / content / tmp / tmpgun332i9 [ 2020 - 01 - 16 16 : 08 : 00 , 603 ] INFO Splitting genome into introns at / content / tmp / tmp4cl5pq5u [ 2020 - 01 - 16 16 : 12 : 49 , 090 ] INFO Wrote 647972 intron sequences [ 2020 - 01 - 16 16 : 12 : 49 , 095 ] INFO Creating intron transcripts - to - capture at / content / tmp / tmpb7kwg4ry [ 2020 - 01 - 16 16 : 13 : 55 , 504 ] INFO Concatenating 1 cDNA FASTAs to cdna . fa [ 2020 - 01 - 16 16 : 14 : 00 , 221 ] INFO Concatenating 1 cDNA transcripts - to - captures to cdna_t2c . txt [ 2020 - 01 - 16 16 : 14 : 00 , 320 ] INFO Concatenating 1 intron FASTAs to intron . fa [ 2020 - 01 - 16 16 : 14 : 50 , 492 ] INFO Concatenating 1 intron transcripts - to - captures to intron_t2c . txt [ 2020 - 01 - 16 16 : 14 : 50 , 803 ] INFO Concatenating cDNA and intron FASTAs to / content / tmp / tmp6ssxsc_j [ 2020 - 01 - 16 16 : 16 : 10 , 955 ] INFO Creating transcript - to - gene mapping at t2g . txt [ 2020 - 01 - 16 16 : 17 : 18 , 925 ] INFO Splitting / content / tmp / tmp6ssxsc_j into 8 parts [ 2020 - 01 - 16 16 : 18 : 13 , 532 ] INFO Indexing / content / tmp / tmpzw65y9wa to index . idx . 0 [ 2020 - 01 - 16 16 : 35 : 27 , 873 ] INFO Indexing / content / tmp / tmp4h1a02ef to index . idx . 1 [ 2020 - 01 - 16 16 : 49 : 46 , 788 ] INFO Indexing / content / tmp / tmptw5rlyf0 to index . idx . 2 [ 2020 - 01 - 16 17 : 04 : 53 , 914 ] INFO Indexing / content / tmp / tmpavi28g7n to index . idx . 3 [ 2020 - 01 - 16 17 : 19 : 13 , 835 ] INFO Indexing / content / tmp / tmpofcnmlri to index . idx . 4 [ 2020 - 01 - 16 17 : 33 : 31 , 933 ] INFO Indexing / content / tmp / tmpq_weqj_3 to index . idx . 5 [ 2020 - 01 - 16 17 : 48 : 06 , 886 ] INFO Indexing / content / tmp / tmpp7xih6mo to index . idx . 6 [ 2020 - 01 - 16 18 : 03 : 09 , 010 ] INFO Indexing / content / tmp / tmpyj0138gw to index . idx . 7 CPU times : user 36 . 7 s , sys : 6 . 37 s , total : 43 . 1 s Wall time : 2 h 20 min 44 s","title":"Download mouse reference files and build the index"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#generate-rna-count-matrices","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively, as well as the transcripts-to-capture lists to the -c1 and -c2 arguments. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . Note the --workflow nucleus to indicate this is a single nucleus experiment. Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 %%time !kb count -i index.idx.0,index.idx.1,index.idx.2,index.idx.3,index.idx.4,index.idx.5,index.idx.6,index.idx.7 \\ -g t2g.txt -c1 cdna_t2c.txt -c2 intron_t2c.txt -x 10xv2 -o output -t 2 --workflow nucleus --h5ad \\ nuclei_900_S1_L001_R1_001.fastq.gz nuclei_900_S1_L001_R2_001.fastq.gz \\ nuclei_900_S1_L002_R1_001.fastq.gz nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:26:55,274] INFO Generating BUS file using 8 indices [2020-01-16 21:26:55,274] INFO Generating BUS file to output/tmp/bus_part0 from [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 21:26:55,274] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:26:55,275] INFO Using index index.idx.0 [2020-01-16 21:38:46,592] INFO Generating BUS file to output/tmp/bus_part1 from [2020-01-16 21:38:46,592] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 21:38:46,592] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 21:38:46,593] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 21:38:46,593] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:38:46,593] INFO Using index index.idx.1 [2020-01-16 21:54:34,715] INFO Generating BUS file to output/tmp/bus_part2 from [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 21:54:34,716] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 21:54:34,716] INFO Using index index.idx.2 [2020-01-16 22:10:18,962] INFO Generating BUS file to output/tmp/bus_part3 from [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:10:18,963] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:10:18,963] INFO Using index index.idx.3 [2020-01-16 22:26:04,028] INFO Generating BUS file to output/tmp/bus_part4 from [2020-01-16 22:26:04,028] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:26:04,029] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:26:04,029] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:26:04,029] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:26:04,029] INFO Using index index.idx.4 [2020-01-16 22:41:47,809] INFO Generating BUS file to output/tmp/bus_part5 from [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:41:47,809] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:41:47,809] INFO Using index index.idx.5 [2020-01-16 22:57:47,130] INFO Generating BUS file to output/tmp/bus_part6 from [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 22:57:47,130] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 22:57:47,130] INFO Using index index.idx.6 [2020-01-16 23:13:46,707] INFO Generating BUS file to output/tmp/bus_part7 from [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L001_R1_001.fastq.gz [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L001_R2_001.fastq.gz [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L002_R1_001.fastq.gz [2020-01-16 23:13:46,708] INFO nuclei_900_S1_L002_R2_001.fastq.gz [2020-01-16 23:13:46,708] INFO Using index index.idx.7 [2020-01-16 23:29:45,121] INFO Merging BUS records to output from [2020-01-16 23:29:45,121] INFO output/tmp/bus_part0 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part1 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part2 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part3 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part4 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part5 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part6 [2020-01-16 23:29:45,121] INFO output/tmp/bus_part7 [2020-01-16 23:33:12,815] INFO Sorting BUS file output/output.bus to output/tmp/output.s.bus [2020-01-16 23:35:04,359] INFO Whitelist not provided [2020-01-16 23:35:04,359] INFO Copying pre-packaged 10XV2 whitelist to output [2020-01-16 23:35:04,517] INFO Inspecting BUS file output/tmp/output.s.bus [2020-01-16 23:36:04,780] INFO Correcting BUS records in output/tmp/output.s.bus to output/tmp/output.s.c.bus with whitelist output/10xv2_whitelist.txt [2020-01-16 23:37:08,241] INFO Sorting BUS file output/tmp/output.s.c.bus to output/output.unfiltered.bus [2020-01-16 23:38:44,109] INFO Capturing records from BUS file output/output.unfiltered.bus to output/tmp/spliced.bus with capture list intron_t2c.txt [2020-01-16 23:40:15,469] INFO Sorting BUS file output/tmp/spliced.bus to output/spliced.unfiltered.bus [2020-01-16 23:40:31,065] INFO Generating count matrix output/counts_unfiltered/spliced from BUS file output/spliced.unfiltered.bus [2020-01-16 23:41:40,242] INFO Capturing records from BUS file output/output.unfiltered.bus to output/tmp/unspliced.bus with capture list cdna_t2c.txt [2020-01-16 23:43:55,755] INFO Sorting BUS file output/tmp/unspliced.bus to output/unspliced.unfiltered.bus [2020-01-16 23:44:28,286] INFO Generating count matrix output/counts_unfiltered/unspliced from BUS file output/unspliced.unfiltered.bus [2020-01-16 23:45:40,436] INFO Reading matrix output/counts_unfiltered/spliced.mtx [2020-01-16 23:45:51,189] INFO Reading matrix output/counts_unfiltered/unspliced.mtx [2020-01-16 23:45:57,929] INFO Combining matrices [2020-01-16 23:45:58,596] INFO Writing matrices to h5ad output/counts_unfiltered/adata.h5ad CPU times: user 38.4 s, sys: 5.08 s, total: 43.5 s Wall time: 2h 19min 8s","title":"Generate RNA count matrices"},{"location":"tutorials/kb_nucleus/python/kb_single_nucleus.html#load-the-anndata-into-python","text":"kb automatically sums the counts of genes for barcodes common to both spliced and unspliced matrices as an Anndata object in H5AD format (because --h5ad was used). 1 import anndata 1 adata = anndata.read('output/counts_unfiltered/adata.h5ad') 1 adata AnnData object with n_obs \u00d7 n_vars = 175538 \u00d7 55421 1 adata.obs .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } index AAACCTGAGAAAGTGG AAACCTGAGAAGCCCA AAACCTGAGAATTCCC AAACCTGAGACACGAC AAACCTGAGACCCACC ... TTTGTCATCTTACCGC TTTGTCATCTTAGCCC TTTGTCATCTTCAACT TTTGTCATCTTGAGGT TTTGTCATCTTTAGTC 175538 rows \u00d7 0 columns 1 adata.var .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } index ENSMUSG00000026535.9 ENSMUSG00000026315.13 ENSMUSG00000000817.10 ENSMUSG00000063558.4 ENSMUSG00000001138.13 ... ENSMUSG00000118447.1 ENSMUSG00000118422.1 ENSMUSG00000118472.1 ENSMUSG00000118404.1 ENSMUSG00000118417.1 55421 rows \u00d7 0 columns 1","title":"Load the anndata into python"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html","text":"Setup \u00b6 This is the Google colab version of the Monocle 2 notebook on the kallisto | bustools R notebook website . This version follows the static version closely, but uses the 10xv3 1k E18 mouse neuron dataset to reduce download time and runtime for interactive use here. Google colab gives each notebook a fresh Ubuntu machine with R and some common packages pre-installed. Here we install the packages used in the downstream analysis that are not pre-installed. This takes a while, as some of the packages have several dependencies that have C++ code; it seems that most of time spent installing these packages is spent on compiling C++ code. Package installation might not have taken this long in your experience, since you most likely already have many of the common dependencies installed on your computer, which is not the case here. 1 2 install.packages ( \"BiocManager\" ) BiocManager :: install ( c ( \"DropletUtils\" , \"monocle\" , \"SingleR\" , \"BUSpaRse\" , \"scater\" , \"scran\" )) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) Bioconductor version 3.10 ( BiocManager 1.30 . 10 ), R 3.6 . 2 ( 2019 - 12 - 12 ) Installing package ( s ) 'BiocVersion' , 'DropletUtils' , 'monocle' , 'SingleR' , 'BUSpaRse' also installing the dependencies \u2018 formatR \u2019 , \u2018 bit \u2019 , \u2018 vctrs \u2019 , \u2018 lambda . r \u2019 , \u2018 futile . options \u2019 , \u2018 bitops \u2019 , \u2018 interactiveDisplayBase \u2019 , \u2018 bit64 \u2019 , \u2018 blob \u2019 , \u2018 DBI \u2019 , \u2018 zlibbioc \u2019 , \u2018 Rhtslib \u2019 , \u2018 futile . logger \u2019 , \u2018 snow \u2019 , \u2018 locfit \u2019 , \u2018 IRanges \u2019 , \u2018 R . oo \u2019 , \u2018 R . methodsS3 \u2019 , \u2018 sitmo \u2019 , \u2018 RcppEigen \u2019 , \u2018 FNN \u2019 , \u2018 ggrepel \u2019 , \u2018 gridExtra \u2019 , \u2018 sparsesvd \u2019 , \u2018 docopt \u2019 , \u2018 graph \u2019 , \u2018 RBGL \u2019 , \u2018 XML \u2019 , \u2018 RCurl \u2019 , \u2018 RUnit \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 RcppHNSW \u2019 , \u2018 AnnotationHub \u2019 , \u2018 BiocFileCache \u2019 , \u2018 rappdirs \u2019 , \u2018 RSQLite \u2019 , \u2018 XVector \u2019 , \u2018 rtracklayer \u2019 , \u2018 Rsamtools \u2019 , \u2018 ProtGenerics \u2019 , \u2018 GenomeInfoDbData \u2019 , \u2018 GenomicAlignments \u2019 , \u2018 SingleCellExperiment \u2019 , \u2018 S4Vectors \u2019 , \u2018 BiocParallel \u2019 , \u2018 edgeR \u2019 , \u2018 rhdf5 \u2019 , \u2018 HDF5Array \u2019 , \u2018 R . utils \u2019 , \u2018 dqrng \u2019 , \u2018 beachmat \u2019 , \u2018 Rhdf5lib \u2019 , \u2018 Biobase \u2019 , \u2018 VGAM \u2019 , \u2018 DDRTree \u2019 , \u2018 igraph \u2019 , \u2018 BiocGenerics \u2019 , \u2018 HSMMSingleCell \u2019 , \u2018 combinat \u2019 , \u2018 fastICA \u2019 , \u2018 irlba \u2019 , \u2018 matrixStats \u2019 , \u2018 densityClust \u2019 , \u2018 Rtsne \u2019 , \u2018 limma \u2019 , \u2018 qlcMatrix \u2019 , \u2018 pheatmap \u2019 , \u2018 proxy \u2019 , \u2018 slam \u2019 , \u2018 viridis \u2019 , \u2018 biocViews \u2019 , \u2018 RANN \u2019 , \u2018 SummarizedExperiment \u2019 , \u2018 DelayedArray \u2019 , \u2018 DelayedMatrixStats \u2019 , \u2018 BiocNeighbors \u2019 , \u2018 ExperimentHub \u2019 , \u2018 AnnotationDbi \u2019 , \u2018 AnnotationFilter \u2019 , \u2018 biomaRt \u2019 , \u2018 Biostrings \u2019 , \u2018 BSgenome \u2019 , \u2018 data . table \u2019 , \u2018 ensembldb \u2019 , \u2018 GenomeInfoDb \u2019 , \u2018 GenomicFeatures \u2019 , \u2018 GenomicRanges \u2019 , \u2018 plyranges \u2019 , \u2018 RcppParallel \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 RcppProgress \u2019 Old packages : 'BH' , 'broom' , 'callr' , 'cli' , 'curl' , 'DBI' , 'DT' , 'fansi' , 'farver' , 'gh' , 'hms' , 'knitr' , 'mime' , 'pillar' , 'prettyunits' , 'rlang' , 'rmarkdown' , 'rprojroot' , 'stringi' , 'tidyr' , 'tinytex' , 'vctrs' , 'xfun' , 'xtable' , 'boot' , 'foreign' , 'MASS' 1 2 3 system ( \"wget https://github.com/pachterlab/kallisto/releases/download/v0.46.1/kallisto_linux-v0.46.1.tar.gz\" ) untar ( \"kallisto_linux-v0.46.1.tar.gz\" ) system ( \"cp kallisto/kallisto /usr/local/bin\" ) To get from fastq files to the gene count matrix, we will use the kb wrapper of kallisto and bustools here, which condenses several commands directly calling kallisto and bustools into 2. See the static version of this notebook for instructions of calling kallisto and bustools directly. 1 system ( \"pip3 install kb-python\" ) 1 2 3 4 5 6 7 8 library ( BUSpaRse ) library ( DropletUtils ) library ( scater ) library ( monocle ) library ( SingleR ) library ( Matrix ) library ( tidyverse ) theme_set ( theme_bw ()) Loading required package : SingleCellExperiment Loading required package : SummarizedExperiment Loading required package : GenomicRanges Loading required package : stats4 Loading required package : BiocGenerics Loading required package : parallel Attaching package : 'BiocGenerics' The following objects are masked from 'package:parallel' : clusterApply , clusterApplyLB , clusterCall , clusterEvalQ , clusterExport , clusterMap , parApply , parCapply , parLapply , parLapplyLB , parRapply , parSapply , parSapplyLB The following objects are masked from 'package:stats' : IQR , mad , sd , var , xtabs The following objects are masked from 'package:base' : anyDuplicated , append , as . data . frame , basename , cbind , colnames , dirname , do . call , duplicated , eval , evalq , Filter , Find , get , grep , grepl , intersect , is . unsorted , lapply , Map , mapply , match , mget , order , paste , pmax , pmax . int , pmin , pmin . int , Position , rank , rbind , Reduce , rownames , sapply , setdiff , sort , table , tapply , union , unique , unsplit , which , which . max , which . min Loading required package : S4Vectors Attaching package : 'S4Vectors' The following object is masked from 'package:base' : expand . grid Loading required package : IRanges Loading required package : GenomeInfoDb Loading required package : Biobase Welcome to Bioconductor Vignettes contain introductory material ; view with 'browseVignettes()' . To cite Bioconductor , see 'citation(\"Biobase\")' , and for packages 'citation(\"pkgname\")' . Loading required package : DelayedArray Loading required package : matrixStats Attaching package : 'matrixStats' The following objects are masked from 'package:Biobase' : anyMissing , rowMedians Loading required package : BiocParallel Attaching package : 'DelayedArray' The following objects are masked from 'package:matrixStats' : colMaxs , colMins , colRanges , rowMaxs , rowMins , rowRanges The following objects are masked from 'package:base' : aperm , apply , rowsum Loading required package : ggplot2 Loading required package : Matrix Attaching package : 'Matrix' The following object is masked from 'package:S4Vectors' : expand Loading required package : VGAM Loading required package : splines Loading required package : DDRTree Loading required package : irlba \u2500\u2500 \u001b [ 1 mAttaching packages \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3 . 0 \u2500\u2500 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtibble \u001b [ 39 m 2.1 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m 0.8 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m 1.0 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mstringr \u001b [ 39 m 1.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mreadr \u001b [ 39 m 1.3 . 1 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mforcats \u001b [ 39 m 0.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m 0.3 . 3 \u2500\u2500 \u001b [ 1 mConflicts \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts () \u2500\u2500 \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcollapse () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: collapse () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcombine () \u001b [ 39 m masks \u001b [ 34 mBiobase \u001b [ 39 m :: combine (), \u001b [ 34 mBiocGenerics \u001b [ 39 m :: combine () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcount () \u001b [ 39 m masks \u001b [ 34 mmatrixStats \u001b [ 39 m :: count () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mdesc () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: desc () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mexpand () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: expand (), \u001b [ 34 mS4Vectors \u001b [ 39 m :: expand () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mfill () \u001b [ 39 m masks \u001b [ 34 mVGAM \u001b [ 39 m :: fill () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfilter () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: filter () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfirst () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: first () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mlag () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: lag () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: pack () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mggplot2 \u001b [ 39 m :: \u001b [ 32 mPosition () \u001b [ 39 m masks \u001b [ 34 mBiocGenerics \u001b [ 39 m :: Position (), \u001b [ 34 mbase \u001b [ 39 m :: Position () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m :: \u001b [ 32 mreduce () \u001b [ 39 m masks \u001b [ 34 mGenomicRanges \u001b [ 39 m :: reduce (), \u001b [ 34 mIRanges \u001b [ 39 m :: reduce () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mrename () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: rename () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m :: \u001b [ 32 msimplify () \u001b [ 39 m masks \u001b [ 34 mDelayedArray \u001b [ 39 m :: simplify () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mslice () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: slice () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 munpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: unpack () Download data \u00b6 1 2 3 4 5 6 # Download data if ( ! dir.exists ( \"./data\" )) dir.create ( \"./data\" ) if ( ! file.exists ( \"./data/neuron_1k_v3_fastqs.tar\" )) { download.file ( \"http://cf.10xgenomics.com/samples/cell-exp/3.0.0/neuron_1k_v3/neuron_1k_v3_fastqs.tar\" , \"./data/neuron_1k_v3_fastqs.tar\" , method = \"wget\" , quiet = TRUE ) } 1 untar ( \"./data/neuron_1k_v3_fastqs.tar\" , exdir = \"./data\" ) Generate the gene count matrix \u00b6 Build the kallisto index \u00b6 Here we use kallisto to pseudoalign the reads to the transcriptome and then to create the bus file to be converted to a sparse matrix. The first step is to build an index of the mouse transcriptome. The transcriptome downloaded here is Ensembl version 99, the most recent version as of writing. 1 2 3 4 5 6 # Mouse transcriptome if ( ! dir.exists ( \"./reference\" )) dir.create ( \"./reference\" ) if ( ! file.exists ( \"./reference/mm_cdna99.fa.gz\" )) { download.file ( \"ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz\" , \"./reference/mm_cdna99.fa.gz\" , method = \"wget\" , quiet = TRUE ) } 1 system ( \"kallisto index -i ./reference/mm_tr_index99.idx ./reference/mm_cdna99.fa.gz\" , intern = TRUE ) Map transcripts to genes \u00b6 For the sparse matrix, most people are interested in how many UMIs per gene per cell, we here we will quantify this from the bus output, and to do so, we need to find which gene corresponds to each transcript. Remember in the output of kallisto bus , there's the file transcripts.txt . Those are the transcripts in the transcriptome index. Remember that we downloaded transcriptome FASTA file from Ensembl just now. In FASTA files, each entry is a sequence with a name. In Ensembl FASTA files, the sequence name has genome annotation of the corresponding sequence, so we can extract transcript IDs and corresponding gene IDs and gene names from there. 1 tr2g <- tr2g_fasta ( \"./reference/mm_cdna99.fa.gz\" ) Reading FASTA file. 1 head ( tr2g ) A tibble: 6 \u00d7 3 transcript gene gene_name <chr> <chr> <chr> ENSMUST00000177564.1 ENSMUSG00000096176.1 Trdd2 ENSMUST00000196221.1 ENSMUSG00000096749.2 Trdd1 ENSMUST00000179664.1 ENSMUSG00000096749.2 Trdd1 ENSMUST00000178537.1 ENSMUSG00000095668.1 Trbd1 ENSMUST00000178862.1 ENSMUSG00000094569.1 Trbd2 ENSMUST00000179520.1 ENSMUSG00000094028.1 Ighd4-1 bustools requires tr2g to be written into a tab delimited file of a specific format: No headers, first column is transcript ID, and second column is the corresponding gene ID. Transcript IDs must be in the same order as in the kallisto index. 1 2 # Write tr2g to format required by bustools save_tr2g_bustools ( tr2g , file_save = \"./reference/tr2g_mm99.tsv\" ) Using the kb wrapper \u00b6 With kallisto and bustools , it takes several commands to go from fastq files to the spliced and unspliced matrices, which is quite cumbersome. So a wrapper called kb was written to condense those steps to one. The command line tool kb can be installed with Then we can use the following command to generate the spliced and unspliced matrices: 1 system ( \"chmod -R 777 data/\" ) 1 2 3 fn <- list.files ( \"data/neuron_1k_v3_fastqs\" , full.names = TRUE ) fn <- fn [ str_detect ( fn , \"R\\\\d_\" )] fn 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L001_R1_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L001_R2_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L002_R1_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L002_R2_001.fastq.gz' 1 2 system ( paste ( \"kb count -i reference/mm_tr_index99.idx -g reference/tr2g_mm99.tsv -x 10xv3 -o output\" , paste ( fn , collapse = \" \" )), intern = TRUE ) Preprocessing \u00b6 Now we can load the matrix into R for analysis. 1 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" , tcc = FALSE ) Remove empty droplets \u00b6 1 dim ( res_mat ) 36711 399524 The number of genes seems reasonable. The number of barcodes is way larger than the expected ~10k. 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 40.47 5.00 154216.00 The vast majority of \"cells\" have only no or just a few UMI detected. Those are empty droplets. 10x claims to have cell capture rate of up to 65%, but in practice, depending on how many cells are in fact loaded, the rate can be much lower. A commonly used method to estimate the number of empty droplets is barcode ranking knee and inflection points, as those are often assumed to represent transition between two components of a distribution. While more sophisticated methods exist (e.g. see emptyDrops in DropletUtils ), for simplicity, we will use the barcode ranking method here. However, whichever way we go, we don't have the ground truth. 1 2 # Compute barcode rank bc_rank <- barcodeRanks ( res_mat , lower = 1000 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( rank , total )) + geom_line () + geom_hline ( aes ( yintercept = inflection ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = rank_cutoff ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Rank\" , y = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) 1 2 3 4 # Filter the matrix res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) 20198 1210 1 rownames ( res_mat ) <- str_remove ( rownames ( res_mat ), \"\\\\.\\\\d+\" ) Now the number of cells is closer to expectation. Cell type inference \u00b6 Monocle 2 only infers one trajectory for the entire dataset, so non-neuronal cells like endothelial cells and erythrocytes may be mistaken as highly differentiated cells from the neuronal lineage. So we will remove cell types not of the neural or glial lineages. Cell types are also helpful to orient the trajectory; neuronal progenitor cells must come before neurons. Here cell type inference is done programatically with SingleR , which compares gene expression profiles of individual cells to bulk RNA-seq data of purified known cell types. 1 2 3 mouse.rnaseq <- MouseRNAseqData ( ensembl = TRUE ) sce <- SingleCellExperiment ( assays = list ( counts = res_mat )) sce <- logNormCounts ( sce ) Then SingleR will assign each cell a label based on Spearman correlation with known cell types from bulk RNA-seq. These are meanings of the acronyms: OPCs: Oligodendrocyte progenitor cells NPCs: Neural progenitor cells aNSCs: Active neural stem cells qNSCs: Quiescent neural stem cells 1 2 annots <- SingleR ( sce , ref = mouse.rnaseq , labels = colData ( mouse.rnaseq ) $ label.fine , de.method = \"wilcox\" , method = \"single\" , BPPARAM = MulticoreParam ( 4 )) 1 annots DataFrame with 1210 rows and 5 columns scores < matrix > AAACGCTGTAATGTGA 0.0601901483760862 : 0.242986808015721 : 0.177660752587073 :... AAACGCTGTCCTGGGT 0.11153546550616 : 0.321858508786419 : 0.206383027494298 :... AAAGAACCAGGACATG 0.0585569289411892 : 0.225038532259566 : 0.177381655702582 :... AAAGGTACACACGGTC 0.137923692580242 : 0.3506611435018 : 0.281933499704427 :... AAAGGTATCACCATAG - 0.00511350381259525 : 0.166880227412372 : 0.0975899954539976 :... ... ... TTTGACTTCGTTCAGA 0.100933655338997 : 0.327948884202836 : 0.262011719832591 :... TTTGATCTCCATAGGT 0.0656536744266451 : 0.280702755051776 : 0.23375860874247 :... TTTGGAGAGGCTAACG 0.0681422805975054 : 0.234772340818692 : 0.176292333613646 :... TTTGGTTAGTAATCCC 0.125780004617712 : 0.315213344287222 : 0.258722018820061 :... TTTGTTGGTATGGAAT 0.0512710432754663 : 0.231028330364938 : 0.177598025280379 :... first . labels tuning . scores labels < character > < DataFrame > < character > AAACGCTGTAATGTGA aNSCs 0.233804530306167 : 0.219682141602258 aNSCs AAACGCTGTCCTGGGT NPCs 1 : 1 aNSCs AAAGAACCAGGACATG Neurons 1 : 1 aNSCs AAAGGTACACACGGTC NPCs 1 : 1 aNSCs AAAGGTATCACCATAG NPCs 0.5 : 0.5 aNSCs ... ... ... ... TTTGACTTCGTTCAGA Neurons 1 : 1 aNSCs TTTGATCTCCATAGGT Neurons 0.5 : 0.5 aNSCs TTTGGAGAGGCTAACG aNSCs 0.209611614011623 : 0.0580258853185659 Neurons TTTGGTTAGTAATCCC Neurons 0.187703782257732 :- 0.195976600339204 Neurons TTTGTTGGTATGGAAT OPCs 0.299839391397521 :- 0.199361864824359 Neurons pruned . labels < character > AAACGCTGTAATGTGA aNSCs AAACGCTGTCCTGGGT aNSCs AAAGAACCAGGACATG aNSCs AAAGGTACACACGGTC aNSCs AAAGGTATCACCATAG aNSCs ... ... TTTGACTTCGTTCAGA aNSCs TTTGATCTCCATAGGT aNSCs TTTGGAGAGGCTAACG Neurons TTTGGTTAGTAATCCC Neurons TTTGTTGGTATGGAAT Neurons 1 2 3 4 5 6 inds <- annots $ pruned.labels %in% c ( \"NPCs\" , \"Neurons\" , \"OPCs\" , \"Oligodendrocytes\" , \"qNSCs\" , \"aNSCs\" , \"Astrocytes\" , \"Ependymal\" ) # Only keep these cell types cells_use <- row.names ( annots )[ inds ] sce <- sce [, cells_use ] sce $ cell_type <- annots $ pruned.labels [ inds ] QC \u00b6 1 df <- perCellQCMetrics ( sce ) 1 colData ( sce ) <- cbind ( colData ( sce ), df ) 1 colData ( sce ) DataFrame with 1146 rows and 8 columns cell_type sum detected percent_top_50 <character> <numeric> <integer> <numeric> AAACGCTGTAATGTGA aNSCs 7072 3256 19.0328054298643 AAACGCTGTCCTGGGT aNSCs 9458 4101 12.8991330090928 AAAGAACCAGGACATG aNSCs 5338 2577 20.7006369426752 AAAGGTACACACGGTC aNSCs 16892 5111 18.2098034572579 AAAGGTATCACCATAG aNSCs 1397 882 24.9105225483178 ... ... ... ... ... TTTGACTTCGTTCAGA aNSCs 26203 6091 21.4021295271534 TTTGATCTCCATAGGT aNSCs 8120 3625 16.7980295566502 TTTGGAGAGGCTAACG Neurons 5483 2737 21.8675907349991 TTTGGTTAGTAATCCC Neurons 24381 5927 20.2288667404946 TTTGTTGGTATGGAAT Neurons 3718 2324 14.6046261430877 percent_top_100 percent_top_200 percent_top_500 total <numeric> <numeric> <numeric> <numeric> AAACGCTGTAATGTGA 25.8484162895928 34.1911764705882 49.335407239819 7072 AAACGCTGTCCTGGGT 19.221822795517 27.6485514908014 42.5882850496934 9458 AAAGAACCAGGACATG 27.5196702884976 36.2495316597977 52.6227051330086 5338 AAAGGTACACACGGTC 26.5095903386218 35.6973715368222 49.5204830689084 16892 AAAGGTATCACCATAG 35.5762347888332 49.8926270579814 72.655690765927 1397 ... ... ... ... ... TTTGACTTCGTTCAGA 28.4814715872228 37.358317749876 50.7422814181582 26203 TTTGATCTCCATAGGT 23.5098522167488 32.0320197044335 47.2044334975369 8120 TTTGGAGAGGCTAACG 28.269195695787 36.6405252598942 52.0335582710195 5483 TTTGGTTAGTAATCCC 27.7183052376851 36.2659447930766 49.9733398958205 24381 TTTGTTGGTATGGAAT 20.6293706293706 29.4513179128564 46.9338353953739 3718 1 plotColData ( sce , x = \"cell_type\" , y = \"sum\" ) 1 plotColData ( sce , x = \"cell_type\" , y = \"detected\" ) 1 2 3 4 plotColData ( sce , x = \"sum\" , y = \"detected\" , colour_by = \"cell_type\" ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () Monocle 2 \u00b6 1 2 3 4 5 6 7 8 9 10 # Construct CellDataSet object pd <- data.frame ( cell_id = cells_use , cell_type = annots $ pruned.labels [ inds ], row.names = cells_use ) pd <- new ( \"AnnotatedDataFrame\" , data = pd ) fd <- data.frame ( gene_id = rownames ( sce ), gene_short_name = tr2g $ gene_name [ match ( rownames ( sce ), tr2g $ gene )], row.names = row.names ( sce )) fd <- new ( \"AnnotatedDataFrame\" , data = fd ) cds <- newCellDataSet ( counts ( sce ), phenoData = pd , featureData = fd ) Size factor and dispersion will be used to normalize data and select genes for clustering. 1 2 cds <- estimateSizeFactors ( cds ) cds <- estimateDispersions ( cds ) Removing 16 outliers Genes that aren't highly expressed enough will not be used for clustering, since they may not give meaningful signal and would only add noise. 1 2 3 disp_table <- dispersionTable ( cds ) clustering_genes <- subset ( disp_table , mean_expression >= 0.1 ) cds <- setOrderingFilter ( cds , clustering_genes $ gene_id ) 1 2 cds <- reduceDimension ( cds , num_dim = 40 , reduction_method = 'tSNE' ) cds <- clusterCells ( cds , method = \"louvain\" ) 1 2 3 plot_cell_clusters ( cds ) + theme ( legend.position = \"none\" ) + labs ( x = \"tSNE1\" , y = \"tSNE2\" ) See where the annotated cell types are 1 2 3 4 5 plot_cell_clusters ( cds , color_by = \"cell_type\" ) + scale_color_brewer ( name = \"cell type\" , type = \"qual\" , palette = \"Set2\" ) + labs ( x = \"tSNE1\" , y = \"tSNE2\" ) + theme ( legend.position = \"right\" ) + guides ( color = guide_legend ( override.aes = list ( size = 3 ))) Genes likely to be informative of ordering of cells along the pseudotime trajectory will be selected for pseudotime inference. 1 2 3 4 5 diff_genes <- differentialGeneTest ( cds , fullModelFormulaStr = \"~ Cluster + cell_type\" , cores = 4 ) # Use top 3000 differentially expressed genes ordering_genes <- row.names ( subset ( diff_genes , qval < 1e-3 ))[ order ( diff_genes $ qval )][ 1 : 3000 ] cds <- setOrderingFilter ( cds , ordering_genes ) Here Monocle 2 will first project the data to 2 dimensions with DDRTree , and then do trajectory inference ( orderCells ). 1 2 cds <- reduceDimension ( cds , max_components = 2 , method = 'DDRTree' ) cds <- orderCells ( cds ) See what the trajectory looks like. This projection is DDRTree . 1 2 plot_cell_trajectory ( cds , color_by = \"cell_type\" , cell_size = 1 ) + scale_color_brewer ( name = \"cell type\" , type = \"qual\" , palette = \"Set2\" ) In the kallisto | bustools paper , I used slingshot for pseudotime analysis (Supplementary Figure 6.5) of this dataset, and found two neuronal end points. The result from Monocle 2 here also shows two main branches. Also, as expected, the stem cells are at the very beginning of the trajectory. 1 2 plot_cell_trajectory ( cds , color_by = \"Pseudotime\" , cell_size = 1 ) + scale_color_viridis_c () The pseudotime values are inverted. 1 2 3 cds <- orderCells ( cds , reverse = TRUE ) plot_cell_trajectory ( cds , color_by = \"Pseudotime\" , cell_size = 1 ) + scale_color_viridis_c () Monocle 2 can also be used to find genes differentially expressed along the pseudotime trajectory and clusters of such genes. See David Tang's excellent Monocle 2 tutorial for how to use these functionalities.","title":"R"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#setup","text":"This is the Google colab version of the Monocle 2 notebook on the kallisto | bustools R notebook website . This version follows the static version closely, but uses the 10xv3 1k E18 mouse neuron dataset to reduce download time and runtime for interactive use here. Google colab gives each notebook a fresh Ubuntu machine with R and some common packages pre-installed. Here we install the packages used in the downstream analysis that are not pre-installed. This takes a while, as some of the packages have several dependencies that have C++ code; it seems that most of time spent installing these packages is spent on compiling C++ code. Package installation might not have taken this long in your experience, since you most likely already have many of the common dependencies installed on your computer, which is not the case here. 1 2 install.packages ( \"BiocManager\" ) BiocManager :: install ( c ( \"DropletUtils\" , \"monocle\" , \"SingleR\" , \"BUSpaRse\" , \"scater\" , \"scran\" )) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) Bioconductor version 3.10 ( BiocManager 1.30 . 10 ), R 3.6 . 2 ( 2019 - 12 - 12 ) Installing package ( s ) 'BiocVersion' , 'DropletUtils' , 'monocle' , 'SingleR' , 'BUSpaRse' also installing the dependencies \u2018 formatR \u2019 , \u2018 bit \u2019 , \u2018 vctrs \u2019 , \u2018 lambda . r \u2019 , \u2018 futile . options \u2019 , \u2018 bitops \u2019 , \u2018 interactiveDisplayBase \u2019 , \u2018 bit64 \u2019 , \u2018 blob \u2019 , \u2018 DBI \u2019 , \u2018 zlibbioc \u2019 , \u2018 Rhtslib \u2019 , \u2018 futile . logger \u2019 , \u2018 snow \u2019 , \u2018 locfit \u2019 , \u2018 IRanges \u2019 , \u2018 R . oo \u2019 , \u2018 R . methodsS3 \u2019 , \u2018 sitmo \u2019 , \u2018 RcppEigen \u2019 , \u2018 FNN \u2019 , \u2018 ggrepel \u2019 , \u2018 gridExtra \u2019 , \u2018 sparsesvd \u2019 , \u2018 docopt \u2019 , \u2018 graph \u2019 , \u2018 RBGL \u2019 , \u2018 XML \u2019 , \u2018 RCurl \u2019 , \u2018 RUnit \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 RcppHNSW \u2019 , \u2018 AnnotationHub \u2019 , \u2018 BiocFileCache \u2019 , \u2018 rappdirs \u2019 , \u2018 RSQLite \u2019 , \u2018 XVector \u2019 , \u2018 rtracklayer \u2019 , \u2018 Rsamtools \u2019 , \u2018 ProtGenerics \u2019 , \u2018 GenomeInfoDbData \u2019 , \u2018 GenomicAlignments \u2019 , \u2018 SingleCellExperiment \u2019 , \u2018 S4Vectors \u2019 , \u2018 BiocParallel \u2019 , \u2018 edgeR \u2019 , \u2018 rhdf5 \u2019 , \u2018 HDF5Array \u2019 , \u2018 R . utils \u2019 , \u2018 dqrng \u2019 , \u2018 beachmat \u2019 , \u2018 Rhdf5lib \u2019 , \u2018 Biobase \u2019 , \u2018 VGAM \u2019 , \u2018 DDRTree \u2019 , \u2018 igraph \u2019 , \u2018 BiocGenerics \u2019 , \u2018 HSMMSingleCell \u2019 , \u2018 combinat \u2019 , \u2018 fastICA \u2019 , \u2018 irlba \u2019 , \u2018 matrixStats \u2019 , \u2018 densityClust \u2019 , \u2018 Rtsne \u2019 , \u2018 limma \u2019 , \u2018 qlcMatrix \u2019 , \u2018 pheatmap \u2019 , \u2018 proxy \u2019 , \u2018 slam \u2019 , \u2018 viridis \u2019 , \u2018 biocViews \u2019 , \u2018 RANN \u2019 , \u2018 SummarizedExperiment \u2019 , \u2018 DelayedArray \u2019 , \u2018 DelayedMatrixStats \u2019 , \u2018 BiocNeighbors \u2019 , \u2018 ExperimentHub \u2019 , \u2018 AnnotationDbi \u2019 , \u2018 AnnotationFilter \u2019 , \u2018 biomaRt \u2019 , \u2018 Biostrings \u2019 , \u2018 BSgenome \u2019 , \u2018 data . table \u2019 , \u2018 ensembldb \u2019 , \u2018 GenomeInfoDb \u2019 , \u2018 GenomicFeatures \u2019 , \u2018 GenomicRanges \u2019 , \u2018 plyranges \u2019 , \u2018 RcppParallel \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 RcppProgress \u2019 Old packages : 'BH' , 'broom' , 'callr' , 'cli' , 'curl' , 'DBI' , 'DT' , 'fansi' , 'farver' , 'gh' , 'hms' , 'knitr' , 'mime' , 'pillar' , 'prettyunits' , 'rlang' , 'rmarkdown' , 'rprojroot' , 'stringi' , 'tidyr' , 'tinytex' , 'vctrs' , 'xfun' , 'xtable' , 'boot' , 'foreign' , 'MASS' 1 2 3 system ( \"wget https://github.com/pachterlab/kallisto/releases/download/v0.46.1/kallisto_linux-v0.46.1.tar.gz\" ) untar ( \"kallisto_linux-v0.46.1.tar.gz\" ) system ( \"cp kallisto/kallisto /usr/local/bin\" ) To get from fastq files to the gene count matrix, we will use the kb wrapper of kallisto and bustools here, which condenses several commands directly calling kallisto and bustools into 2. See the static version of this notebook for instructions of calling kallisto and bustools directly. 1 system ( \"pip3 install kb-python\" ) 1 2 3 4 5 6 7 8 library ( BUSpaRse ) library ( DropletUtils ) library ( scater ) library ( monocle ) library ( SingleR ) library ( Matrix ) library ( tidyverse ) theme_set ( theme_bw ()) Loading required package : SingleCellExperiment Loading required package : SummarizedExperiment Loading required package : GenomicRanges Loading required package : stats4 Loading required package : BiocGenerics Loading required package : parallel Attaching package : 'BiocGenerics' The following objects are masked from 'package:parallel' : clusterApply , clusterApplyLB , clusterCall , clusterEvalQ , clusterExport , clusterMap , parApply , parCapply , parLapply , parLapplyLB , parRapply , parSapply , parSapplyLB The following objects are masked from 'package:stats' : IQR , mad , sd , var , xtabs The following objects are masked from 'package:base' : anyDuplicated , append , as . data . frame , basename , cbind , colnames , dirname , do . call , duplicated , eval , evalq , Filter , Find , get , grep , grepl , intersect , is . unsorted , lapply , Map , mapply , match , mget , order , paste , pmax , pmax . int , pmin , pmin . int , Position , rank , rbind , Reduce , rownames , sapply , setdiff , sort , table , tapply , union , unique , unsplit , which , which . max , which . min Loading required package : S4Vectors Attaching package : 'S4Vectors' The following object is masked from 'package:base' : expand . grid Loading required package : IRanges Loading required package : GenomeInfoDb Loading required package : Biobase Welcome to Bioconductor Vignettes contain introductory material ; view with 'browseVignettes()' . To cite Bioconductor , see 'citation(\"Biobase\")' , and for packages 'citation(\"pkgname\")' . Loading required package : DelayedArray Loading required package : matrixStats Attaching package : 'matrixStats' The following objects are masked from 'package:Biobase' : anyMissing , rowMedians Loading required package : BiocParallel Attaching package : 'DelayedArray' The following objects are masked from 'package:matrixStats' : colMaxs , colMins , colRanges , rowMaxs , rowMins , rowRanges The following objects are masked from 'package:base' : aperm , apply , rowsum Loading required package : ggplot2 Loading required package : Matrix Attaching package : 'Matrix' The following object is masked from 'package:S4Vectors' : expand Loading required package : VGAM Loading required package : splines Loading required package : DDRTree Loading required package : irlba \u2500\u2500 \u001b [ 1 mAttaching packages \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse 1.3 . 0 \u2500\u2500 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtibble \u001b [ 39 m 2.1 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m 0.8 . 3 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m 1.0 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mstringr \u001b [ 39 m 1.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mreadr \u001b [ 39 m 1.3 . 1 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mforcats \u001b [ 39 m 0.4 . 0 \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m 0.3 . 3 \u2500\u2500 \u001b [ 1 mConflicts \u001b [ 22 m \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 tidyverse_conflicts () \u2500\u2500 \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcollapse () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: collapse () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcombine () \u001b [ 39 m masks \u001b [ 34 mBiobase \u001b [ 39 m :: combine (), \u001b [ 34 mBiocGenerics \u001b [ 39 m :: combine () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mcount () \u001b [ 39 m masks \u001b [ 34 mmatrixStats \u001b [ 39 m :: count () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mdesc () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: desc () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mexpand () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: expand (), \u001b [ 34 mS4Vectors \u001b [ 39 m :: expand () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mfill () \u001b [ 39 m masks \u001b [ 34 mVGAM \u001b [ 39 m :: fill () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfilter () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: filter () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mfirst () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: first () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mlag () \u001b [ 39 m masks \u001b [ 34 mstats \u001b [ 39 m :: lag () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 mpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: pack () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mggplot2 \u001b [ 39 m :: \u001b [ 32 mPosition () \u001b [ 39 m masks \u001b [ 34 mBiocGenerics \u001b [ 39 m :: Position (), \u001b [ 34 mbase \u001b [ 39 m :: Position () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m :: \u001b [ 32 mreduce () \u001b [ 39 m masks \u001b [ 34 mGenomicRanges \u001b [ 39 m :: reduce (), \u001b [ 34 mIRanges \u001b [ 39 m :: reduce () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mrename () \u001b [ 39 m masks \u001b [ 34 mS4Vectors \u001b [ 39 m :: rename () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mpurrr \u001b [ 39 m :: \u001b [ 32 msimplify () \u001b [ 39 m masks \u001b [ 34 mDelayedArray \u001b [ 39 m :: simplify () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mdplyr \u001b [ 39 m :: \u001b [ 32 mslice () \u001b [ 39 m masks \u001b [ 34 mIRanges \u001b [ 39 m :: slice () \u001b [ 31 m \u2716\u001b [ 39 m \u001b [ 34 mtidyr \u001b [ 39 m :: \u001b [ 32 munpack () \u001b [ 39 m masks \u001b [ 34 mMatrix \u001b [ 39 m :: unpack ()","title":"Setup"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#download-data","text":"1 2 3 4 5 6 # Download data if ( ! dir.exists ( \"./data\" )) dir.create ( \"./data\" ) if ( ! file.exists ( \"./data/neuron_1k_v3_fastqs.tar\" )) { download.file ( \"http://cf.10xgenomics.com/samples/cell-exp/3.0.0/neuron_1k_v3/neuron_1k_v3_fastqs.tar\" , \"./data/neuron_1k_v3_fastqs.tar\" , method = \"wget\" , quiet = TRUE ) } 1 untar ( \"./data/neuron_1k_v3_fastqs.tar\" , exdir = \"./data\" )","title":"Download data"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#generate-the-gene-count-matrix","text":"","title":"Generate the gene count matrix"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#build-the-kallisto-index","text":"Here we use kallisto to pseudoalign the reads to the transcriptome and then to create the bus file to be converted to a sparse matrix. The first step is to build an index of the mouse transcriptome. The transcriptome downloaded here is Ensembl version 99, the most recent version as of writing. 1 2 3 4 5 6 # Mouse transcriptome if ( ! dir.exists ( \"./reference\" )) dir.create ( \"./reference\" ) if ( ! file.exists ( \"./reference/mm_cdna99.fa.gz\" )) { download.file ( \"ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz\" , \"./reference/mm_cdna99.fa.gz\" , method = \"wget\" , quiet = TRUE ) } 1 system ( \"kallisto index -i ./reference/mm_tr_index99.idx ./reference/mm_cdna99.fa.gz\" , intern = TRUE )","title":"Build the kallisto index"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#map-transcripts-to-genes","text":"For the sparse matrix, most people are interested in how many UMIs per gene per cell, we here we will quantify this from the bus output, and to do so, we need to find which gene corresponds to each transcript. Remember in the output of kallisto bus , there's the file transcripts.txt . Those are the transcripts in the transcriptome index. Remember that we downloaded transcriptome FASTA file from Ensembl just now. In FASTA files, each entry is a sequence with a name. In Ensembl FASTA files, the sequence name has genome annotation of the corresponding sequence, so we can extract transcript IDs and corresponding gene IDs and gene names from there. 1 tr2g <- tr2g_fasta ( \"./reference/mm_cdna99.fa.gz\" ) Reading FASTA file. 1 head ( tr2g ) A tibble: 6 \u00d7 3 transcript gene gene_name <chr> <chr> <chr> ENSMUST00000177564.1 ENSMUSG00000096176.1 Trdd2 ENSMUST00000196221.1 ENSMUSG00000096749.2 Trdd1 ENSMUST00000179664.1 ENSMUSG00000096749.2 Trdd1 ENSMUST00000178537.1 ENSMUSG00000095668.1 Trbd1 ENSMUST00000178862.1 ENSMUSG00000094569.1 Trbd2 ENSMUST00000179520.1 ENSMUSG00000094028.1 Ighd4-1 bustools requires tr2g to be written into a tab delimited file of a specific format: No headers, first column is transcript ID, and second column is the corresponding gene ID. Transcript IDs must be in the same order as in the kallisto index. 1 2 # Write tr2g to format required by bustools save_tr2g_bustools ( tr2g , file_save = \"./reference/tr2g_mm99.tsv\" )","title":"Map transcripts to genes"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#using-the-kb-wrapper","text":"With kallisto and bustools , it takes several commands to go from fastq files to the spliced and unspliced matrices, which is quite cumbersome. So a wrapper called kb was written to condense those steps to one. The command line tool kb can be installed with Then we can use the following command to generate the spliced and unspliced matrices: 1 system ( \"chmod -R 777 data/\" ) 1 2 3 fn <- list.files ( \"data/neuron_1k_v3_fastqs\" , full.names = TRUE ) fn <- fn [ str_detect ( fn , \"R\\\\d_\" )] fn 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L001_R1_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L001_R2_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L002_R1_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L002_R2_001.fastq.gz' 1 2 system ( paste ( \"kb count -i reference/mm_tr_index99.idx -g reference/tr2g_mm99.tsv -x 10xv3 -o output\" , paste ( fn , collapse = \" \" )), intern = TRUE )","title":"Using the kb wrapper"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#preprocessing","text":"Now we can load the matrix into R for analysis. 1 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" , tcc = FALSE )","title":"Preprocessing"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#remove-empty-droplets","text":"1 dim ( res_mat ) 36711 399524 The number of genes seems reasonable. The number of barcodes is way larger than the expected ~10k. 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 40.47 5.00 154216.00 The vast majority of \"cells\" have only no or just a few UMI detected. Those are empty droplets. 10x claims to have cell capture rate of up to 65%, but in practice, depending on how many cells are in fact loaded, the rate can be much lower. A commonly used method to estimate the number of empty droplets is barcode ranking knee and inflection points, as those are often assumed to represent transition between two components of a distribution. While more sophisticated methods exist (e.g. see emptyDrops in DropletUtils ), for simplicity, we will use the barcode ranking method here. However, whichever way we go, we don't have the ground truth. 1 2 # Compute barcode rank bc_rank <- barcodeRanks ( res_mat , lower = 1000 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( rank , total )) + geom_line () + geom_hline ( aes ( yintercept = inflection ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = rank_cutoff ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Rank\" , y = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) 1 2 3 4 # Filter the matrix res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) 20198 1210 1 rownames ( res_mat ) <- str_remove ( rownames ( res_mat ), \"\\\\.\\\\d+\" ) Now the number of cells is closer to expectation.","title":"Remove empty droplets"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#cell-type-inference","text":"Monocle 2 only infers one trajectory for the entire dataset, so non-neuronal cells like endothelial cells and erythrocytes may be mistaken as highly differentiated cells from the neuronal lineage. So we will remove cell types not of the neural or glial lineages. Cell types are also helpful to orient the trajectory; neuronal progenitor cells must come before neurons. Here cell type inference is done programatically with SingleR , which compares gene expression profiles of individual cells to bulk RNA-seq data of purified known cell types. 1 2 3 mouse.rnaseq <- MouseRNAseqData ( ensembl = TRUE ) sce <- SingleCellExperiment ( assays = list ( counts = res_mat )) sce <- logNormCounts ( sce ) Then SingleR will assign each cell a label based on Spearman correlation with known cell types from bulk RNA-seq. These are meanings of the acronyms: OPCs: Oligodendrocyte progenitor cells NPCs: Neural progenitor cells aNSCs: Active neural stem cells qNSCs: Quiescent neural stem cells 1 2 annots <- SingleR ( sce , ref = mouse.rnaseq , labels = colData ( mouse.rnaseq ) $ label.fine , de.method = \"wilcox\" , method = \"single\" , BPPARAM = MulticoreParam ( 4 )) 1 annots DataFrame with 1210 rows and 5 columns scores < matrix > AAACGCTGTAATGTGA 0.0601901483760862 : 0.242986808015721 : 0.177660752587073 :... AAACGCTGTCCTGGGT 0.11153546550616 : 0.321858508786419 : 0.206383027494298 :... AAAGAACCAGGACATG 0.0585569289411892 : 0.225038532259566 : 0.177381655702582 :... AAAGGTACACACGGTC 0.137923692580242 : 0.3506611435018 : 0.281933499704427 :... AAAGGTATCACCATAG - 0.00511350381259525 : 0.166880227412372 : 0.0975899954539976 :... ... ... TTTGACTTCGTTCAGA 0.100933655338997 : 0.327948884202836 : 0.262011719832591 :... TTTGATCTCCATAGGT 0.0656536744266451 : 0.280702755051776 : 0.23375860874247 :... TTTGGAGAGGCTAACG 0.0681422805975054 : 0.234772340818692 : 0.176292333613646 :... TTTGGTTAGTAATCCC 0.125780004617712 : 0.315213344287222 : 0.258722018820061 :... TTTGTTGGTATGGAAT 0.0512710432754663 : 0.231028330364938 : 0.177598025280379 :... first . labels tuning . scores labels < character > < DataFrame > < character > AAACGCTGTAATGTGA aNSCs 0.233804530306167 : 0.219682141602258 aNSCs AAACGCTGTCCTGGGT NPCs 1 : 1 aNSCs AAAGAACCAGGACATG Neurons 1 : 1 aNSCs AAAGGTACACACGGTC NPCs 1 : 1 aNSCs AAAGGTATCACCATAG NPCs 0.5 : 0.5 aNSCs ... ... ... ... TTTGACTTCGTTCAGA Neurons 1 : 1 aNSCs TTTGATCTCCATAGGT Neurons 0.5 : 0.5 aNSCs TTTGGAGAGGCTAACG aNSCs 0.209611614011623 : 0.0580258853185659 Neurons TTTGGTTAGTAATCCC Neurons 0.187703782257732 :- 0.195976600339204 Neurons TTTGTTGGTATGGAAT OPCs 0.299839391397521 :- 0.199361864824359 Neurons pruned . labels < character > AAACGCTGTAATGTGA aNSCs AAACGCTGTCCTGGGT aNSCs AAAGAACCAGGACATG aNSCs AAAGGTACACACGGTC aNSCs AAAGGTATCACCATAG aNSCs ... ... TTTGACTTCGTTCAGA aNSCs TTTGATCTCCATAGGT aNSCs TTTGGAGAGGCTAACG Neurons TTTGGTTAGTAATCCC Neurons TTTGTTGGTATGGAAT Neurons 1 2 3 4 5 6 inds <- annots $ pruned.labels %in% c ( \"NPCs\" , \"Neurons\" , \"OPCs\" , \"Oligodendrocytes\" , \"qNSCs\" , \"aNSCs\" , \"Astrocytes\" , \"Ependymal\" ) # Only keep these cell types cells_use <- row.names ( annots )[ inds ] sce <- sce [, cells_use ] sce $ cell_type <- annots $ pruned.labels [ inds ]","title":"Cell type inference"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#qc","text":"1 df <- perCellQCMetrics ( sce ) 1 colData ( sce ) <- cbind ( colData ( sce ), df ) 1 colData ( sce ) DataFrame with 1146 rows and 8 columns cell_type sum detected percent_top_50 <character> <numeric> <integer> <numeric> AAACGCTGTAATGTGA aNSCs 7072 3256 19.0328054298643 AAACGCTGTCCTGGGT aNSCs 9458 4101 12.8991330090928 AAAGAACCAGGACATG aNSCs 5338 2577 20.7006369426752 AAAGGTACACACGGTC aNSCs 16892 5111 18.2098034572579 AAAGGTATCACCATAG aNSCs 1397 882 24.9105225483178 ... ... ... ... ... TTTGACTTCGTTCAGA aNSCs 26203 6091 21.4021295271534 TTTGATCTCCATAGGT aNSCs 8120 3625 16.7980295566502 TTTGGAGAGGCTAACG Neurons 5483 2737 21.8675907349991 TTTGGTTAGTAATCCC Neurons 24381 5927 20.2288667404946 TTTGTTGGTATGGAAT Neurons 3718 2324 14.6046261430877 percent_top_100 percent_top_200 percent_top_500 total <numeric> <numeric> <numeric> <numeric> AAACGCTGTAATGTGA 25.8484162895928 34.1911764705882 49.335407239819 7072 AAACGCTGTCCTGGGT 19.221822795517 27.6485514908014 42.5882850496934 9458 AAAGAACCAGGACATG 27.5196702884976 36.2495316597977 52.6227051330086 5338 AAAGGTACACACGGTC 26.5095903386218 35.6973715368222 49.5204830689084 16892 AAAGGTATCACCATAG 35.5762347888332 49.8926270579814 72.655690765927 1397 ... ... ... ... ... TTTGACTTCGTTCAGA 28.4814715872228 37.358317749876 50.7422814181582 26203 TTTGATCTCCATAGGT 23.5098522167488 32.0320197044335 47.2044334975369 8120 TTTGGAGAGGCTAACG 28.269195695787 36.6405252598942 52.0335582710195 5483 TTTGGTTAGTAATCCC 27.7183052376851 36.2659447930766 49.9733398958205 24381 TTTGTTGGTATGGAAT 20.6293706293706 29.4513179128564 46.9338353953739 3718 1 plotColData ( sce , x = \"cell_type\" , y = \"sum\" ) 1 plotColData ( sce , x = \"cell_type\" , y = \"detected\" ) 1 2 3 4 plotColData ( sce , x = \"sum\" , y = \"detected\" , colour_by = \"cell_type\" ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks ()","title":"QC"},{"location":"tutorials/kb_pseudotime/R/monocle2/kb_monocle2.html#monocle-2","text":"1 2 3 4 5 6 7 8 9 10 # Construct CellDataSet object pd <- data.frame ( cell_id = cells_use , cell_type = annots $ pruned.labels [ inds ], row.names = cells_use ) pd <- new ( \"AnnotatedDataFrame\" , data = pd ) fd <- data.frame ( gene_id = rownames ( sce ), gene_short_name = tr2g $ gene_name [ match ( rownames ( sce ), tr2g $ gene )], row.names = row.names ( sce )) fd <- new ( \"AnnotatedDataFrame\" , data = fd ) cds <- newCellDataSet ( counts ( sce ), phenoData = pd , featureData = fd ) Size factor and dispersion will be used to normalize data and select genes for clustering. 1 2 cds <- estimateSizeFactors ( cds ) cds <- estimateDispersions ( cds ) Removing 16 outliers Genes that aren't highly expressed enough will not be used for clustering, since they may not give meaningful signal and would only add noise. 1 2 3 disp_table <- dispersionTable ( cds ) clustering_genes <- subset ( disp_table , mean_expression >= 0.1 ) cds <- setOrderingFilter ( cds , clustering_genes $ gene_id ) 1 2 cds <- reduceDimension ( cds , num_dim = 40 , reduction_method = 'tSNE' ) cds <- clusterCells ( cds , method = \"louvain\" ) 1 2 3 plot_cell_clusters ( cds ) + theme ( legend.position = \"none\" ) + labs ( x = \"tSNE1\" , y = \"tSNE2\" ) See where the annotated cell types are 1 2 3 4 5 plot_cell_clusters ( cds , color_by = \"cell_type\" ) + scale_color_brewer ( name = \"cell type\" , type = \"qual\" , palette = \"Set2\" ) + labs ( x = \"tSNE1\" , y = \"tSNE2\" ) + theme ( legend.position = \"right\" ) + guides ( color = guide_legend ( override.aes = list ( size = 3 ))) Genes likely to be informative of ordering of cells along the pseudotime trajectory will be selected for pseudotime inference. 1 2 3 4 5 diff_genes <- differentialGeneTest ( cds , fullModelFormulaStr = \"~ Cluster + cell_type\" , cores = 4 ) # Use top 3000 differentially expressed genes ordering_genes <- row.names ( subset ( diff_genes , qval < 1e-3 ))[ order ( diff_genes $ qval )][ 1 : 3000 ] cds <- setOrderingFilter ( cds , ordering_genes ) Here Monocle 2 will first project the data to 2 dimensions with DDRTree , and then do trajectory inference ( orderCells ). 1 2 cds <- reduceDimension ( cds , max_components = 2 , method = 'DDRTree' ) cds <- orderCells ( cds ) See what the trajectory looks like. This projection is DDRTree . 1 2 plot_cell_trajectory ( cds , color_by = \"cell_type\" , cell_size = 1 ) + scale_color_brewer ( name = \"cell type\" , type = \"qual\" , palette = \"Set2\" ) In the kallisto | bustools paper , I used slingshot for pseudotime analysis (Supplementary Figure 6.5) of this dataset, and found two neuronal end points. The result from Monocle 2 here also shows two main branches. Also, as expected, the stem cells are at the very beginning of the trajectory. 1 2 plot_cell_trajectory ( cds , color_by = \"Pseudotime\" , cell_size = 1 ) + scale_color_viridis_c () The pseudotime values are inverted. 1 2 3 cds <- orderCells ( cds , reverse = TRUE ) plot_cell_trajectory ( cds , color_by = \"Pseudotime\" , cell_size = 1 ) + scale_color_viridis_c () Monocle 2 can also be used to find genes differentially expressed along the pseudotime trajectory and clusters of such genes. See David Tang's excellent Monocle 2 tutorial for how to use these functionalities.","title":"Monocle 2"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html","text":"1 2 3 4 5 system.time ({ install.packages ( c ( \"BiocManager\" , \"scales\" , \"viridis\" , \"ggsci\" )) BiocManager :: install ( c ( \"slingshot\" , \"BUSpaRse\" , \"SingleR\" , \"DropletUtils\" , \"scater\" , \"scran\" , \"tradeSeq\" ), Ncpus = 2 ) }) Installing packages into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) also installing the dependency \u2018 gridExtra \u2019 Bioconductor version 3.10 ( BiocManager 1.30 . 10 ), R 3.6 . 2 ( 2019 - 12 - 12 ) Installing package ( s ) 'BiocVersion' , 'slingshot' , 'BUSpaRse' , 'SingleR' , 'DropletUtils' , 'scater' , 'scran' , 'tradeSeq' also installing the dependencies \u2018 bit \u2019 , \u2018 formatR \u2019 , \u2018 bibtex \u2019 , \u2018 iterators \u2019 , \u2018 annotate \u2019 , \u2018 bit64 \u2019 , \u2018 blob \u2019 , \u2018 zlibbioc \u2019 , \u2018 bitops \u2019 , \u2018 Rhtslib \u2019 , \u2018 lambda . r \u2019 , \u2018 futile . options \u2019 , \u2018 interactiveDisplayBase \u2019 , \u2018 pkgmaker \u2019 , \u2018 registry \u2019 , \u2018 rngtools \u2019 , \u2018 gridBase \u2019 , \u2018 foreach \u2019 , \u2018 doParallel \u2019 , \u2018 RcppEigen \u2019 , \u2018 softImpute \u2019 , \u2018 genefilter \u2019 , \u2018 ade4 \u2019 , \u2018 rncl \u2019 , \u2018 RNeXML \u2019 , \u2018 Biobase \u2019 , \u2018 IRanges \u2019 , \u2018 RSQLite \u2019 , \u2018 XML \u2019 , \u2018 BiocFileCache \u2019 , \u2018 rappdirs \u2019 , \u2018 XVector \u2019 , \u2018 rtracklayer \u2019 , \u2018 Rsamtools \u2019 , \u2018 ProtGenerics \u2019 , \u2018 RCurl \u2019 , \u2018 GenomeInfoDbData \u2019 , \u2018 GenomicAlignments \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 RcppHNSW \u2019 , \u2018 futile . logger \u2019 , \u2018 snow \u2019 , \u2018 AnnotationHub \u2019 , \u2018 locfit \u2019 , \u2018 R . oo \u2019 , \u2018 R . methodsS3 \u2019 , \u2018 sitmo \u2019 , \u2018 beeswarm \u2019 , \u2018 vipor \u2019 , \u2018 irlba \u2019 , \u2018 rsvd \u2019 , \u2018 NMF \u2019 , \u2018 howmany \u2019 , \u2018 locfdr \u2019 , \u2018 RSpectra \u2019 , \u2018 kernlab \u2019 , \u2018 zinbwave \u2019 , \u2018 phylobase \u2019 , \u2018 pracma \u2019 , \u2018 princurve \u2019 , \u2018 ape \u2019 , \u2018 igraph \u2019 , \u2018 matrixStats \u2019 , \u2018 SingleCellExperiment \u2019 , \u2018 SummarizedExperiment \u2019 , \u2018 AnnotationDbi \u2019 , \u2018 AnnotationFilter \u2019 , \u2018 biomaRt \u2019 , \u2018 Biostrings \u2019 , \u2018 BSgenome \u2019 , \u2018 data . table \u2019 , \u2018 ensembldb \u2019 , \u2018 GenomeInfoDb \u2019 , \u2018 GenomicFeatures \u2019 , \u2018 GenomicRanges \u2019 , \u2018 plyranges \u2019 , \u2018 RcppParallel \u2019 , \u2018 S4Vectors \u2019 , \u2018 zeallot \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 RcppProgress \u2019 , \u2018 DelayedArray \u2019 , \u2018 DelayedMatrixStats \u2019 , \u2018 BiocNeighbors \u2019 , \u2018 BiocParallel \u2019 , \u2018 ExperimentHub \u2019 , \u2018 beachmat \u2019 , \u2018 edgeR \u2019 , \u2018 rhdf5 \u2019 , \u2018 HDF5Array \u2019 , \u2018 R . utils \u2019 , \u2018 dqrng \u2019 , \u2018 Rhdf5lib \u2019 , \u2018 BiocGenerics \u2019 , \u2018 ggbeeswarm \u2019 , \u2018 BiocSingular \u2019 , \u2018 limma \u2019 , \u2018 statmod \u2019 , \u2018 clusterExperiment \u2019 , \u2018 pbapply \u2019 Old packages : 'curl' , 'dplyr' , 'DT' , 'farver' , 'jsonlite' , 'mime' , 'rlang' , 'rprojroot' , 'xfun' , 'xtable' , 'yaml' user system elapsed 3927.901 271.269 2157.764 1 devtools :: install_github ( 'cole-trapnell-lab/leidenbase' ) Downloading GitHub repo cole - trapnell - lab / leidenbase @ master \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 90 mchecking for file \u2018 / tmp / Rtmp3ZgCkF / remotes82750bfffa / cole - trapnell - lab - leidenbase - c22a7d0 / DESCRIPTION \u2019\u001b [ 39 m \u001b [ 36 m \u001b [ 36 m ( 345 ms ) \u001b [ 36 m \u001b [ 39 m \u001b [ 90 m \u2500\u001b [ 39 m \u001b [ 90 m \u001b [ 39 m \u001b [ 90 mpreparing \u2018 leidenbase \u2019 : \u001b [ 39 m \u001b [ 36 m \u001b [ 39 m \u001b [ 32 m \u2714\u001b [ 39 m \u001b [ 90 mchecking DESCRIPTION meta - information \u001b [ 39 m \u001b [ 36 m \u001b [ 39 m \u001b [ 90 m \u2500\u001b [ 39 m \u001b [ 90 m \u001b [ 39 m \u001b [ 90 mcleaning src \u001b [ 39 m \u001b [ 36 m \u001b [ 39 m \u001b [ 90 m \u2500\u001b [ 39 m \u001b [ 90 m \u001b [ 39 m \u001b [ 90 mchecking for LF line - endings in source and make files and shell scripts \u001b [ 39 m \u001b [ 36 m \u001b [ 39 m \u001b [ 90 m \u2500\u001b [ 39 m \u001b [ 90 m \u001b [ 39 m \u001b [ 90 mchecking for empty or unneeded directories \u001b [ 39 m \u001b [ 36 m \u001b [ 36 m ( 578 ms ) \u001b [ 36 m \u001b [ 39 m \u001b [ 90 m \u2500\u001b [ 39 m \u001b [ 90 m \u001b [ 39 m \u001b [ 90 mbuilding \u2018 leidenbase_0 . 1.0 . tar . gz \u2019\u001b [ 39 m \u001b [ 36 m \u001b [ 39 m Installing package into '/usr/local/lib/R/site-library' ( as 'lib' is unspecified ) 1 system ( \"pip3 install kb-python\" ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 library ( slingshot ) library ( BUSpaRse ) library ( DropletUtils ) library ( SingleR ) library ( tidyverse ) library ( Seurat ) library ( ggsci ) library ( viridis ) library ( Matrix ) library ( scater ) library ( scran ) library ( tradeSeq ) library ( BiocParallel ) library ( clusterExperiment ) theme_set ( theme_bw ()) tradeSeq has been updated to accommodate singleCellExperiment objects as output , making it much more memory efficient . Please check the news file and the updated vignette for details . 1 2 3 4 5 6 # Download data if ( ! dir.exists ( \"./data\" )) dir.create ( \"./data\" ) if ( ! file.exists ( \"./data/neuron_1k_v3_fastqs.tar\" )) { download.file ( \"http://cf.10xgenomics.com/samples/cell-exp/3.0.0/neuron_1k_v3/neuron_1k_v3_fastqs.tar\" , \"./data/neuron_1k_v3_fastqs.tar\" , method = \"wget\" , quiet = TRUE ) } 1 untar ( \"./data/neuron_1k_v3_fastqs.tar\" , exdir = \"./data\" ) 1 system ( \"kb ref -d human -i index.idx -g t2g.txt -f1 transcriptome.fasta\" , intern = TRUE ) 1 system ( \"chmod -R 777 data/\" ) 1 2 3 fn <- list.files ( \"data/neuron_1k_v3_fastqs\" , full.names = TRUE ) fn <- fn [ str_detect ( fn , \"R\\\\d_\" )] fn .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L001_R1_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L001_R2_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L002_R1_001.fastq.gz' 'data/neuron_1k_v3_fastqs/neuron_1k_v3_S1_L002_R2_001.fastq.gz' 1 2 system ( paste ( \"kb count -i reference/mm_tr_index99.idx -g reference/tr2g_mm99.tsv -x 10xv3 -o output\" , paste ( fn , collapse = \" \" )), intern = TRUE ) 1 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" , tcc = FALSE ) 1 dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 36711 399524 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 40.47 5.00 154216.00 1 2 # Compute barcode rank bc_rank <- barcodeRanks ( res_mat , lower = 1000 ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( rank , total )) + geom_line () + geom_hline ( aes ( yintercept = inflection ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = rank_cutoff ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Rank\" , y = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) 1 2 3 4 # Filter the matrix res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 20198 1210 1 rownames ( res_mat ) <- str_remove ( rownames ( res_mat ), \"\\\\.\\\\d+\" ) 1 2 3 mouse.rnaseq <- MouseRNAseqData ( ensembl = TRUE ) sce <- SingleCellExperiment ( assays = list ( counts = res_mat )) sce <- logNormCounts ( sce ) Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache snapshotDate (): 2019 - 10 - 22 Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache see ? SingleR and browseVignettes ( 'SingleR' ) for documentation Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache loading from cache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache see ? SingleR and browseVignettes ( 'SingleR' ) for documentation Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache loading from cache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache snapshotDate (): 2019 - 10 - 29 Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache loading from cache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Using temporary cache / tmp / Rtmp3ZgCkF / BiocFileCache Warning message : \"Unable to map 2180 of 21214 requested IDs.\" 1 2 annots <- SingleR ( sce , ref = mouse.rnaseq , labels = colData ( mouse.rnaseq ) $ label.fine , de.method = \"wilcox\" , method = \"single\" , BPPARAM = MulticoreParam ( 2 )) 1 annots DataFrame with 1210 rows and 5 columns scores < matrix > AAACGCTGTAATGTGA 0.0601901483760862 : 0.242986808015721 : 0.177660752587073 :... AAACGCTGTCCTGGGT 0.11153546550616 : 0.321858508786419 : 0.206383027494298 :... AAAGAACCAGGACATG 0.0585569289411892 : 0.225038532259566 : 0.177381655702582 :... AAAGGTACACACGGTC 0.137923692580242 : 0.3506611435018 : 0.281933499704427 :... AAAGGTATCACCATAG - 0.00511350381259525 : 0.166880227412372 : 0.0975899954539976 :... ... ... TTTGACTTCGTTCAGA 0.100933655338997 : 0.327948884202836 : 0.262011719832591 :... TTTGATCTCCATAGGT 0.0656536744266451 : 0.280702755051776 : 0.23375860874247 :... TTTGGAGAGGCTAACG 0.0681422805975054 : 0.234772340818692 : 0.176292333613646 :... TTTGGTTAGTAATCCC 0.125780004617712 : 0.315213344287222 : 0.258722018820061 :... TTTGTTGGTATGGAAT 0.0512710432754663 : 0.231028330364938 : 0.177598025280379 :... first . labels tuning . scores labels < character > < DataFrame > < character > AAACGCTGTAATGTGA aNSCs 0.233804530306167 : 0.219682141602258 aNSCs AAACGCTGTCCTGGGT NPCs 1 : 1 aNSCs AAAGAACCAGGACATG Neurons 1 : 1 aNSCs AAAGGTACACACGGTC NPCs 1 : 1 aNSCs AAAGGTATCACCATAG NPCs 0.5 : 0.5 aNSCs ... ... ... ... TTTGACTTCGTTCAGA Neurons 1 : 1 aNSCs TTTGATCTCCATAGGT Neurons 0.5 : 0.5 aNSCs TTTGGAGAGGCTAACG aNSCs 0.209611614011623 : 0.0580258853185659 Neurons TTTGGTTAGTAATCCC Neurons 0.187703782257732 :- 0.195976600339204 Neurons TTTGTTGGTATGGAAT OPCs 0.299839391397521 :- 0.199361864824359 Neurons pruned . labels < character > AAACGCTGTAATGTGA aNSCs AAACGCTGTCCTGGGT aNSCs AAAGAACCAGGACATG aNSCs AAAGGTACACACGGTC aNSCs AAAGGTATCACCATAG aNSCs ... ... TTTGACTTCGTTCAGA aNSCs TTTGATCTCCATAGGT aNSCs TTTGGAGAGGCTAACG Neurons TTTGGTTAGTAATCCC Neurons TTTGTTGGTATGGAAT Neurons 1 2 3 4 5 6 inds <- annots $ pruned.labels %in% c ( \"NPCs\" , \"Neurons\" , \"OPCs\" , \"Oligodendrocytes\" , \"qNSCs\" , \"aNSCs\" , \"Astrocytes\" , \"Ependymal\" ) # Only keep these cell types cells_use <- row.names ( annots )[ inds ] sce <- sce [, cells_use ] sce $ cell_type <- annots $ pruned.labels [ inds ] QC \u00b6 1 2 3 df <- perCellQCMetrics ( sce ) colData ( sce ) <- cbind ( colData ( sce ), df ) colData ( sce ) DataFrame with 1146 rows and 8 columns cell_type sum detected percent_top_50 <character> <numeric> <integer> <numeric> AAACGCTGTAATGTGA aNSCs 7072 3256 19.0328054298643 AAACGCTGTCCTGGGT aNSCs 9458 4101 12.8991330090928 AAAGAACCAGGACATG aNSCs 5338 2577 20.7006369426752 AAAGGTACACACGGTC aNSCs 16892 5111 18.2098034572579 AAAGGTATCACCATAG aNSCs 1397 882 24.9105225483178 ... ... ... ... ... TTTGACTTCGTTCAGA aNSCs 26203 6091 21.4021295271534 TTTGATCTCCATAGGT aNSCs 8120 3625 16.7980295566502 TTTGGAGAGGCTAACG Neurons 5483 2737 21.8675907349991 TTTGGTTAGTAATCCC Neurons 24381 5927 20.2288667404946 TTTGTTGGTATGGAAT Neurons 3718 2324 14.6046261430877 percent_top_100 percent_top_200 percent_top_500 total <numeric> <numeric> <numeric> <numeric> AAACGCTGTAATGTGA 25.8484162895928 34.1911764705882 49.335407239819 7072 AAACGCTGTCCTGGGT 19.221822795517 27.6485514908014 42.5882850496934 9458 AAAGAACCAGGACATG 27.5196702884976 36.2495316597977 52.6227051330086 5338 AAAGGTACACACGGTC 26.5095903386218 35.6973715368222 49.5204830689084 16892 AAAGGTATCACCATAG 35.5762347888332 49.8926270579814 72.655690765927 1397 ... ... ... ... ... TTTGACTTCGTTCAGA 28.4814715872228 37.358317749876 50.7422814181582 26203 TTTGATCTCCATAGGT 23.5098522167488 32.0320197044335 47.2044334975369 8120 TTTGGAGAGGCTAACG 28.269195695787 36.6405252598942 52.0335582710195 5483 TTTGGTTAGTAATCCC 27.7183052376851 36.2659447930766 49.9733398958205 24381 TTTGTTGGTATGGAAT 20.6293706293706 29.4513179128564 46.9338353953739 3718 1 plotColData ( sce , x = \"cell_type\" , y = \"sum\" ) 1 plotColData ( sce , x = \"cell_type\" , y = \"detected\" ) 1 2 3 4 plotColData ( sce , x = \"sum\" , y = \"detected\" , colour_by = \"cell_type\" ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () Dimension reduction \u00b6 1 2 dec_sce <- modelGeneVar ( sce ) fit_pbmc <- metadata ( dec_sce ) 1 2 3 4 # Adapted from https://osca.bioconductor.org/feature-selection.html#feature-selection plot ( fit_pbmc $ mean , fit_pbmc $ var , xlab = \"Mean of log-expression\" , ylab = \"Variance of log-expression\" ) curve ( fit_pbmc $ trend ( x ), col = \"dodgerblue\" , add = TRUE , lwd = 2 ) 1 2 hvgs <- getTopHVGs ( dec_sce , n = 3000 ) sce <- runPCA ( sce , subset_row = hvgs ) 1 2 3 # Percentage of variance explained is tucked away in the attributes. percent.var <- attr ( reducedDim ( sce ), \"percentVar\" ) plot ( percent.var , xlab = \"PC\" , ylab = \"Variance explained (%)\" ) The y axis is percentage of variance explained by the PC, or the eigenvalues of the covariance matrix. 1 2 options ( repr.plot.width = 12 , repr.plot.height = 12 ) plotPCA ( sce , colour_by = \"cell_type\" , ncomponents = 4 ) 1 2 3 options ( repr.plot.width = 9 , repr.plot.height = 6 ) sce <- runTSNE ( sce , dimred = \"PCA\" ) plotTSNE ( sce , colour_by = \"cell_type\" ) 1 2 3 set.seed ( 1 ) sce <- runUMAP ( sce , dimred = \"PCA\" , n_neighbors = 30 ) plotUMAP ( sce , colour_by = \"cell_type\" ) UMAP can better preserve pairwise distance of cells than tSNE and can better separate cell populations than the first 2 PCs of PCA ( Becht et al. 2018 ), so the TI will be visualized on UMAP rather than tSNE or PCA. Cell type annotation with SingleR requires a reference with bulk RNA seq data for isolated known cell types. The reference used for cell type annotation here does not differentiate between different types of neural progenitor cells; clustering can further partition the neural progenitor cells. Furthermore, slingshot is based on cluster-wise minimum spanning tree, so finding a good clustering is important to good trajectory inference with slingshot . The clustering algorithm used here is Leiden , which is an improvement over the commonly used Louvain; Leiden communities are guaranteed to be well-connected, while Louvain can lead to poorly connected communities. 1 g <- buildSNNGraph ( sce , k = 15 , use.dimred = \"PCA\" ) 1 2 3 sce $ cluster <- leidenbase :: leiden_find_partition ( g , resolution_parameter = 1.2 , partition_type = \"RBConfigurationVertexPartition\" , num_iter = 10 , seed = 1 ) $ membership %>% factor () 1 plotUMAP ( sce , colour_by = \"cluster\" ) Slingshot \u00b6 Trajectory inference \u00b6 While the slingshot vignette uses SingleCellExperiment , slingshot can also take a matrix of cell embeddings in reduced dimension as input. We can optionally specify the cluster to start or end the trajectory based on biological knowledge. Here, since quiescent neural stem cells are in cluster 4, the starting cluster would be 4 near the top left of the previous plot. I no longer consider doing trajectory inference on UMAP a good idea , due to distortions introduced by UMAP. See this paper for the extent non-linear dimension reduction methods distort the data. The latent dimension of the data is most likely far more than 2 or 3 dimensions, so forcing it down to 2 or 3 dimensions are bound to introduce distortions, just like how projecting the spherical surface of the Earth to 2 dimensions in maps introduces distortions. Furthermore, after the projection, some trajectories are no longer topologically feasible. For instance, imagine a stream coming out of the hole of a doughnut in 3D. This is not possible in 2D, so when that structure is projected to 2D, part of the stream may become buried in the middle of the doughnut, or the doughnut may be broken to allow the stream through, or part of the steam will be intermixed with part of the doughnut though they shouldn't. I recommend using a larger number of principal components instead, but in that case, the lineages and principal curves can't be visualized (we can plot the curves within a 2 dimensional subspace, such as the first 2 PCs, but that usually looks like abstract art and isn't informative about the lineages). 1 2 sds <- slingshot ( reducedDim ( sce , \"PCA\" )[, 1 : 20 ], clusterLabels = sce $ cluster , start.clus = 2 , stretch = 0 ) Using full covariance matrix Unfortunately, slingshot does not natively support ggplot2 . So this is a function that assigns colors to each cell in base R graphics. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #' Assign a color to each cell based on some value #' #' @param cell_vars Vector indicating the value of a variable associated with cells. #' @param pal_fun Palette function that returns a vector of hex colors, whose #' argument is the length of such a vector. #' @param ... Extra arguments for pal_fun. #' @return A vector of hex colors with one entry for each cell. cell_pal <- function ( cell_vars , pal_fun , ... ) { if ( is.numeric ( cell_vars )) { pal <- pal_fun ( 100 , ... ) return ( pal [ cut ( cell_vars , breaks = 100 )]) } else { categories <- sort ( unique ( cell_vars )) pal <- setNames ( pal_fun ( length ( categories ), ... ), categories ) return ( pal [ cell_vars ]) } } We need color palettes for both cell types and Leiden clusters. These would be the same colors seen in the Seurat plots. 1 2 cell_colors <- cell_pal ( sce $ cell_type , pal_d3 ( alpha = 0.5 )) cell_colors_clust <- cell_pal ( sce $ cluster , pal_d3 ( alpha = 0.5 )) 1 2 3 4 5 par ( mar = c ( 5.1 , 4.1 , 4.1 , 14 ), xpd = TRUE ) plot ( reducedDim ( sds , \"PCA\" )[, 1 : 2 ], col = cell_colors , pch = 16 , cex = 1 , xlab = \"PC 1\" , ylab = \"PC 2\" ) lines ( sds , lwd = 2 , type = 'lineages' , col = 'black' ) legend ( \"right\" , inset = c ( -0.6 , 0 ), legend = unique ( sce $ cell_type ), col = unique ( cell_colors ), pch = 16 , box.lwd = 0 ) 1 2 3 4 5 6 ord <- order ( unique ( sce $ cluster )) par ( mar = c ( 5.1 , 4.1 , 4.1 , 14 ), xpd = TRUE ) plot ( reducedDim ( sds , \"PCA\" )[, 1 : 2 ], col = cell_colors_clust , pch = 16 , cex = 1 , xlab = \"PC 1\" , ylab = \"PC 2\" ) lines ( sds , lwd = 2 , type = 'lineages' , col = 'black' ) legend ( \"right\" , inset = c ( -0.2 , 0 ), legend = unique ( sce $ cluster )[ ord ], col = unique ( cell_colors_clust )[ ord ], pch = 16 , box.lwd = 0 ) 1 2 3 4 5 par ( mar = c ( 5.1 , 4.1 , 4.1 , 14 ), xpd = TRUE ) plot ( reducedDim ( sds , \"PCA\" )[, 1 : 2 ], col = cell_colors , pch = 16 , cex = 1 , xlab = \"PC 1\" , ylab = \"PC 2\" ) lines ( sds , lwd = 2 , col = 'black' ) legend ( \"right\" , inset = c ( -0.6 , 0 ), legend = unique ( sce $ cell_type ), col = unique ( cell_colors ), pch = 16 , box.lwd = 0 ) Which cells are in which lineage? Here we plot the pseudotime values for each lineage. 1 2 3 4 5 6 7 8 9 10 11 12 options ( repr.plot.width = 15 , repr.plot.height = 6 ) nc <- 3 pt <- slingPseudotime ( sds ) nms <- colnames ( pt ) nr <- ceiling ( length ( nms ) / nc ) pal <- viridis ( 100 , end = 0.95 ) par ( mfrow = c ( nr , nc )) for ( i in nms ) { colors <- pal [ cut ( pt [, i ], breaks = 100 )] plot ( reducedDim ( sds ), col = colors , pch = 16 , main = i ) lines ( sds , lwd = 2 , col = 'black' , type = 'lineages' ) } Or on UMAP, though can't plot the lineages here 1 2 3 4 5 6 par ( mfrow = c ( nr , nc )) options ( repr.plot.width = 15 , repr.plot.height = 6 ) for ( i in nms ) { colors <- pal [ cut ( pt [, i ], breaks = 100 )] plot ( reducedDim ( sce , \"UMAP\" ), col = colors , pch = 16 , main = i ) } Differential expression \u00b6 Here we use the package tradeSeq , presented in this paper . This section was adapted from the vignette of tradeSeq . 1 2 3 4 5 6 control <- mgcv :: gam.control () control $ maxit <- 1000 cts <- as.matrix ( counts ( sce )) icMat <- evaluateK ( counts = cts , k = 3 : 10 , nGenes = 50 , pseudotime = slingPseudotime ( sds , na = FALSE ), cellWeights = slingCurveWeights ( sds ), control = control ) Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" 1 2 register ( MulticoreParam ( 2 )) sce2 <- fitGAM ( counts = cts [ hvgs [ 1 : 50 ],], sds = sds , nknots = 5 , control = control ) See where the knots are 1 2 plotGeneCount ( curve = sds , clusters = sce $ cluster , models = sce2 ) Within linenage comparisons \u00b6 1 2 assoRes <- associationTest ( sce2 ) head ( assoRes ) A data.frame: 6 \u00d7 3 waldStat df pvalue <dbl> <dbl> <dbl> ENSMUSG00000027500 749.6209 7 0 ENSMUSG00000019874 1765.8955 7 0 ENSMUSG00000005583 579.4966 7 0 ENSMUSG00000029838 504.3415 7 0 ENSMUSG00000027210 492.3774 7 0 ENSMUSG00000026728 1072.9275 7 0 1 startRes <- startVsEndTest ( sce2 ) 1 2 3 oStart <- order ( startRes $ waldStat , decreasing = TRUE ) sigGeneStart <- names ( sce2 )[ oStart [ 1 ]] plotSmoothers ( sce2 , cts , gene = sigGeneStart ) 1 plotUMAP ( sce , colour_by = sigGeneStart ) Between lineage comparisons \u00b6 1 endRes <- diffEndTest ( sce2 ) 1 2 3 o <- order ( endRes $ waldStat , decreasing = TRUE ) sigGene <- names ( sce2 )[ o [ 1 ]] plotSmoothers ( sce2 , cts , sigGene ) 1 plotUMAP ( sce , colour_by = sigGene ) Different patterns \u00b6 1 2 3 patternRes <- patternTest ( sce2 ) oPat <- order ( patternRes $ waldStat , decreasing = TRUE ) head ( rownames ( patternRes )[ oPat ]) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'ENSMUSG00000035551' 'ENSMUSG00000027239' 'ENSMUSG00000018411' 'ENSMUSG00000067786' 'ENSMUSG00000052727' 'ENSMUSG00000058672' 1 plotSmoothers ( sce2 , cts , gene = rownames ( patternRes )[ oPat ][ 1 ]) 1 plotUMAP ( sce , colour_by = rownames ( patternRes )[ oPat ][ 1 ]) Clustering patterns \u00b6 1 2 3 nPointsClus <- 10 clusPat <- clusterExpressionPatterns ( sce2 , nPoints = nPointsClus , genes = rownames ( sce2 )) 1 clusterLabels <- primaryCluster ( clusPat $ rsec ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 cUniq <- unique ( clusterLabels ) cUniq <- cUniq [ ! cUniq == -1 ] # remove unclustered genes plots <- list () for ( xx in cUniq [ 1 : 4 ]) { cId <- which ( clusterLabels == xx ) p <- ggplot ( data = data.frame ( x = 1 : nPointsClus , y = rep ( range ( clusPat $ yhatScaled [ cId , ]), nPointsClus / 2 )), aes ( x = x , y = y )) + geom_point ( alpha = 0 ) + labs ( title = paste0 ( \"Cluster \" , xx ), x = \"Pseudotime\" , y = \"Normalized expression\" ) + theme_classic () for ( ii in 1 : length ( cId )) { geneId <- rownames ( clusPat $ yhatScaled )[ cId [ ii ]] p <- p + geom_line ( data = data.frame ( x = rep ( 1 : nPointsClus , 2 ), y = clusPat $ yhatScaled [ geneId , ], lineage = rep ( 0 : 1 , each = nPointsClus )), aes ( col = as.character ( lineage ), group = lineage ), lwd = 1.5 ) } p <- p + guides ( color = FALSE ) + scale_color_manual ( values = c ( \"orange\" , \"darkseagreen3\" ), breaks = c ( \"0\" , \"1\" )) plots [[ as.character ( xx )]] <- p } plots $ ncol <- 2 do.call ( cowplot :: plot_grid , plots ) 1","title":"R"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#qc","text":"1 2 3 df <- perCellQCMetrics ( sce ) colData ( sce ) <- cbind ( colData ( sce ), df ) colData ( sce ) DataFrame with 1146 rows and 8 columns cell_type sum detected percent_top_50 <character> <numeric> <integer> <numeric> AAACGCTGTAATGTGA aNSCs 7072 3256 19.0328054298643 AAACGCTGTCCTGGGT aNSCs 9458 4101 12.8991330090928 AAAGAACCAGGACATG aNSCs 5338 2577 20.7006369426752 AAAGGTACACACGGTC aNSCs 16892 5111 18.2098034572579 AAAGGTATCACCATAG aNSCs 1397 882 24.9105225483178 ... ... ... ... ... TTTGACTTCGTTCAGA aNSCs 26203 6091 21.4021295271534 TTTGATCTCCATAGGT aNSCs 8120 3625 16.7980295566502 TTTGGAGAGGCTAACG Neurons 5483 2737 21.8675907349991 TTTGGTTAGTAATCCC Neurons 24381 5927 20.2288667404946 TTTGTTGGTATGGAAT Neurons 3718 2324 14.6046261430877 percent_top_100 percent_top_200 percent_top_500 total <numeric> <numeric> <numeric> <numeric> AAACGCTGTAATGTGA 25.8484162895928 34.1911764705882 49.335407239819 7072 AAACGCTGTCCTGGGT 19.221822795517 27.6485514908014 42.5882850496934 9458 AAAGAACCAGGACATG 27.5196702884976 36.2495316597977 52.6227051330086 5338 AAAGGTACACACGGTC 26.5095903386218 35.6973715368222 49.5204830689084 16892 AAAGGTATCACCATAG 35.5762347888332 49.8926270579814 72.655690765927 1397 ... ... ... ... ... TTTGACTTCGTTCAGA 28.4814715872228 37.358317749876 50.7422814181582 26203 TTTGATCTCCATAGGT 23.5098522167488 32.0320197044335 47.2044334975369 8120 TTTGGAGAGGCTAACG 28.269195695787 36.6405252598942 52.0335582710195 5483 TTTGGTTAGTAATCCC 27.7183052376851 36.2659447930766 49.9733398958205 24381 TTTGTTGGTATGGAAT 20.6293706293706 29.4513179128564 46.9338353953739 3718 1 plotColData ( sce , x = \"cell_type\" , y = \"sum\" ) 1 plotColData ( sce , x = \"cell_type\" , y = \"detected\" ) 1 2 3 4 plotColData ( sce , x = \"sum\" , y = \"detected\" , colour_by = \"cell_type\" ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks ()","title":"QC"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#dimension-reduction","text":"1 2 dec_sce <- modelGeneVar ( sce ) fit_pbmc <- metadata ( dec_sce ) 1 2 3 4 # Adapted from https://osca.bioconductor.org/feature-selection.html#feature-selection plot ( fit_pbmc $ mean , fit_pbmc $ var , xlab = \"Mean of log-expression\" , ylab = \"Variance of log-expression\" ) curve ( fit_pbmc $ trend ( x ), col = \"dodgerblue\" , add = TRUE , lwd = 2 ) 1 2 hvgs <- getTopHVGs ( dec_sce , n = 3000 ) sce <- runPCA ( sce , subset_row = hvgs ) 1 2 3 # Percentage of variance explained is tucked away in the attributes. percent.var <- attr ( reducedDim ( sce ), \"percentVar\" ) plot ( percent.var , xlab = \"PC\" , ylab = \"Variance explained (%)\" ) The y axis is percentage of variance explained by the PC, or the eigenvalues of the covariance matrix. 1 2 options ( repr.plot.width = 12 , repr.plot.height = 12 ) plotPCA ( sce , colour_by = \"cell_type\" , ncomponents = 4 ) 1 2 3 options ( repr.plot.width = 9 , repr.plot.height = 6 ) sce <- runTSNE ( sce , dimred = \"PCA\" ) plotTSNE ( sce , colour_by = \"cell_type\" ) 1 2 3 set.seed ( 1 ) sce <- runUMAP ( sce , dimred = \"PCA\" , n_neighbors = 30 ) plotUMAP ( sce , colour_by = \"cell_type\" ) UMAP can better preserve pairwise distance of cells than tSNE and can better separate cell populations than the first 2 PCs of PCA ( Becht et al. 2018 ), so the TI will be visualized on UMAP rather than tSNE or PCA. Cell type annotation with SingleR requires a reference with bulk RNA seq data for isolated known cell types. The reference used for cell type annotation here does not differentiate between different types of neural progenitor cells; clustering can further partition the neural progenitor cells. Furthermore, slingshot is based on cluster-wise minimum spanning tree, so finding a good clustering is important to good trajectory inference with slingshot . The clustering algorithm used here is Leiden , which is an improvement over the commonly used Louvain; Leiden communities are guaranteed to be well-connected, while Louvain can lead to poorly connected communities. 1 g <- buildSNNGraph ( sce , k = 15 , use.dimred = \"PCA\" ) 1 2 3 sce $ cluster <- leidenbase :: leiden_find_partition ( g , resolution_parameter = 1.2 , partition_type = \"RBConfigurationVertexPartition\" , num_iter = 10 , seed = 1 ) $ membership %>% factor () 1 plotUMAP ( sce , colour_by = \"cluster\" )","title":"Dimension reduction"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#slingshot","text":"","title":"Slingshot"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#trajectory-inference","text":"While the slingshot vignette uses SingleCellExperiment , slingshot can also take a matrix of cell embeddings in reduced dimension as input. We can optionally specify the cluster to start or end the trajectory based on biological knowledge. Here, since quiescent neural stem cells are in cluster 4, the starting cluster would be 4 near the top left of the previous plot. I no longer consider doing trajectory inference on UMAP a good idea , due to distortions introduced by UMAP. See this paper for the extent non-linear dimension reduction methods distort the data. The latent dimension of the data is most likely far more than 2 or 3 dimensions, so forcing it down to 2 or 3 dimensions are bound to introduce distortions, just like how projecting the spherical surface of the Earth to 2 dimensions in maps introduces distortions. Furthermore, after the projection, some trajectories are no longer topologically feasible. For instance, imagine a stream coming out of the hole of a doughnut in 3D. This is not possible in 2D, so when that structure is projected to 2D, part of the stream may become buried in the middle of the doughnut, or the doughnut may be broken to allow the stream through, or part of the steam will be intermixed with part of the doughnut though they shouldn't. I recommend using a larger number of principal components instead, but in that case, the lineages and principal curves can't be visualized (we can plot the curves within a 2 dimensional subspace, such as the first 2 PCs, but that usually looks like abstract art and isn't informative about the lineages). 1 2 sds <- slingshot ( reducedDim ( sce , \"PCA\" )[, 1 : 20 ], clusterLabels = sce $ cluster , start.clus = 2 , stretch = 0 ) Using full covariance matrix Unfortunately, slingshot does not natively support ggplot2 . So this is a function that assigns colors to each cell in base R graphics. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #' Assign a color to each cell based on some value #' #' @param cell_vars Vector indicating the value of a variable associated with cells. #' @param pal_fun Palette function that returns a vector of hex colors, whose #' argument is the length of such a vector. #' @param ... Extra arguments for pal_fun. #' @return A vector of hex colors with one entry for each cell. cell_pal <- function ( cell_vars , pal_fun , ... ) { if ( is.numeric ( cell_vars )) { pal <- pal_fun ( 100 , ... ) return ( pal [ cut ( cell_vars , breaks = 100 )]) } else { categories <- sort ( unique ( cell_vars )) pal <- setNames ( pal_fun ( length ( categories ), ... ), categories ) return ( pal [ cell_vars ]) } } We need color palettes for both cell types and Leiden clusters. These would be the same colors seen in the Seurat plots. 1 2 cell_colors <- cell_pal ( sce $ cell_type , pal_d3 ( alpha = 0.5 )) cell_colors_clust <- cell_pal ( sce $ cluster , pal_d3 ( alpha = 0.5 )) 1 2 3 4 5 par ( mar = c ( 5.1 , 4.1 , 4.1 , 14 ), xpd = TRUE ) plot ( reducedDim ( sds , \"PCA\" )[, 1 : 2 ], col = cell_colors , pch = 16 , cex = 1 , xlab = \"PC 1\" , ylab = \"PC 2\" ) lines ( sds , lwd = 2 , type = 'lineages' , col = 'black' ) legend ( \"right\" , inset = c ( -0.6 , 0 ), legend = unique ( sce $ cell_type ), col = unique ( cell_colors ), pch = 16 , box.lwd = 0 ) 1 2 3 4 5 6 ord <- order ( unique ( sce $ cluster )) par ( mar = c ( 5.1 , 4.1 , 4.1 , 14 ), xpd = TRUE ) plot ( reducedDim ( sds , \"PCA\" )[, 1 : 2 ], col = cell_colors_clust , pch = 16 , cex = 1 , xlab = \"PC 1\" , ylab = \"PC 2\" ) lines ( sds , lwd = 2 , type = 'lineages' , col = 'black' ) legend ( \"right\" , inset = c ( -0.2 , 0 ), legend = unique ( sce $ cluster )[ ord ], col = unique ( cell_colors_clust )[ ord ], pch = 16 , box.lwd = 0 ) 1 2 3 4 5 par ( mar = c ( 5.1 , 4.1 , 4.1 , 14 ), xpd = TRUE ) plot ( reducedDim ( sds , \"PCA\" )[, 1 : 2 ], col = cell_colors , pch = 16 , cex = 1 , xlab = \"PC 1\" , ylab = \"PC 2\" ) lines ( sds , lwd = 2 , col = 'black' ) legend ( \"right\" , inset = c ( -0.6 , 0 ), legend = unique ( sce $ cell_type ), col = unique ( cell_colors ), pch = 16 , box.lwd = 0 ) Which cells are in which lineage? Here we plot the pseudotime values for each lineage. 1 2 3 4 5 6 7 8 9 10 11 12 options ( repr.plot.width = 15 , repr.plot.height = 6 ) nc <- 3 pt <- slingPseudotime ( sds ) nms <- colnames ( pt ) nr <- ceiling ( length ( nms ) / nc ) pal <- viridis ( 100 , end = 0.95 ) par ( mfrow = c ( nr , nc )) for ( i in nms ) { colors <- pal [ cut ( pt [, i ], breaks = 100 )] plot ( reducedDim ( sds ), col = colors , pch = 16 , main = i ) lines ( sds , lwd = 2 , col = 'black' , type = 'lineages' ) } Or on UMAP, though can't plot the lineages here 1 2 3 4 5 6 par ( mfrow = c ( nr , nc )) options ( repr.plot.width = 15 , repr.plot.height = 6 ) for ( i in nms ) { colors <- pal [ cut ( pt [, i ], breaks = 100 )] plot ( reducedDim ( sce , \"UMAP\" ), col = colors , pch = 16 , main = i ) }","title":"Trajectory inference"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#differential-expression","text":"Here we use the package tradeSeq , presented in this paper . This section was adapted from the vignette of tradeSeq . 1 2 3 4 5 6 control <- mgcv :: gam.control () control $ maxit <- 1000 cts <- as.matrix ( counts ( sce )) icMat <- evaluateK ( counts = cts , k = 3 : 10 , nGenes = 50 , pseudotime = slingPseudotime ( sds , na = FALSE ), cellWeights = slingCurveWeights ( sds ), control = control ) Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Fitting terminated with step failure - check results carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" Warning message in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L = G$L, : \"Iteration limit reached without full convergence - check carefully\" 1 2 register ( MulticoreParam ( 2 )) sce2 <- fitGAM ( counts = cts [ hvgs [ 1 : 50 ],], sds = sds , nknots = 5 , control = control ) See where the knots are 1 2 plotGeneCount ( curve = sds , clusters = sce $ cluster , models = sce2 )","title":"Differential expression"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#within-linenage-comparisons","text":"1 2 assoRes <- associationTest ( sce2 ) head ( assoRes ) A data.frame: 6 \u00d7 3 waldStat df pvalue <dbl> <dbl> <dbl> ENSMUSG00000027500 749.6209 7 0 ENSMUSG00000019874 1765.8955 7 0 ENSMUSG00000005583 579.4966 7 0 ENSMUSG00000029838 504.3415 7 0 ENSMUSG00000027210 492.3774 7 0 ENSMUSG00000026728 1072.9275 7 0 1 startRes <- startVsEndTest ( sce2 ) 1 2 3 oStart <- order ( startRes $ waldStat , decreasing = TRUE ) sigGeneStart <- names ( sce2 )[ oStart [ 1 ]] plotSmoothers ( sce2 , cts , gene = sigGeneStart ) 1 plotUMAP ( sce , colour_by = sigGeneStart )","title":"Within linenage comparisons"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#between-lineage-comparisons","text":"1 endRes <- diffEndTest ( sce2 ) 1 2 3 o <- order ( endRes $ waldStat , decreasing = TRUE ) sigGene <- names ( sce2 )[ o [ 1 ]] plotSmoothers ( sce2 , cts , sigGene ) 1 plotUMAP ( sce , colour_by = sigGene )","title":"Between lineage comparisons"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#different-patterns","text":"1 2 3 patternRes <- patternTest ( sce2 ) oPat <- order ( patternRes $ waldStat , decreasing = TRUE ) head ( rownames ( patternRes )[ oPat ]) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 'ENSMUSG00000035551' 'ENSMUSG00000027239' 'ENSMUSG00000018411' 'ENSMUSG00000067786' 'ENSMUSG00000052727' 'ENSMUSG00000058672' 1 plotSmoothers ( sce2 , cts , gene = rownames ( patternRes )[ oPat ][ 1 ]) 1 plotUMAP ( sce , colour_by = rownames ( patternRes )[ oPat ][ 1 ])","title":"Different patterns"},{"location":"tutorials/kb_pseudotime/R/slingshot/kb_slingshot.html#clustering-patterns","text":"1 2 3 nPointsClus <- 10 clusPat <- clusterExpressionPatterns ( sce2 , nPoints = nPointsClus , genes = rownames ( sce2 )) 1 clusterLabels <- primaryCluster ( clusPat $ rsec ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 cUniq <- unique ( clusterLabels ) cUniq <- cUniq [ ! cUniq == -1 ] # remove unclustered genes plots <- list () for ( xx in cUniq [ 1 : 4 ]) { cId <- which ( clusterLabels == xx ) p <- ggplot ( data = data.frame ( x = 1 : nPointsClus , y = rep ( range ( clusPat $ yhatScaled [ cId , ]), nPointsClus / 2 )), aes ( x = x , y = y )) + geom_point ( alpha = 0 ) + labs ( title = paste0 ( \"Cluster \" , xx ), x = \"Pseudotime\" , y = \"Normalized expression\" ) + theme_classic () for ( ii in 1 : length ( cId )) { geneId <- rownames ( clusPat $ yhatScaled )[ cId [ ii ]] p <- p + geom_line ( data = data.frame ( x = rep ( 1 : nPointsClus , 2 ), y = clusPat $ yhatScaled [ geneId , ], lineage = rep ( 0 : 1 , each = nPointsClus )), aes ( col = as.character ( lineage ), group = lineage ), lwd = 1.5 ) } p <- p + guides ( color = FALSE ) + scale_color_manual ( values = c ( \"orange\" , \"darkseagreen3\" ), breaks = c ( \"0\" , \"1\" )) plots [[ as.character ( xx )]] <- p } plots $ ncol <- 2 do.call ( cowplot :: plot_grid , plots ) 1","title":"Clustering patterns"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html","text":"Introduction to single-cell RNA-seq I: pre-processing and quality control \u00b6 This R notebook demonstrates the use of the kallisto and bustools programs for pre-processing single-cell RNA-seq data ( also available as a Python notebook ). It streams in 1 million C. elegans reads, pseudoaligns them, and produces a cells x genes count matrix in about a minute. The notebook then performs some basic QC. It expands on a notebook prepared by Sina Booeshaghi for the Genome Informatics 2019 meeting, where he ran it in under 60 seconds during a 1 minute \"lightning talk\". The kallistobus.tools tutorials site has a extensive list of follow-up tutorials and vignettes on single-cell RNA-seq. 1 2 3 4 5 #@title install.packages ( \"vembedr\" ) library ( \"htmltools\" ) library ( \"vembedr\" ) embed_youtube ( \"x-rNofr88BM\" , width = 560 , height = 315 ) Installing package into \u2018/usr/local/lib/R/site-library\u2019 (as \u2018lib\u2019 is unspecified) </head> <body> <iframe src= \"https://www.youtube.com/embed/x-rNofr88BM\" width= \"560\" height= \"315\" frameborder= \"0\" allowfullscreen= \"\" ></iframe> </body> The notebook was written by A. Sina Booeshaghi, Lambda Lu and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publication, on which it is based: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Setup \u00b6 1 2 # This is used to time the running of the notebook start_time <- Sys.time () Install R packages \u00b6 1 install.packages ( c ( \"irlba\" , \"scico\" ), Ncpus = 2 ) Installing packages into \u2018/usr/local/lib/R/site-library\u2019 (as \u2018lib\u2019 is unspecified) 1 2 3 4 5 6 library ( Matrix ) library ( irlba ) library ( ggplot2 ) # Tidyverse is pre-installed, yay! library ( dplyr ) library ( scico ) theme_set ( theme_bw ()) Install kb-python (includes kallisto and bustools) \u00b6 1 system ( \"pip3 install kb-python\" ) Download required files \u00b6 1 2 3 4 5 6 7 8 # The quantification of single-cell RNA-seq with kallisto requires an index. # Indices are species specific and can be generated or downloaded directly with `kb`. # Here we download a pre-made index for C. elegans (the idx.idx file) along with an auxillary file (t2g.txt) # that describes the relationship between transcripts and genes. download.file ( \"https://caltech.box.com/shared/static/82yv415pkbdixhzi55qac1htiaph9ng4.idx\" , destfile = \"idx.idx\" ) download.file ( \"https://caltech.box.com/shared/static/cflxji16171skf3syzm8scoxkcvbl97x.txt\" , destfile = \"t2g.txt\" ) Pseudoalignment and counting \u00b6 In this notebook we pseudoalign 1 million C. elegans reads and count UMIs to produce a cells x genes matrix. These are located at XXX and instead of being downloaded, are streamed directly to the Google Colab notebook for quantification. See this blog post for more details on how the streaming works. The data consists of a subset of reads from GSE126954 described in the paper: Packer, J., Zhu, Q. et al. A lineage-resolved molecular atlas of C. elegans embryogenesis at single-cell resolution . Science (2019). doi:10.1126/science.aax1971 Run kallisto and bustools \u00b6 1 2 system ( \"kb count -i idx.idx -g t2g.txt --overwrite -t 2 -x 10xv2 https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz\" , intern = TRUE ) Basic QC \u00b6 Represent the cells in 2D \u00b6 1 2 # Read in the count matrix that was output by `kb`. mat <- readMM ( \"/content/counts_unfiltered/cells_x_genes.mtx\" ) 1 2 # Convert to dgCMatrix, which is a compressed, sparse matrix format mat <- as ( mat , \"dgCMatrix\" ) 1 dim ( mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 95372 22113 Here cells are in rows and genes are in columns, while usually in single cell analyses, cells are in columns and genes are in rows. Here most \"cells\" are empty droplets. What if we do PCA now? 1 2 3 # Perform PCA pca_res <- prcomp_irlba ( mat , n = 2 ) # scales and centers by default pca_x <- as.data.frame ( pca_res $ x ) 1 2 3 # Plot the cells in the 2D PCA projection ggplot ( pca_x , aes ( PC1 , PC2 )) + geom_point ( alpha = 0.1 , size = 0.5 ) While the PCA plot shows the overall structure of the data, a visualization highlighting the density of points reveals a large number of droplets represented in the lower left corner. 1 2 3 ggplot ( pca_x , aes ( PC1 , PC2 )) + geom_bin2d ( bins = 50 ) + scale_fill_scico ( palette = \"devon\" , direction = -1 , end = 0.95 ) The following plot helps clarify the reason for the concentrated points in the lower-left corner of the PCA plot. Test for library saturation \u00b6 1 2 df2 <- tibble ( nCount = rowSums ( mat ), nGene = rowSums ( mat > 0 )) 1 2 3 4 5 ggplot ( df2 , aes ( nCount , nGene )) + geom_bin2d ( bins = 50 ) + scale_fill_scico ( palette = \"devon\" , direction = -1 , end = 0.95 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Total UMI counts\" , y = \"Number of genes detected\" ) Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d Warning message: \u201cTransformation introduced infinite values in continuous y-axis\u201d Warning message: \u201cRemoved 1018 rows containing non-finite values (stat_bin2d).\u201d Here we see that there are a large number of near empty droplets. A useful approach to filtering out such data is the \"knee plot\" shown below. Examine the knee plot \u00b6 The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 12 # Create the knee plot tot_counts <- rowSums ( mat ) df <- tibble ( total = tot_counts , rank = row_number ( desc ( total ))) %>% distinct () %>% arrange ( rank ) options ( repr.plot.width = 9 , repr.plot.height = 6 ) ggplot ( df , aes ( total , rank )) + geom_path () + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( y = \"Barcode rank\" , x = \"Total UMI count\" ) Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d 1 2 # An option is to filter the cells and genes by a threshold # mat_filtered <- mat[rowSums(mat) > 30, colSums(mat) > 0] Exercises \u00b6 The \"knee plot\" is sometimes shown with the UMI counts on the y-axis instead of the x-axis, i.e. flipped and rotated 90 degrees. Make the flipped and rotated plot. Is there a reason to prefer one orientation over the other? 1 2 3 4 5 6 7 8 9 10 11 12 # # Create the flipped and rotated knee plot # tot_counts <- rowSums(mat) # df <- tibble(total = tot_counts, # rank = row_number(desc(total))) %>% # distinct() %>% # arrange(rank) # # options(repr.plot.width=9, repr.plot.height=6) # ggplot(df, aes(rank, total)) + # geom_path() + # scale_y_log10() + scale_x_log10() + annotation_logticks() + # labs(y = \"Total UMI count\", x = \"Barcode rank\") For more information on this exercise see Rotating the knee (plot) and related yoga . Discussion \u00b6 This notebook has demonstrated the pre-processing required for single-cell RNA-seq analysis. kb is used to pseudoalign reads and to generate a cells x genes matrix. Following generation of a matrix, basic QC helps to assess the quality of the data. 1 2 # Running time of the notebook Sys.time () - start_time Time difference of 2.6641 mins Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"R"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#introduction-to-single-cell-rna-seq-i-pre-processing-and-quality-control","text":"This R notebook demonstrates the use of the kallisto and bustools programs for pre-processing single-cell RNA-seq data ( also available as a Python notebook ). It streams in 1 million C. elegans reads, pseudoaligns them, and produces a cells x genes count matrix in about a minute. The notebook then performs some basic QC. It expands on a notebook prepared by Sina Booeshaghi for the Genome Informatics 2019 meeting, where he ran it in under 60 seconds during a 1 minute \"lightning talk\". The kallistobus.tools tutorials site has a extensive list of follow-up tutorials and vignettes on single-cell RNA-seq. 1 2 3 4 5 #@title install.packages ( \"vembedr\" ) library ( \"htmltools\" ) library ( \"vembedr\" ) embed_youtube ( \"x-rNofr88BM\" , width = 560 , height = 315 ) Installing package into \u2018/usr/local/lib/R/site-library\u2019 (as \u2018lib\u2019 is unspecified) </head> <body> <iframe src= \"https://www.youtube.com/embed/x-rNofr88BM\" width= \"560\" height= \"315\" frameborder= \"0\" allowfullscreen= \"\" ></iframe> </body> The notebook was written by A. Sina Booeshaghi, Lambda Lu and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publication, on which it is based: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285","title":"Introduction to single-cell RNA-seq I: pre-processing and quality control"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#setup","text":"1 2 # This is used to time the running of the notebook start_time <- Sys.time ()","title":"Setup"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#install-r-packages","text":"1 install.packages ( c ( \"irlba\" , \"scico\" ), Ncpus = 2 ) Installing packages into \u2018/usr/local/lib/R/site-library\u2019 (as \u2018lib\u2019 is unspecified) 1 2 3 4 5 6 library ( Matrix ) library ( irlba ) library ( ggplot2 ) # Tidyverse is pre-installed, yay! library ( dplyr ) library ( scico ) theme_set ( theme_bw ())","title":"Install R packages"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#install-kb-python-includes-kallisto-and-bustools","text":"1 system ( \"pip3 install kb-python\" )","title":"Install kb-python (includes kallisto and bustools)"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#download-required-files","text":"1 2 3 4 5 6 7 8 # The quantification of single-cell RNA-seq with kallisto requires an index. # Indices are species specific and can be generated or downloaded directly with `kb`. # Here we download a pre-made index for C. elegans (the idx.idx file) along with an auxillary file (t2g.txt) # that describes the relationship between transcripts and genes. download.file ( \"https://caltech.box.com/shared/static/82yv415pkbdixhzi55qac1htiaph9ng4.idx\" , destfile = \"idx.idx\" ) download.file ( \"https://caltech.box.com/shared/static/cflxji16171skf3syzm8scoxkcvbl97x.txt\" , destfile = \"t2g.txt\" )","title":"Download required files"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#pseudoalignment-and-counting","text":"In this notebook we pseudoalign 1 million C. elegans reads and count UMIs to produce a cells x genes matrix. These are located at XXX and instead of being downloaded, are streamed directly to the Google Colab notebook for quantification. See this blog post for more details on how the streaming works. The data consists of a subset of reads from GSE126954 described in the paper: Packer, J., Zhu, Q. et al. A lineage-resolved molecular atlas of C. elegans embryogenesis at single-cell resolution . Science (2019). doi:10.1126/science.aax1971","title":"Pseudoalignment and counting"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#run-kallisto-and-bustools","text":"1 2 system ( \"kb count -i idx.idx -g t2g.txt --overwrite -t 2 -x 10xv2 https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz\" , intern = TRUE )","title":"Run kallisto and bustools"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#basic-qc","text":"","title":"Basic QC"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#represent-the-cells-in-2d","text":"1 2 # Read in the count matrix that was output by `kb`. mat <- readMM ( \"/content/counts_unfiltered/cells_x_genes.mtx\" ) 1 2 # Convert to dgCMatrix, which is a compressed, sparse matrix format mat <- as ( mat , \"dgCMatrix\" ) 1 dim ( mat ) .list-inline {list-style: none; margin:0; padding: 0} .list-inline>li {display: inline-block} .list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex} 95372 22113 Here cells are in rows and genes are in columns, while usually in single cell analyses, cells are in columns and genes are in rows. Here most \"cells\" are empty droplets. What if we do PCA now? 1 2 3 # Perform PCA pca_res <- prcomp_irlba ( mat , n = 2 ) # scales and centers by default pca_x <- as.data.frame ( pca_res $ x ) 1 2 3 # Plot the cells in the 2D PCA projection ggplot ( pca_x , aes ( PC1 , PC2 )) + geom_point ( alpha = 0.1 , size = 0.5 ) While the PCA plot shows the overall structure of the data, a visualization highlighting the density of points reveals a large number of droplets represented in the lower left corner. 1 2 3 ggplot ( pca_x , aes ( PC1 , PC2 )) + geom_bin2d ( bins = 50 ) + scale_fill_scico ( palette = \"devon\" , direction = -1 , end = 0.95 ) The following plot helps clarify the reason for the concentrated points in the lower-left corner of the PCA plot.","title":"Represent the cells in 2D"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#test-for-library-saturation","text":"1 2 df2 <- tibble ( nCount = rowSums ( mat ), nGene = rowSums ( mat > 0 )) 1 2 3 4 5 ggplot ( df2 , aes ( nCount , nGene )) + geom_bin2d ( bins = 50 ) + scale_fill_scico ( palette = \"devon\" , direction = -1 , end = 0.95 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Total UMI counts\" , y = \"Number of genes detected\" ) Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d Warning message: \u201cTransformation introduced infinite values in continuous y-axis\u201d Warning message: \u201cRemoved 1018 rows containing non-finite values (stat_bin2d).\u201d Here we see that there are a large number of near empty droplets. A useful approach to filtering out such data is the \"knee plot\" shown below.","title":"Test for library saturation"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#examine-the-knee-plot","text":"The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 12 # Create the knee plot tot_counts <- rowSums ( mat ) df <- tibble ( total = tot_counts , rank = row_number ( desc ( total ))) %>% distinct () %>% arrange ( rank ) options ( repr.plot.width = 9 , repr.plot.height = 6 ) ggplot ( df , aes ( total , rank )) + geom_path () + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( y = \"Barcode rank\" , x = \"Total UMI count\" ) Warning message: \u201cTransformation introduced infinite values in continuous x-axis\u201d 1 2 # An option is to filter the cells and genes by a threshold # mat_filtered <- mat[rowSums(mat) > 30, colSums(mat) > 0]","title":"Examine the knee plot"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#exercises","text":"The \"knee plot\" is sometimes shown with the UMI counts on the y-axis instead of the x-axis, i.e. flipped and rotated 90 degrees. Make the flipped and rotated plot. Is there a reason to prefer one orientation over the other? 1 2 3 4 5 6 7 8 9 10 11 12 # # Create the flipped and rotated knee plot # tot_counts <- rowSums(mat) # df <- tibble(total = tot_counts, # rank = row_number(desc(total))) %>% # distinct() %>% # arrange(rank) # # options(repr.plot.width=9, repr.plot.height=6) # ggplot(df, aes(rank, total)) + # geom_path() + # scale_y_log10() + scale_x_log10() + annotation_logticks() + # labs(y = \"Total UMI count\", x = \"Barcode rank\") For more information on this exercise see Rotating the knee (plot) and related yoga .","title":"Exercises"},{"location":"tutorials/kb_quality_control/R/kb_intro_1_R.html#discussion","text":"This notebook has demonstrated the pre-processing required for single-cell RNA-seq analysis. kb is used to pseudoalign reads and to generate a cells x genes matrix. Following generation of a matrix, basic QC helps to assess the quality of the data. 1 2 # Running time of the notebook Sys.time () - start_time Time difference of 2.6641 mins Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"Discussion"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html","text":"Introduction to single-cell RNA-seq I: pre-processing and quality control \u00b6 This Python notebook demonstrates the use of the kallisto and bustools programs for pre-processing single-cell RNA-seq data ( also available as an R notebook ). It streams in 1 million C. elegans reads, pseudoaligns them, and produces a cells x genes count matrix in about a minute. The notebook then performs some basic QC. It expands on a notebook prepared by Sina Booeshaghi for the Genome Informatics 2019 meeting, where he ran it in under 60 seconds during a 1 minute \"lightning talk\". The kallistobus.tools tutorials site has a extensive list of follow-up tutorials and vignettes on single-cell RNA-seq. 1 2 3 #@title from IPython.display import HTML HTML ( '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/x-rNofr88BM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>' ) The notebook was written by A. Sina Booeshaghi and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publication, on which it is based: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285 Setup \u00b6 1 2 3 # This is used to time the running of the notebook import time start_time = time . time () Install python packages \u00b6 1 2 3 4 5 6 # These packages are pre-installed on Google Colab, but are included here to simplify running this notebook locally %% capture ! pip install matplotlib ! pip install scikit - learn ! pip install numpy ! pip install scipy 1 2 3 4 5 6 7 8 9 10 # Install packages for analysis and plotting from scipy.io import mmread from sklearn.decomposition import TruncatedSVD import numpy as np import matplotlib.pyplot as plt import matplotlib from scipy.sparse import csr_matrix matplotlib . rcParams . update ({ 'font.size' : 22 }) % config InlineBackend . figure_format = 'retina' 1 2 3 4 %% time %% capture # `kb` is a wrapper for the kallisto and bustools program, and the kb-python package contains the kallisto and bustools executables. ! pip install kb - python == 0.24.1 CPU times: user 71.8 ms, sys: 20.8 ms, total: 92.6 ms Wall time: 9.89 s Download required files \u00b6 1 2 3 4 5 6 7 %% time # The quantification of single-cell RNA-seq with kallisto requires an index. # Indices are species specific and can be generated or downloaded directly with `kb`. # Here we download a pre-made index for C. elegans (the idx.idx file) along with an auxillary file (t2g.txt) # that describes the relationship between transcripts and genes. ! wget - O idx . idx https : // caltech . box . com / shared / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx ! wget - O t2g . txt https : // caltech . box . com / shared / static / cflxji16171skf3syzm8scoxkcvbl97x . txt -- 2021 - 03 - 31 23 : 35 : 57 -- https : // caltech . box . com / shared / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx Resolving caltech . box . com ( caltech . box . com )... 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.27.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx [ following ] -- 2021 - 03 - 31 23 : 35 : 57 -- https : // caltech . box . com / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx [ following ] -- 2021 - 03 - 31 23 : 35 : 57 -- https : // caltech . app . box . com / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.201 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.201 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! TOjZC9YauQsUJ1QtiQcyl9nECELYGh_7GOcHslcOkuFjCXsoUakhYeEEEaN9FG0stqv7Uk - S8CQ9zwZqkbZT8yKcMu4qp9rDiMk9mPGdyAAt7wlMt5fGe8 - ayhgpbUaa7JOrIUmD42YWwC8RVxtbw0wov8BcRoj9EHbA5HH9j4XQGFOxgVSP91uupfMciKBleiGzWCa4lHF7tEjYNHCkMPCKETj25x3X9VvLI8Tjp5IDsu_qoNHqpv53 - owbBaaShO - DZGZwcVkhwqmz4iygFE1cjWaQxLGa46o1z48Yl2OBGo9VixhvEnoRAzMb0No9D5DZay6TiAPixZOV17GPzE793QTK0DGeTjjDEdxgwrZs6f5EBIPrZymUG7rj1HPEnXiAvqEpeZFj9IUvU6WovhB - V0QbFD - E4eSHZbcWK9T7CPE1Lv3gC1bhuYNULThU - bD9eb - qghz8 - 5 qAjwfuEV4TsO7wMtbIUpsGQiMwhaaiO95Pwe5__pJNay9ErF16gA3V3vTvwwk8jUQsL0E1LMO4hX1pYGZ1gC1MTlAUfN1qzaKIm7gdmVtTlMlTOw1h5Jk3hQOOITeOYQeehRwE4X4kyZcXMvzK_8N59TKs7NZP_9PxXmG1r_jxWgfEbXxdaAOUQaaPfvZ1l - AlUZcMmO7snBIRT2oah0fe6VvAnz3Pl3IQ6dX1VKAsd0XPcfANf3NCj0ukSaT7Lj3gJNd82ReIEnYXFjkmHmB - eY84uXqjupKoSUXtX4YddjePPNqm6HPgoJPRSZnBcOyfACOTONkq4ppy6nujoqJviKOM3FYBXo7ng6HXf - mNeQSiqBR2ooAzgNKy6B3emVDdCX9kzZu7P - 74 doan52Z0BTs6qHQmriBDqO53HSOTswDluiYzOOneHRq73wgBJFBHh9GPELx0x1OGv0Anh59qn9M8gNtebnbqnChR2UonBBUg0qmK - MFWrwk3wJIOrlSl0mEcRKWIQqM6xIbLSX6AvJ - 0 MnZ0jBtHaCjfpSbZluXYSTDqMg6BLCpcDEhWk8WlPszIF4pOXHTrWhBDUY9L7typSxvmbj5IKL_imHwGxlFX3w9fshr7Z9PP - T30X8h8pQTJwrtI9Qtl_M6chYS235sM1QjiKUk3BcaYjtwUrJ6KoR2UVNJqoDtq8MOp386KHhvyAsuRanj_O_4BwDPhSog9gBwvdF5DPe8XrfSw7zNX2OXERLLbE61wDrjigDSeboYbT - ZwF4dkKKXFw9do4iPu6avsuDhv8t157NqmtWOV - 31 hai_N8EjueCaROPzlOBUglX09yWewZgAj - kvEfhPQtdmjdKcTl - Qv6V1yyhiEm - XJy9euoi0Sja - 20 BjguinCmBvodDopu - DJRkPBxYIGchtBQURBkK1GjkBD97eXHCQlYY0p4zpn_Q .. / download [ following ] -- 2021 - 03 - 31 23 : 35 : 57 -- https : // public . boxcloud . com / d / 1 / b1 ! TOjZC9YauQsUJ1QtiQcyl9nECELYGh_7GOcHslcOkuFjCXsoUakhYeEEEaN9FG0stqv7Uk - S8CQ9zwZqkbZT8yKcMu4qp9rDiMk9mPGdyAAt7wlMt5fGe8 - ayhgpbUaa7JOrIUmD42YWwC8RVxtbw0wov8BcRoj9EHbA5HH9j4XQGFOxgVSP91uupfMciKBleiGzWCa4lHF7tEjYNHCkMPCKETj25x3X9VvLI8Tjp5IDsu_qoNHqpv53 - owbBaaShO - DZGZwcVkhwqmz4iygFE1cjWaQxLGa46o1z48Yl2OBGo9VixhvEnoRAzMb0No9D5DZay6TiAPixZOV17GPzE793QTK0DGeTjjDEdxgwrZs6f5EBIPrZymUG7rj1HPEnXiAvqEpeZFj9IUvU6WovhB - V0QbFD - E4eSHZbcWK9T7CPE1Lv3gC1bhuYNULThU - bD9eb - qghz8 - 5 qAjwfuEV4TsO7wMtbIUpsGQiMwhaaiO95Pwe5__pJNay9ErF16gA3V3vTvwwk8jUQsL0E1LMO4hX1pYGZ1gC1MTlAUfN1qzaKIm7gdmVtTlMlTOw1h5Jk3hQOOITeOYQeehRwE4X4kyZcXMvzK_8N59TKs7NZP_9PxXmG1r_jxWgfEbXxdaAOUQaaPfvZ1l - AlUZcMmO7snBIRT2oah0fe6VvAnz3Pl3IQ6dX1VKAsd0XPcfANf3NCj0ukSaT7Lj3gJNd82ReIEnYXFjkmHmB - eY84uXqjupKoSUXtX4YddjePPNqm6HPgoJPRSZnBcOyfACOTONkq4ppy6nujoqJviKOM3FYBXo7ng6HXf - mNeQSiqBR2ooAzgNKy6B3emVDdCX9kzZu7P - 74 doan52Z0BTs6qHQmriBDqO53HSOTswDluiYzOOneHRq73wgBJFBHh9GPELx0x1OGv0Anh59qn9M8gNtebnbqnChR2UonBBUg0qmK - MFWrwk3wJIOrlSl0mEcRKWIQqM6xIbLSX6AvJ - 0 MnZ0jBtHaCjfpSbZluXYSTDqMg6BLCpcDEhWk8WlPszIF4pOXHTrWhBDUY9L7typSxvmbj5IKL_imHwGxlFX3w9fshr7Z9PP - T30X8h8pQTJwrtI9Qtl_M6chYS235sM1QjiKUk3BcaYjtwUrJ6KoR2UVNJqoDtq8MOp386KHhvyAsuRanj_O_4BwDPhSog9gBwvdF5DPe8XrfSw7zNX2OXERLLbE61wDrjigDSeboYbT - ZwF4dkKKXFw9do4iPu6avsuDhv8t157NqmtWOV - 31 hai_N8EjueCaROPzlOBUglX09yWewZgAj - kvEfhPQtdmjdKcTl - Qv6V1yyhiEm - XJy9euoi0Sja - 20 BjguinCmBvodDopu - DJRkPBxYIGchtBQURBkK1GjkBD97eXHCQlYY0p4zpn_Q .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.27.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.27.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 625579580 ( 597 M ) [ application/octet-stream ] Saving to : \u2018 idx . idx \u2019 idx . idx 100 %[ ===================> ] 596.60 M 16.6 MB / s in 29 s 2021 - 03 - 31 23 : 36 : 27 ( 20.7 MB / s ) - \u2018 idx . idx \u2019 saved [ 625579580/625579580 ] -- 2021 - 03 - 31 23 : 36 : 27 -- https : // caltech . box . com / shared / static / cflxji16171skf3syzm8scoxkcvbl97x . txt Resolving caltech . box . com ( caltech . box . com )... 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.27.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt [ following ] -- 2021 - 03 - 31 23 : 36 : 27 -- https : // caltech . box . com / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt [ following ] -- 2021 - 03 - 31 23 : 36 : 27 -- https : // caltech . app . box . com / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.201 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.201 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! gWbsrvnYAgYXxnB8WTrshtz_ZRR1ZUSrew8lXt473jS8 - q72mE2fJN3i3uKWzqAO9s76XhRxjtXyRvHVa_zgHrCqbSzCTu0e7bB_YpGrmN_rSyEsHsFXKhZoSScPrTVeJsgIV_9ghOrIBIp3MJd44R83oTG9Ve3NqXm9 - dqMtZw0RHK60ZrBt0JJW0vkTlBnqwUapw2QEKgGLgiJBYC0ia4KEwdVp_L3kUilD7Q_Iln6PxoZWsNVTj6j1pTpx_LfQFU - YPwVDwTB4HIapelPSYMVxkDmlrcxzxZpB9PoQFh0KkhP14XXhewMUzm_7RvmH9ElybOvT2KeHhd0X84Ppx - 2 w_IQOePXCFwspJPzutXE60JX5WtCSRtSQTxAjcmIppjJ - wn7s5JkhWda17KWwyZweoCHEuH3DJVTsH_tYtydKlnil0tGxiwvUkxpuds3zWBx19Z9bM3cQ5zKno1bZj0NkAXyxIvVPf0NftkSr - wYCTxW3mO3L4lvTrV9gCatnSXGtFqhOe1QRdZYsy34rnGcoa5ztcDbdf38mB2ordUH0ZOCo8ML11DfWssAmkVuAhk - 9 AI6gO - nCOPVXM54oDvPYLyFOmw185kPnMK4WZWCPMteL - qmACHF49MR7pvUxxCuiNBoQq43nZUYiMw1gB - kEjzJhSM4u1E1Gq4iQqmmp95FWIaXBELLoo7JIHqvKHkVRvNy3sgvMn_pWOfa8oN1mXTPoq8BmH5mgj6th2scwnnJJVAU8V_eWzfELyB71_gWT7tk16cum9d6hh3Ex8W7BGo1X8jEtK4i6LvvwYtng1ufaxBECUS_GecmuuOMJodxUPaj_cADwABylJxPwLVlyHAfxcCNBo8hrgHSE0t5m3juwzJb1qNO - UqHXUw_omUlnvNeN6gmPR - aGjLFzXpkPf45_i - diX9v8f8IVrOV5m - MCEVZLyRdyx5Zlte0 - AYvt1IXOvwPYxaaQvo5RaCfnXu7javy1IP0LMU_Z_VFKKbCOFZC7Ote6vUTLQFHdM - I3reaPW - ZQAcqeF5v_UkefYvaRgR6KaY2SUCjzczOh7E_hM - aJn2fSMZBpWS7ywpXIPm3Q5oHBUKO9Q5Mbge6zUmbBo7Os6hzahJ5Y1IazhBpHfD1wR9aZY - Cl7C6cPvFN2 - ZJsOuYI7lKmG4fa7UpXdIDjN7SUQWG_9oUtkkfXOlpokRkFbmrXD_fiUCbOkWFwhqxaSJMKyHG3__sHhv_esrnCPMi_i5Dpfk9bll251hO074910bq77Hap0svlqQcItAalRZ5jVfxB72EGOG3qYfNKzxfvU91t339Bhc - TIDc2XxI8wkp994UjcsB61MCcIQnxyhXni0rvfw_8KTV288JdgxkymGJBE . / download [ following ] -- 2021 - 03 - 31 23 : 36 : 28 -- https : // public . boxcloud . com / d / 1 / b1 ! gWbsrvnYAgYXxnB8WTrshtz_ZRR1ZUSrew8lXt473jS8 - q72mE2fJN3i3uKWzqAO9s76XhRxjtXyRvHVa_zgHrCqbSzCTu0e7bB_YpGrmN_rSyEsHsFXKhZoSScPrTVeJsgIV_9ghOrIBIp3MJd44R83oTG9Ve3NqXm9 - dqMtZw0RHK60ZrBt0JJW0vkTlBnqwUapw2QEKgGLgiJBYC0ia4KEwdVp_L3kUilD7Q_Iln6PxoZWsNVTj6j1pTpx_LfQFU - YPwVDwTB4HIapelPSYMVxkDmlrcxzxZpB9PoQFh0KkhP14XXhewMUzm_7RvmH9ElybOvT2KeHhd0X84Ppx - 2 w_IQOePXCFwspJPzutXE60JX5WtCSRtSQTxAjcmIppjJ - wn7s5JkhWda17KWwyZweoCHEuH3DJVTsH_tYtydKlnil0tGxiwvUkxpuds3zWBx19Z9bM3cQ5zKno1bZj0NkAXyxIvVPf0NftkSr - wYCTxW3mO3L4lvTrV9gCatnSXGtFqhOe1QRdZYsy34rnGcoa5ztcDbdf38mB2ordUH0ZOCo8ML11DfWssAmkVuAhk - 9 AI6gO - nCOPVXM54oDvPYLyFOmw185kPnMK4WZWCPMteL - qmACHF49MR7pvUxxCuiNBoQq43nZUYiMw1gB - kEjzJhSM4u1E1Gq4iQqmmp95FWIaXBELLoo7JIHqvKHkVRvNy3sgvMn_pWOfa8oN1mXTPoq8BmH5mgj6th2scwnnJJVAU8V_eWzfELyB71_gWT7tk16cum9d6hh3Ex8W7BGo1X8jEtK4i6LvvwYtng1ufaxBECUS_GecmuuOMJodxUPaj_cADwABylJxPwLVlyHAfxcCNBo8hrgHSE0t5m3juwzJb1qNO - UqHXUw_omUlnvNeN6gmPR - aGjLFzXpkPf45_i - diX9v8f8IVrOV5m - MCEVZLyRdyx5Zlte0 - AYvt1IXOvwPYxaaQvo5RaCfnXu7javy1IP0LMU_Z_VFKKbCOFZC7Ote6vUTLQFHdM - I3reaPW - ZQAcqeF5v_UkefYvaRgR6KaY2SUCjzczOh7E_hM - aJn2fSMZBpWS7ywpXIPm3Q5oHBUKO9Q5Mbge6zUmbBo7Os6hzahJ5Y1IazhBpHfD1wR9aZY - Cl7C6cPvFN2 - ZJsOuYI7lKmG4fa7UpXdIDjN7SUQWG_9oUtkkfXOlpokRkFbmrXD_fiUCbOkWFwhqxaSJMKyHG3__sHhv_esrnCPMi_i5Dpfk9bll251hO074910bq77Hap0svlqQcItAalRZ5jVfxB72EGOG3qYfNKzxfvU91t339Bhc - TIDc2XxI8wkp994UjcsB61MCcIQnxyhXni0rvfw_8KTV288JdgxkymGJBE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.27.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.27.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 1010392 ( 987 K ) [ text/plain ] Saving to : \u2018 t2g . txt \u2019 t2g . txt 100 %[ ===================> ] 986.71 K 4.08 MB / s in 0.2 s 2021 - 03 - 31 23 : 36 : 30 ( 4.08 MB / s ) - \u2018 t2g . txt \u2019 saved [ 1010392/1010392 ] CPU times : user 302 ms , sys : 65.9 ms , total : 368 ms Wall time : 33.1 s Pseudoalignment and counting \u00b6 In this notebook we pseudoalign 1 million C. elegans reads and count UMIs to produce a cells x genes matrix. Instead of being downloaded, the reads are streamed directly to the Google Colab notebook for quantification. See this blog post for more details on how the streaming works. The data consists of a subset of reads from GSE126954 described in the paper: Packer, J., Zhu, Q. et al. A lineage-resolved molecular atlas of C. elegans embryogenesis at single-cell resolution . Science (2019). doi:10.1126/science.aax1971 Run kallisto and bustools \u00b6 1 2 3 4 5 6 %% time # This step runs `kb` to quantify the reads. `kb` can take as input URLs where the reads are located, and will stream the data # to Google Colab where it is quantified as it is downloaded. This allows for quantifying very large datasets without first # downloading them and saving them to disk. ! kb count - i idx . idx - g t2g . txt -- overwrite - t 2 - x 10 xv2 https : // caltech . box . com / shared / static / fh81mkceb8ydwma3tlrqfgq22z4kc4nt . gz https : // caltech . box . com / shared / static / ycxkluj5my7g3wiwhyq3vhv71mw5gmj5 . gz [2021-03-31 23:36:30,948] INFO Piping https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz to tmp/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz [2021-03-31 23:36:30,951] INFO Piping https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz to tmp/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz [2021-03-31 23:36:30,954] INFO Generating BUS file from [2021-03-31 23:36:30,954] INFO tmp/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz [2021-03-31 23:36:30,954] INFO tmp/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz [2021-03-31 23:36:46,788] INFO Sorting BUS file ./output.bus to tmp/output.s.bus [2021-03-31 23:36:49,288] INFO Whitelist not provided [2021-03-31 23:36:49,288] INFO Copying pre-packaged 10XV2 whitelist to . [2021-03-31 23:36:49,382] INFO Inspecting BUS file tmp/output.s.bus [2021-03-31 23:36:49,827] INFO Correcting BUS records in tmp/output.s.bus to tmp/output.s.c.bus with whitelist ./10xv2_whitelist.txt [2021-03-31 23:37:04,223] INFO Sorting BUS file tmp/output.s.c.bus to ./output.unfiltered.bus [2021-03-31 23:37:06,631] INFO Generating count matrix ./counts_unfiltered/cells_x_genes from BUS file ./output.unfiltered.bus CPU times: user 194 ms, sys: 30 ms, total: 224 ms Wall time: 37 s Exercises \u00b6 kb can quantify data that is streamed from a URL as in the example above, or can read in data from disk. Is it faster to stream data, or to download it first and then quantify it from disk? 1 2 3 4 # %%time # !wget https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz # !wget https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz # !kb count -i idx.idx -g t2g.txt --overwrite -t 2 -x 10xv2 fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz The -t option in kb sets the numnber of threads to be used. The Google Colab machine you are running on has two threads. If you run this notebook locally you can increase the number of threads beyond 2. As the number of threads is increased the running time decreases proportionately, although eventually the speed at which reads can be loaded from disk is a limiting factor. Verify that running kb with 1 thread on Google Colab takes about twice as long as with 2 threads. 1 2 # %%time # !kb count -i idx.idx -g t2g.txt --overwrite -t 1 -x 10xv2 https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz Basic QC \u00b6 Represent the cells in 2D \u00b6 1 2 # Read in the count matrix that was output by `kb`. mtx = mmread ( \"/content/counts_unfiltered/cells_x_genes.mtx\" ) 1 2 3 4 # Perform SVD tsvd = TruncatedSVD ( n_components = 2 ) tsvd . fit ( mtx ) X = tsvd . transform ( mtx ) 1 2 3 4 5 6 7 # Plot the cells in the 2D PCA projection fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . scatter ( X [:, 0 ], X [:, 1 ], alpha = 0.5 , c = \"green\" ) plt . axis ( 'off' ) plt . show () While the PCA plot shows the overall structure of the data, a visualization highlighting the density of points reveals a large number of droplets represented in the lower left corner. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # density display for PCA plot from scipy.interpolate import interpn def density_scatter ( x , y , ax = None , sort = True , bins = 20 , ** kwargs ) : \"\"\" Scatter plot colored by 2d histogram \"\"\" if ax is None : fig , ax = plt . subplots () data , x_e , y_e = np . histogram2d ( x , y , bins = bins ) z = interpn ( ( 0.5 * ( x_e [ 1 :] + x_e [: - 1 ]) , 0.5 * ( y_e [ 1 :] + y_e [: - 1 ]) ) , data , np . vstack ([ x , y ]) . T , method = \"splinef2d\" , bounds_error = False ) # Sort the points by density, so that the densest points are plotted last if sort : idx = z . argsort () x , y , z = x [ idx ], y [ idx ], z [ idx ] sc = ax . scatter ( x , y , c = z , ** kwargs ) return sc fig , ax = plt . subplots ( figsize = ( 7 , 7 )) x = X [:, 0 ] y = X [:, 1 ] sc = density_scatter ( x , y , ax = ax , cmap = \"Greens\" ) fig . colorbar ( sc , ax = ax ) plt . axis ( 'off' ) plt . show () The following plot helps clarify the reason for the concentrated points in the lower-left corner of the PCA plot. 1 2 # Create sparse matrix representation of the count matrix mtx = csr_matrix ( mtx ) Test for library saturation \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Create a plot showing genes detected as a function of UMI counts. fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . scatter ( np . asarray ( mtx . sum ( axis = 1 ))[:, 0 ], np . asarray ( np . sum ( mtx > 0 , axis = 1 ))[:, 0 ], color = \"green\" , alpha = 0.01 ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Genes Detected\" ) ax . set_xscale ( 'log' ) ax . set_yscale ( 'log' , nonposy = 'clip' ) ax . set_xlim (( 0.5 , 4500 )) ax . set_ylim (( 0.5 , 2000 )) plt . show () Here we see that there are a large number of near empty droplets. A useful approach to filtering out such data is the \"knee plot\" shown below. Examine the knee plot \u00b6 The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 # Create the \"knee plot\" knee = np . sort (( np . array ( mtx . sum ( axis = 1 ))) . flatten ())[:: - 1 ] fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . loglog ( knee , range ( len ( knee )), linewidth = 5 , color = \"g\" ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Set of Barcodes\" ) plt . grid ( True , which = \"both\" ) plt . show () 1 2 3 4 # An option is to filter the cells and genes by a threshold # row_mask = np.asarray(mtx.sum(axis=1)>30).reshape(-1) # col_mask = np.asarray(mtx.sum(axis=0)>0).reshape(-1) # mtx_filtered = mtx[row_mask,:][:,col_mask] Exercises \u00b6 The \"knee plot\" is sometimes shown with the UMI counts on the y-axis instead of the x-axis, i.e. flipped and rotated 90 degrees. Make the flipped and rotated plot. Is there a reason to prefer one orientation over the other? 1 2 3 4 5 6 7 8 9 10 11 # # Create the flipped and rotated \"knee plot\" # knee = np.sort((np.array(mtx.sum(axis=1))).flatten())[::-1] # fig, ax = plt.subplots(figsize=(10, 7)) # # ax.loglog(range(len(knee)), knee,linewidth=5, color=\"g\") # # ax.set_xlabel(\"Set of Barcodes\") # ax.set_ylabel(\"UMI Counts\") # # plt.grid(True, which=\"both\") # plt.show() For more information on this exercise see Rotating the knee (plot) and related yoga . The PCA subspaces form a [ flag ](https://en.wikipedia.org/wiki/Flag_(linear_algebra). This means, for example, that regardless of the number of dimensions chosen for the PCA dimensionality reduction, the 2D subspace remains the same. Verify this empirically. As you increase the number of dimensions for the PCA reduction, you can also view the relationship between different suspaces. Explore this by changing the subspace dimensions visualized. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #@title Exploring PCA subspsaces { run: \"auto\", vertical-output: true, display-mode: \"both\" } n_components = 2 #@param {type:\"integer\"} dimension_A = 1 #@param {type:\"integer\"} dimension_B = 2 #@param {type:\"integer\"} # Perform SVD tsvd = TruncatedSVD ( n_components ) tsvd . fit ( mtx ) X = tsvd . transform ( mtx ) # Plot the cells in the 2D PCA projection fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . scatter ( X [:, dimension_A - 1 ], X [:, dimension_B - 1 ], alpha = 0.5 , c = \"green\" ) plt . axis ( 'off' ) plt . show () Discussion \u00b6 This notebook has demonstrated the pre-processing required for single-cell RNA-seq analysis. kb is used to pseudoalign reads and to generate a cells x genes matrix. Following generation of a matrix, basic QC helps to assess the quality of the data. 1 2 # Running time of the notebook print ( \" {:.2f} seconds\" . format (( time . time () - start_time ))) 96.95 seconds Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located . 1","title":"Python"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#introduction-to-single-cell-rna-seq-i-pre-processing-and-quality-control","text":"This Python notebook demonstrates the use of the kallisto and bustools programs for pre-processing single-cell RNA-seq data ( also available as an R notebook ). It streams in 1 million C. elegans reads, pseudoaligns them, and produces a cells x genes count matrix in about a minute. The notebook then performs some basic QC. It expands on a notebook prepared by Sina Booeshaghi for the Genome Informatics 2019 meeting, where he ran it in under 60 seconds during a 1 minute \"lightning talk\". The kallistobus.tools tutorials site has a extensive list of follow-up tutorials and vignettes on single-cell RNA-seq. 1 2 3 #@title from IPython.display import HTML HTML ( '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/x-rNofr88BM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>' ) The notebook was written by A. Sina Booeshaghi and Lior Pachter. If you use the methods in this notebook for your analysis please cite the following publication, on which it is based: Melsted, P., Booeshaghi, A.S. et al. Modular and efficient pre-processing of single-cell RNA-seq. bioRxiv (2019). doi:10.1101/673285","title":"Introduction to single-cell RNA-seq I: pre-processing and quality control"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#setup","text":"1 2 3 # This is used to time the running of the notebook import time start_time = time . time ()","title":"Setup"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#install-python-packages","text":"1 2 3 4 5 6 # These packages are pre-installed on Google Colab, but are included here to simplify running this notebook locally %% capture ! pip install matplotlib ! pip install scikit - learn ! pip install numpy ! pip install scipy 1 2 3 4 5 6 7 8 9 10 # Install packages for analysis and plotting from scipy.io import mmread from sklearn.decomposition import TruncatedSVD import numpy as np import matplotlib.pyplot as plt import matplotlib from scipy.sparse import csr_matrix matplotlib . rcParams . update ({ 'font.size' : 22 }) % config InlineBackend . figure_format = 'retina' 1 2 3 4 %% time %% capture # `kb` is a wrapper for the kallisto and bustools program, and the kb-python package contains the kallisto and bustools executables. ! pip install kb - python == 0.24.1 CPU times: user 71.8 ms, sys: 20.8 ms, total: 92.6 ms Wall time: 9.89 s","title":"Install python packages"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#download-required-files","text":"1 2 3 4 5 6 7 %% time # The quantification of single-cell RNA-seq with kallisto requires an index. # Indices are species specific and can be generated or downloaded directly with `kb`. # Here we download a pre-made index for C. elegans (the idx.idx file) along with an auxillary file (t2g.txt) # that describes the relationship between transcripts and genes. ! wget - O idx . idx https : // caltech . box . com / shared / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx ! wget - O t2g . txt https : // caltech . box . com / shared / static / cflxji16171skf3syzm8scoxkcvbl97x . txt -- 2021 - 03 - 31 23 : 35 : 57 -- https : // caltech . box . com / shared / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx Resolving caltech . box . com ( caltech . box . com )... 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.27.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx [ following ] -- 2021 - 03 - 31 23 : 35 : 57 -- https : // caltech . box . com / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx [ following ] -- 2021 - 03 - 31 23 : 35 : 57 -- https : // caltech . app . box . com / public / static / 82 yv415pkbdixhzi55qac1htiaph9ng4 . idx Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.201 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.201 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! TOjZC9YauQsUJ1QtiQcyl9nECELYGh_7GOcHslcOkuFjCXsoUakhYeEEEaN9FG0stqv7Uk - S8CQ9zwZqkbZT8yKcMu4qp9rDiMk9mPGdyAAt7wlMt5fGe8 - ayhgpbUaa7JOrIUmD42YWwC8RVxtbw0wov8BcRoj9EHbA5HH9j4XQGFOxgVSP91uupfMciKBleiGzWCa4lHF7tEjYNHCkMPCKETj25x3X9VvLI8Tjp5IDsu_qoNHqpv53 - owbBaaShO - DZGZwcVkhwqmz4iygFE1cjWaQxLGa46o1z48Yl2OBGo9VixhvEnoRAzMb0No9D5DZay6TiAPixZOV17GPzE793QTK0DGeTjjDEdxgwrZs6f5EBIPrZymUG7rj1HPEnXiAvqEpeZFj9IUvU6WovhB - V0QbFD - E4eSHZbcWK9T7CPE1Lv3gC1bhuYNULThU - bD9eb - qghz8 - 5 qAjwfuEV4TsO7wMtbIUpsGQiMwhaaiO95Pwe5__pJNay9ErF16gA3V3vTvwwk8jUQsL0E1LMO4hX1pYGZ1gC1MTlAUfN1qzaKIm7gdmVtTlMlTOw1h5Jk3hQOOITeOYQeehRwE4X4kyZcXMvzK_8N59TKs7NZP_9PxXmG1r_jxWgfEbXxdaAOUQaaPfvZ1l - AlUZcMmO7snBIRT2oah0fe6VvAnz3Pl3IQ6dX1VKAsd0XPcfANf3NCj0ukSaT7Lj3gJNd82ReIEnYXFjkmHmB - eY84uXqjupKoSUXtX4YddjePPNqm6HPgoJPRSZnBcOyfACOTONkq4ppy6nujoqJviKOM3FYBXo7ng6HXf - mNeQSiqBR2ooAzgNKy6B3emVDdCX9kzZu7P - 74 doan52Z0BTs6qHQmriBDqO53HSOTswDluiYzOOneHRq73wgBJFBHh9GPELx0x1OGv0Anh59qn9M8gNtebnbqnChR2UonBBUg0qmK - MFWrwk3wJIOrlSl0mEcRKWIQqM6xIbLSX6AvJ - 0 MnZ0jBtHaCjfpSbZluXYSTDqMg6BLCpcDEhWk8WlPszIF4pOXHTrWhBDUY9L7typSxvmbj5IKL_imHwGxlFX3w9fshr7Z9PP - T30X8h8pQTJwrtI9Qtl_M6chYS235sM1QjiKUk3BcaYjtwUrJ6KoR2UVNJqoDtq8MOp386KHhvyAsuRanj_O_4BwDPhSog9gBwvdF5DPe8XrfSw7zNX2OXERLLbE61wDrjigDSeboYbT - ZwF4dkKKXFw9do4iPu6avsuDhv8t157NqmtWOV - 31 hai_N8EjueCaROPzlOBUglX09yWewZgAj - kvEfhPQtdmjdKcTl - Qv6V1yyhiEm - XJy9euoi0Sja - 20 BjguinCmBvodDopu - DJRkPBxYIGchtBQURBkK1GjkBD97eXHCQlYY0p4zpn_Q .. / download [ following ] -- 2021 - 03 - 31 23 : 35 : 57 -- https : // public . boxcloud . com / d / 1 / b1 ! TOjZC9YauQsUJ1QtiQcyl9nECELYGh_7GOcHslcOkuFjCXsoUakhYeEEEaN9FG0stqv7Uk - S8CQ9zwZqkbZT8yKcMu4qp9rDiMk9mPGdyAAt7wlMt5fGe8 - ayhgpbUaa7JOrIUmD42YWwC8RVxtbw0wov8BcRoj9EHbA5HH9j4XQGFOxgVSP91uupfMciKBleiGzWCa4lHF7tEjYNHCkMPCKETj25x3X9VvLI8Tjp5IDsu_qoNHqpv53 - owbBaaShO - DZGZwcVkhwqmz4iygFE1cjWaQxLGa46o1z48Yl2OBGo9VixhvEnoRAzMb0No9D5DZay6TiAPixZOV17GPzE793QTK0DGeTjjDEdxgwrZs6f5EBIPrZymUG7rj1HPEnXiAvqEpeZFj9IUvU6WovhB - V0QbFD - E4eSHZbcWK9T7CPE1Lv3gC1bhuYNULThU - bD9eb - qghz8 - 5 qAjwfuEV4TsO7wMtbIUpsGQiMwhaaiO95Pwe5__pJNay9ErF16gA3V3vTvwwk8jUQsL0E1LMO4hX1pYGZ1gC1MTlAUfN1qzaKIm7gdmVtTlMlTOw1h5Jk3hQOOITeOYQeehRwE4X4kyZcXMvzK_8N59TKs7NZP_9PxXmG1r_jxWgfEbXxdaAOUQaaPfvZ1l - AlUZcMmO7snBIRT2oah0fe6VvAnz3Pl3IQ6dX1VKAsd0XPcfANf3NCj0ukSaT7Lj3gJNd82ReIEnYXFjkmHmB - eY84uXqjupKoSUXtX4YddjePPNqm6HPgoJPRSZnBcOyfACOTONkq4ppy6nujoqJviKOM3FYBXo7ng6HXf - mNeQSiqBR2ooAzgNKy6B3emVDdCX9kzZu7P - 74 doan52Z0BTs6qHQmriBDqO53HSOTswDluiYzOOneHRq73wgBJFBHh9GPELx0x1OGv0Anh59qn9M8gNtebnbqnChR2UonBBUg0qmK - MFWrwk3wJIOrlSl0mEcRKWIQqM6xIbLSX6AvJ - 0 MnZ0jBtHaCjfpSbZluXYSTDqMg6BLCpcDEhWk8WlPszIF4pOXHTrWhBDUY9L7typSxvmbj5IKL_imHwGxlFX3w9fshr7Z9PP - T30X8h8pQTJwrtI9Qtl_M6chYS235sM1QjiKUk3BcaYjtwUrJ6KoR2UVNJqoDtq8MOp386KHhvyAsuRanj_O_4BwDPhSog9gBwvdF5DPe8XrfSw7zNX2OXERLLbE61wDrjigDSeboYbT - ZwF4dkKKXFw9do4iPu6avsuDhv8t157NqmtWOV - 31 hai_N8EjueCaROPzlOBUglX09yWewZgAj - kvEfhPQtdmjdKcTl - Qv6V1yyhiEm - XJy9euoi0Sja - 20 BjguinCmBvodDopu - DJRkPBxYIGchtBQURBkK1GjkBD97eXHCQlYY0p4zpn_Q .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.27.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.27.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 625579580 ( 597 M ) [ application/octet-stream ] Saving to : \u2018 idx . idx \u2019 idx . idx 100 %[ ===================> ] 596.60 M 16.6 MB / s in 29 s 2021 - 03 - 31 23 : 36 : 27 ( 20.7 MB / s ) - \u2018 idx . idx \u2019 saved [ 625579580/625579580 ] -- 2021 - 03 - 31 23 : 36 : 27 -- https : // caltech . box . com / shared / static / cflxji16171skf3syzm8scoxkcvbl97x . txt Resolving caltech . box . com ( caltech . box . com )... 107.152.27.197 Connecting to caltech . box . com ( caltech . box . com ) | 107.152.27.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt [ following ] -- 2021 - 03 - 31 23 : 36 : 27 -- https : // caltech . box . com / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt [ following ] -- 2021 - 03 - 31 23 : 36 : 27 -- https : // caltech . app . box . com / public / static / cflxji16171skf3syzm8scoxkcvbl97x . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 107.152.27.201 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 107.152.27.201 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! gWbsrvnYAgYXxnB8WTrshtz_ZRR1ZUSrew8lXt473jS8 - q72mE2fJN3i3uKWzqAO9s76XhRxjtXyRvHVa_zgHrCqbSzCTu0e7bB_YpGrmN_rSyEsHsFXKhZoSScPrTVeJsgIV_9ghOrIBIp3MJd44R83oTG9Ve3NqXm9 - dqMtZw0RHK60ZrBt0JJW0vkTlBnqwUapw2QEKgGLgiJBYC0ia4KEwdVp_L3kUilD7Q_Iln6PxoZWsNVTj6j1pTpx_LfQFU - YPwVDwTB4HIapelPSYMVxkDmlrcxzxZpB9PoQFh0KkhP14XXhewMUzm_7RvmH9ElybOvT2KeHhd0X84Ppx - 2 w_IQOePXCFwspJPzutXE60JX5WtCSRtSQTxAjcmIppjJ - wn7s5JkhWda17KWwyZweoCHEuH3DJVTsH_tYtydKlnil0tGxiwvUkxpuds3zWBx19Z9bM3cQ5zKno1bZj0NkAXyxIvVPf0NftkSr - wYCTxW3mO3L4lvTrV9gCatnSXGtFqhOe1QRdZYsy34rnGcoa5ztcDbdf38mB2ordUH0ZOCo8ML11DfWssAmkVuAhk - 9 AI6gO - nCOPVXM54oDvPYLyFOmw185kPnMK4WZWCPMteL - qmACHF49MR7pvUxxCuiNBoQq43nZUYiMw1gB - kEjzJhSM4u1E1Gq4iQqmmp95FWIaXBELLoo7JIHqvKHkVRvNy3sgvMn_pWOfa8oN1mXTPoq8BmH5mgj6th2scwnnJJVAU8V_eWzfELyB71_gWT7tk16cum9d6hh3Ex8W7BGo1X8jEtK4i6LvvwYtng1ufaxBECUS_GecmuuOMJodxUPaj_cADwABylJxPwLVlyHAfxcCNBo8hrgHSE0t5m3juwzJb1qNO - UqHXUw_omUlnvNeN6gmPR - aGjLFzXpkPf45_i - diX9v8f8IVrOV5m - MCEVZLyRdyx5Zlte0 - AYvt1IXOvwPYxaaQvo5RaCfnXu7javy1IP0LMU_Z_VFKKbCOFZC7Ote6vUTLQFHdM - I3reaPW - ZQAcqeF5v_UkefYvaRgR6KaY2SUCjzczOh7E_hM - aJn2fSMZBpWS7ywpXIPm3Q5oHBUKO9Q5Mbge6zUmbBo7Os6hzahJ5Y1IazhBpHfD1wR9aZY - Cl7C6cPvFN2 - ZJsOuYI7lKmG4fa7UpXdIDjN7SUQWG_9oUtkkfXOlpokRkFbmrXD_fiUCbOkWFwhqxaSJMKyHG3__sHhv_esrnCPMi_i5Dpfk9bll251hO074910bq77Hap0svlqQcItAalRZ5jVfxB72EGOG3qYfNKzxfvU91t339Bhc - TIDc2XxI8wkp994UjcsB61MCcIQnxyhXni0rvfw_8KTV288JdgxkymGJBE . / download [ following ] -- 2021 - 03 - 31 23 : 36 : 28 -- https : // public . boxcloud . com / d / 1 / b1 ! gWbsrvnYAgYXxnB8WTrshtz_ZRR1ZUSrew8lXt473jS8 - q72mE2fJN3i3uKWzqAO9s76XhRxjtXyRvHVa_zgHrCqbSzCTu0e7bB_YpGrmN_rSyEsHsFXKhZoSScPrTVeJsgIV_9ghOrIBIp3MJd44R83oTG9Ve3NqXm9 - dqMtZw0RHK60ZrBt0JJW0vkTlBnqwUapw2QEKgGLgiJBYC0ia4KEwdVp_L3kUilD7Q_Iln6PxoZWsNVTj6j1pTpx_LfQFU - YPwVDwTB4HIapelPSYMVxkDmlrcxzxZpB9PoQFh0KkhP14XXhewMUzm_7RvmH9ElybOvT2KeHhd0X84Ppx - 2 w_IQOePXCFwspJPzutXE60JX5WtCSRtSQTxAjcmIppjJ - wn7s5JkhWda17KWwyZweoCHEuH3DJVTsH_tYtydKlnil0tGxiwvUkxpuds3zWBx19Z9bM3cQ5zKno1bZj0NkAXyxIvVPf0NftkSr - wYCTxW3mO3L4lvTrV9gCatnSXGtFqhOe1QRdZYsy34rnGcoa5ztcDbdf38mB2ordUH0ZOCo8ML11DfWssAmkVuAhk - 9 AI6gO - nCOPVXM54oDvPYLyFOmw185kPnMK4WZWCPMteL - qmACHF49MR7pvUxxCuiNBoQq43nZUYiMw1gB - kEjzJhSM4u1E1Gq4iQqmmp95FWIaXBELLoo7JIHqvKHkVRvNy3sgvMn_pWOfa8oN1mXTPoq8BmH5mgj6th2scwnnJJVAU8V_eWzfELyB71_gWT7tk16cum9d6hh3Ex8W7BGo1X8jEtK4i6LvvwYtng1ufaxBECUS_GecmuuOMJodxUPaj_cADwABylJxPwLVlyHAfxcCNBo8hrgHSE0t5m3juwzJb1qNO - UqHXUw_omUlnvNeN6gmPR - aGjLFzXpkPf45_i - diX9v8f8IVrOV5m - MCEVZLyRdyx5Zlte0 - AYvt1IXOvwPYxaaQvo5RaCfnXu7javy1IP0LMU_Z_VFKKbCOFZC7Ote6vUTLQFHdM - I3reaPW - ZQAcqeF5v_UkefYvaRgR6KaY2SUCjzczOh7E_hM - aJn2fSMZBpWS7ywpXIPm3Q5oHBUKO9Q5Mbge6zUmbBo7Os6hzahJ5Y1IazhBpHfD1wR9aZY - Cl7C6cPvFN2 - ZJsOuYI7lKmG4fa7UpXdIDjN7SUQWG_9oUtkkfXOlpokRkFbmrXD_fiUCbOkWFwhqxaSJMKyHG3__sHhv_esrnCPMi_i5Dpfk9bll251hO074910bq77Hap0svlqQcItAalRZ5jVfxB72EGOG3qYfNKzxfvU91t339Bhc - TIDc2XxI8wkp994UjcsB61MCcIQnxyhXni0rvfw_8KTV288JdgxkymGJBE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 107.152.27.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 107.152.27.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 1010392 ( 987 K ) [ text/plain ] Saving to : \u2018 t2g . txt \u2019 t2g . txt 100 %[ ===================> ] 986.71 K 4.08 MB / s in 0.2 s 2021 - 03 - 31 23 : 36 : 30 ( 4.08 MB / s ) - \u2018 t2g . txt \u2019 saved [ 1010392/1010392 ] CPU times : user 302 ms , sys : 65.9 ms , total : 368 ms Wall time : 33.1 s","title":"Download required files"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#pseudoalignment-and-counting","text":"In this notebook we pseudoalign 1 million C. elegans reads and count UMIs to produce a cells x genes matrix. Instead of being downloaded, the reads are streamed directly to the Google Colab notebook for quantification. See this blog post for more details on how the streaming works. The data consists of a subset of reads from GSE126954 described in the paper: Packer, J., Zhu, Q. et al. A lineage-resolved molecular atlas of C. elegans embryogenesis at single-cell resolution . Science (2019). doi:10.1126/science.aax1971","title":"Pseudoalignment and counting"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#run-kallisto-and-bustools","text":"1 2 3 4 5 6 %% time # This step runs `kb` to quantify the reads. `kb` can take as input URLs where the reads are located, and will stream the data # to Google Colab where it is quantified as it is downloaded. This allows for quantifying very large datasets without first # downloading them and saving them to disk. ! kb count - i idx . idx - g t2g . txt -- overwrite - t 2 - x 10 xv2 https : // caltech . box . com / shared / static / fh81mkceb8ydwma3tlrqfgq22z4kc4nt . gz https : // caltech . box . com / shared / static / ycxkluj5my7g3wiwhyq3vhv71mw5gmj5 . gz [2021-03-31 23:36:30,948] INFO Piping https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz to tmp/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz [2021-03-31 23:36:30,951] INFO Piping https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz to tmp/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz [2021-03-31 23:36:30,954] INFO Generating BUS file from [2021-03-31 23:36:30,954] INFO tmp/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz [2021-03-31 23:36:30,954] INFO tmp/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz [2021-03-31 23:36:46,788] INFO Sorting BUS file ./output.bus to tmp/output.s.bus [2021-03-31 23:36:49,288] INFO Whitelist not provided [2021-03-31 23:36:49,288] INFO Copying pre-packaged 10XV2 whitelist to . [2021-03-31 23:36:49,382] INFO Inspecting BUS file tmp/output.s.bus [2021-03-31 23:36:49,827] INFO Correcting BUS records in tmp/output.s.bus to tmp/output.s.c.bus with whitelist ./10xv2_whitelist.txt [2021-03-31 23:37:04,223] INFO Sorting BUS file tmp/output.s.c.bus to ./output.unfiltered.bus [2021-03-31 23:37:06,631] INFO Generating count matrix ./counts_unfiltered/cells_x_genes from BUS file ./output.unfiltered.bus CPU times: user 194 ms, sys: 30 ms, total: 224 ms Wall time: 37 s","title":"Run kallisto and bustools"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#exercises","text":"kb can quantify data that is streamed from a URL as in the example above, or can read in data from disk. Is it faster to stream data, or to download it first and then quantify it from disk? 1 2 3 4 # %%time # !wget https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz # !wget https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz # !kb count -i idx.idx -g t2g.txt --overwrite -t 2 -x 10xv2 fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz The -t option in kb sets the numnber of threads to be used. The Google Colab machine you are running on has two threads. If you run this notebook locally you can increase the number of threads beyond 2. As the number of threads is increased the running time decreases proportionately, although eventually the speed at which reads can be loaded from disk is a limiting factor. Verify that running kb with 1 thread on Google Colab takes about twice as long as with 2 threads. 1 2 # %%time # !kb count -i idx.idx -g t2g.txt --overwrite -t 1 -x 10xv2 https://caltech.box.com/shared/static/fh81mkceb8ydwma3tlrqfgq22z4kc4nt.gz https://caltech.box.com/shared/static/ycxkluj5my7g3wiwhyq3vhv71mw5gmj5.gz","title":"Exercises"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#basic-qc","text":"","title":"Basic QC"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#represent-the-cells-in-2d","text":"1 2 # Read in the count matrix that was output by `kb`. mtx = mmread ( \"/content/counts_unfiltered/cells_x_genes.mtx\" ) 1 2 3 4 # Perform SVD tsvd = TruncatedSVD ( n_components = 2 ) tsvd . fit ( mtx ) X = tsvd . transform ( mtx ) 1 2 3 4 5 6 7 # Plot the cells in the 2D PCA projection fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . scatter ( X [:, 0 ], X [:, 1 ], alpha = 0.5 , c = \"green\" ) plt . axis ( 'off' ) plt . show () While the PCA plot shows the overall structure of the data, a visualization highlighting the density of points reveals a large number of droplets represented in the lower left corner. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # density display for PCA plot from scipy.interpolate import interpn def density_scatter ( x , y , ax = None , sort = True , bins = 20 , ** kwargs ) : \"\"\" Scatter plot colored by 2d histogram \"\"\" if ax is None : fig , ax = plt . subplots () data , x_e , y_e = np . histogram2d ( x , y , bins = bins ) z = interpn ( ( 0.5 * ( x_e [ 1 :] + x_e [: - 1 ]) , 0.5 * ( y_e [ 1 :] + y_e [: - 1 ]) ) , data , np . vstack ([ x , y ]) . T , method = \"splinef2d\" , bounds_error = False ) # Sort the points by density, so that the densest points are plotted last if sort : idx = z . argsort () x , y , z = x [ idx ], y [ idx ], z [ idx ] sc = ax . scatter ( x , y , c = z , ** kwargs ) return sc fig , ax = plt . subplots ( figsize = ( 7 , 7 )) x = X [:, 0 ] y = X [:, 1 ] sc = density_scatter ( x , y , ax = ax , cmap = \"Greens\" ) fig . colorbar ( sc , ax = ax ) plt . axis ( 'off' ) plt . show () The following plot helps clarify the reason for the concentrated points in the lower-left corner of the PCA plot. 1 2 # Create sparse matrix representation of the count matrix mtx = csr_matrix ( mtx )","title":"Represent the cells in 2D"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#test-for-library-saturation","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Create a plot showing genes detected as a function of UMI counts. fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . scatter ( np . asarray ( mtx . sum ( axis = 1 ))[:, 0 ], np . asarray ( np . sum ( mtx > 0 , axis = 1 ))[:, 0 ], color = \"green\" , alpha = 0.01 ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Genes Detected\" ) ax . set_xscale ( 'log' ) ax . set_yscale ( 'log' , nonposy = 'clip' ) ax . set_xlim (( 0.5 , 4500 )) ax . set_ylim (( 0.5 , 2000 )) plt . show () Here we see that there are a large number of near empty droplets. A useful approach to filtering out such data is the \"knee plot\" shown below.","title":"Test for library saturation"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#examine-the-knee-plot","text":"The \"knee plot\" was introduced in the Drop-seq paper: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 In this plot cells are ordered by the number of UMI counts associated to them (shown on the x -axis), and the fraction of droplets with at least that number of cells is shown on the y -axis: 1 2 3 4 5 6 7 8 9 10 11 # Create the \"knee plot\" knee = np . sort (( np . array ( mtx . sum ( axis = 1 ))) . flatten ())[:: - 1 ] fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . loglog ( knee , range ( len ( knee )), linewidth = 5 , color = \"g\" ) ax . set_xlabel ( \"UMI Counts\" ) ax . set_ylabel ( \"Set of Barcodes\" ) plt . grid ( True , which = \"both\" ) plt . show () 1 2 3 4 # An option is to filter the cells and genes by a threshold # row_mask = np.asarray(mtx.sum(axis=1)>30).reshape(-1) # col_mask = np.asarray(mtx.sum(axis=0)>0).reshape(-1) # mtx_filtered = mtx[row_mask,:][:,col_mask]","title":"Examine the knee plot"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#exercises_1","text":"The \"knee plot\" is sometimes shown with the UMI counts on the y-axis instead of the x-axis, i.e. flipped and rotated 90 degrees. Make the flipped and rotated plot. Is there a reason to prefer one orientation over the other? 1 2 3 4 5 6 7 8 9 10 11 # # Create the flipped and rotated \"knee plot\" # knee = np.sort((np.array(mtx.sum(axis=1))).flatten())[::-1] # fig, ax = plt.subplots(figsize=(10, 7)) # # ax.loglog(range(len(knee)), knee,linewidth=5, color=\"g\") # # ax.set_xlabel(\"Set of Barcodes\") # ax.set_ylabel(\"UMI Counts\") # # plt.grid(True, which=\"both\") # plt.show() For more information on this exercise see Rotating the knee (plot) and related yoga . The PCA subspaces form a [ flag ](https://en.wikipedia.org/wiki/Flag_(linear_algebra). This means, for example, that regardless of the number of dimensions chosen for the PCA dimensionality reduction, the 2D subspace remains the same. Verify this empirically. As you increase the number of dimensions for the PCA reduction, you can also view the relationship between different suspaces. Explore this by changing the subspace dimensions visualized. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #@title Exploring PCA subspsaces { run: \"auto\", vertical-output: true, display-mode: \"both\" } n_components = 2 #@param {type:\"integer\"} dimension_A = 1 #@param {type:\"integer\"} dimension_B = 2 #@param {type:\"integer\"} # Perform SVD tsvd = TruncatedSVD ( n_components ) tsvd . fit ( mtx ) X = tsvd . transform ( mtx ) # Plot the cells in the 2D PCA projection fig , ax = plt . subplots ( figsize = ( 10 , 7 )) ax . scatter ( X [:, dimension_A - 1 ], X [:, dimension_B - 1 ], alpha = 0.5 , c = \"green\" ) plt . axis ( 'off' ) plt . show ()","title":"Exercises"},{"location":"tutorials/kb_quality_control/python/kb_intro_1_python.html#discussion","text":"This notebook has demonstrated the pre-processing required for single-cell RNA-seq analysis. kb is used to pseudoalign reads and to generate a cells x genes matrix. Following generation of a matrix, basic QC helps to assess the quality of the data. 1 2 # Running time of the notebook print ( \" {:.2f} seconds\" . format (( time . time () - start_time ))) 96.95 seconds Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located . 1","title":"Discussion"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html","text":"In this vignette, we process fastq data from scRNA-seq (10x v2 chemistry) with to make a sparse matrix that can be used in downstream analysis with command line tools kallisto and bustools , as described in the kallisto bus paper . Then we will start a standard downstream analysis with Seurat . 1 system ( \"pip3 install kb-python\" ) 1 2 system ( \"wget https://github.com/pachterlab/kallisto/releases/download/v0.46.1/kallisto_linux-v0.46.1.tar.gz\" ) untar ( \"kallisto_linux-v0.46.1.tar.gz\" ) 1 system ( \"cp kallisto/kallisto /usr/local/bin\" ) Since Seurat is a large package with many dependencies, it takes a while to install the packages, especially those with compiled code. 1 2 3 install.packages ( \"BiocManager\" ) BiocManager :: install ( c ( \"multtest\" , \"DropletUtils\" , \"BUSpaRse\" ), Ncores = 2 ) install.packages ( c ( \"Seurat\" , \"biomartr\" ), Ncores = 2 ) Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) Bioconductor version 3.10 ( BiocManager 1.30 . 10 ), R 3.6 . 2 ( 2019 - 12 - 12 ) Installing package ( s ) 'BiocVersion' , 'multtest' , 'DropletUtils' , 'BUSpaRse' also installing the dependencies \u2018 formatR \u2019 , \u2018 bit \u2019 , \u2018 vctrs \u2019 , \u2018 lambda . r \u2019 , \u2018 futile . options \u2019 , \u2018 matrixStats \u2019 , \u2018 bit64 \u2019 , \u2018 blob \u2019 , \u2018 DBI \u2019 , \u2018 zlibbioc \u2019 , \u2018 bitops \u2019 , \u2018 Rhtslib \u2019 , \u2018 SummarizedExperiment \u2019 , \u2018 futile . logger \u2019 , \u2018 snow \u2019 , \u2018 limma \u2019 , \u2018 locfit \u2019 , \u2018 DelayedArray \u2019 , \u2018 IRanges \u2019 , \u2018 R . oo \u2019 , \u2018 R . methodsS3 \u2019 , \u2018 sitmo \u2019 , \u2018 RSQLite \u2019 , \u2018 XML \u2019 , \u2018 BiocFileCache \u2019 , \u2018 rappdirs \u2019 , \u2018 XVector \u2019 , \u2018 rtracklayer \u2019 , \u2018 Rsamtools \u2019 , \u2018 ProtGenerics \u2019 , \u2018 RCurl \u2019 , \u2018 GenomeInfoDbData \u2019 , \u2018 GenomicAlignments \u2019 , \u2018 BiocGenerics \u2019 , \u2018 Biobase \u2019 , \u2018 SingleCellExperiment \u2019 , \u2018 S4Vectors \u2019 , \u2018 BiocParallel \u2019 , \u2018 edgeR \u2019 , \u2018 rhdf5 \u2019 , \u2018 HDF5Array \u2019 , \u2018 R . utils \u2019 , \u2018 dqrng \u2019 , \u2018 beachmat \u2019 , \u2018 Rhdf5lib \u2019 , \u2018 AnnotationDbi \u2019 , \u2018 AnnotationFilter \u2019 , \u2018 biomaRt \u2019 , \u2018 Biostrings \u2019 , \u2018 BSgenome \u2019 , \u2018 data . table \u2019 , \u2018 ensembldb \u2019 , \u2018 GenomeInfoDb \u2019 , \u2018 GenomicFeatures \u2019 , \u2018 GenomicRanges \u2019 , \u2018 plyranges \u2019 , \u2018 RcppParallel \u2019 , \u2018 RcppArmadillo \u2019 , \u2018 RcppProgress \u2019 Old packages : 'BH' , 'broom' , 'callr' , 'cli' , 'curl' , 'DBI' , 'DT' , 'fansi' , 'farver' , 'gh' , 'hms' , 'knitr' , 'mime' , 'pillar' , 'prettyunits' , 'rlang' , 'rmarkdown' , 'rprojroot' , 'stringi' , 'tidyr' , 'tinytex' , 'vctrs' , 'xfun' , 'xtable' , 'boot' , 'foreign' , 'MASS' Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) also installing the dependencies \u2018 mnormt \u2019 , \u2018 numDeriv \u2019 , \u2018 TH . data \u2019 , \u2018 sandwich \u2019 , \u2018 lsei \u2019 , \u2018 bibtex \u2019 , \u2018 gbRd \u2019 , \u2018 sn \u2019 , \u2018 mvtnorm \u2019 , \u2018 plotrix \u2019 , \u2018 multcomp \u2019 , \u2018 gtools \u2019 , \u2018 gdata \u2019 , \u2018 caTools \u2019 , \u2018 npsurv \u2019 , \u2018 globals \u2019 , \u2018 listenv \u2019 , \u2018 zoo \u2019 , \u2018 Rdpack \u2019 , \u2018 TFisher \u2019 , \u2018 mutoss \u2019 , \u2018 hexbin \u2019 , \u2018 gplots \u2019 , \u2018 gridExtra \u2019 , \u2018 FNN \u2019 , \u2018 RSpectra \u2019 , \u2018 ape \u2019 , \u2018 cowplot \u2019 , \u2018 fitdistrplus \u2019 , \u2018 future \u2019 , \u2018 future . apply \u2019 , \u2018 ggrepel \u2019 , \u2018 ggridges \u2019 , \u2018 ica \u2019 , \u2018 igraph \u2019 , \u2018 irlba \u2019 , \u2018 leiden \u2019 , \u2018 lmtest \u2019 , \u2018 metap \u2019 , \u2018 pbapply \u2019 , \u2018 plotly \u2019 , \u2018 png \u2019 , \u2018 RANN \u2019 , \u2018 RcppAnnoy \u2019 , \u2018 reticulate \u2019 , \u2018 ROCR \u2019 , \u2018 rsvd \u2019 , \u2018 Rtsne \u2019 , \u2018 sctransform \u2019 , \u2018 SDMTools \u2019 , \u2018 tsne \u2019 , \u2018 uwot \u2019 , \u2018 RcppEigen \u2019 1 2 3 4 5 6 7 library ( BUSpaRse ) library ( Seurat ) library ( tidyverse ) library ( DropletUtils ) library ( Matrix ) library ( biomartr ) theme_set ( theme_bw ()) Download data \u00b6 The data set we are using here is 1k 1:1 Mixture of Fresh Frozen Human (HEK293T) and Mouse (NIH3T3) Cells from the 10x website. First, we download the fastq files (6.34 GB). 1 2 3 4 if ( ! dir.exists ( \"./data\" )) dir.create ( \"./data\" ) if ( ! file.exists ( \"./data/hgmm_1k_fastqs.tar\" )) { download.file ( \"http://cf.10xgenomics.com/samples/cell-exp/2.1.0/hgmm_1k/hgmm_1k_fastqs.tar\" , destfile = \"./data/hgmm_1k_fastqs.tar\" , quiet = TRUE ) } Then untar this file 1 untar ( \"./data/hgmm_1k_fastqs.tar\" , exdir = \"./data\" ) Generate the gene count matrix \u00b6 Build the kallisto index \u00b6 Here we use kallisto to pseudoalign the reads to the transcriptome and then to create the bus file to be converted to a sparse matrix. The first step is to build an index of the transcriptome. This data set has both human and mouse cells, so we need both human and mouse transcriptomes. The transcriptomes downloaded here are from Ensembl version 99, the most recent version as of writing. 1 2 3 4 5 6 7 8 9 10 11 if ( ! dir.exists ( \"./reference\" )) dir.create ( \"./reference\" ) # Human transcriptome if ( ! file.exists ( \"./reference/hs_cdna.fa.gz\" )) { download.file ( \"ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz\" , \"./reference/hs_cdna.fa.gz\" , method = \"wget\" , quiet = TRUE ) } # Mouse transcriptome if ( ! file.exists ( \"./reference/mm_cdna.fa.gz\" )) { download.file ( \"ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz\" , \"./reference/mm_cdna.fa.gz\" , method = \"wget\" , quiet = TRUE ) } 1 2 3 if ( ! file.exists ( \"./reference/hs_mm_tr_index.idx\" )) { system ( \"kallisto index -i ./reference/hs_mm_tr_index.idx ./reference/hs_cdna.fa.gz ./reference/mm_cdna.fa.gz\" ) } 1 2 tr2g <- map_dfr ( c ( \"./reference/hs_cdna.fa.gz\" , \"./reference/mm_cdna.fa.gz\" ), tr2g_fasta ) save_tr2g_bustools ( tr2g , \"./reference/hs_mm_tr2g.tsv\" ) Reading FASTA file. Reading FASTA file. 1 2 fastq_fns <- list.files ( \"./data/fastqs\" , full.name = TRUE ) fastq_fns <- fastq_fns [ str_detect ( fastq_fns , \"R\\\\d\" )] 1 fastq_fns './data/fastqs/hgmm_1k_S1_L001_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L001_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L002_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L002_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L003_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L003_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L004_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L004_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L005_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L005_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L006_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L006_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L007_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L007_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L008_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L008_R2_001.fastq.gz' 1 2 system ( paste ( \"kb count -i reference/hs_mm_tr_index.idx -g reference/hs_mm_tr2g.tsv -x 10xv2 -o output\" , paste ( fastq_fns , collapse = \" \" ), sep = \" \" ), intern = TRUE ) See what the outputs are 1 list.files ( \"./output\" , recursive = TRUE ) '10xv2_whitelist.txt' 'counts_unfiltered/cells_x_genes.barcodes.txt' 'counts_unfiltered/cells_x_genes.genes.txt' 'counts_unfiltered/cells_x_genes.mtx' 'inspect.json' 'matrix.ec' 'output.bus' 'output.unfiltered.bus' 'run_info.json' 'transcripts.txt' Explaining the output: matrix.ec : A text file with two columns. The first column is the 0 based index of equivalence classes. The second column is the set of transcripts (denoted by 0 based index based on order of appearance in the transcriptome fasta file) present in the corresponding equivalence class. output.bus : The data represented in bus format. This is a binary file, so don't use something like read.table to read it into R. run_info.json : Information about the call to kallisto bus , including the command used, number and percentage of reads pseudoaligned, version of kallisto used, and etc. transcript.txt : A text file with one column, which is the transcripts present in the data, in the same order as in the transcriptome fasta file. Explore the data \u00b6 Now we can load the matrix into R for analysis. 1 2 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" , tcc = FALSE ) Remove empty droplets \u00b6 Cool, so now we have the sparse matrix. What does it look like? 1 dim ( res_mat ) 77202 362207 The number of genes is as expected for two species. There're way more cells than we expect, which is about 1000. So what's going on? How many UMIs per barcode? 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 76.04 8.00 74292.00 The vast majority of \"cells\" have only a few UMI detected. Those are empty droplets. 10x claims to have cell capture rate of up to 65%, but in practice, depending on how many cells are in fact loaded, the rate can be much lower. A commonly used method to estimate the number of empty droplets is barcode ranking knee and inflection points, as those are often assumed to represent transition between two components of a distribution. While more sophisticated method exist (e.g. see emptyDrops in DropletUtils ), for simplicity, we will use the barcode ranking method here. However, whichever way we go, we don't have the ground truth. 1 2 # Compute barcode rank bc_rank <- barcodeRanks ( res_mat ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( rank , total )) + geom_line () + geom_hline ( aes ( yintercept = inflection ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = rank_cutoff ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Rank\" , y = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) The inflection point looks like a reasonable number of cells. 1 2 3 4 # Filter the matrix res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) 37755 1095 Cell species \u00b6 How many cells are from humans and how many from mice? The number of cells with mixed species indicates doublet rate. 1 2 3 4 5 6 7 8 9 gene_species <- ifelse ( str_detect ( rownames ( res_mat ), \"^ENSMUSG\" ), \"mouse\" , \"human\" ) mouse_inds <- gene_species == \"mouse\" human_inds <- gene_species == \"human\" # mark cells as mouse or human cell_species <- tibble ( n_mouse_umi = Matrix :: colSums ( res_mat [ mouse_inds ,]), n_human_umi = Matrix :: colSums ( res_mat [ human_inds ,]), tot_umi = Matrix :: colSums ( res_mat ), prop_mouse = n_mouse_umi / tot_umi , prop_human = n_human_umi / tot_umi ) 1 2 3 4 5 6 7 # Classify species based on proportion of UMI, with cutoff of 90% cell_species <- cell_species %>% mutate ( species = case_when ( prop_mouse > 0.9 ~ \"mouse\" , prop_human > 0.9 ~ \"human\" , TRUE ~ \"mixed\" )) 1 2 ggplot ( cell_species , aes ( n_human_umi , n_mouse_umi , color = species )) + geom_point () Great, looks like the vast majority of cells are not mixed. 1 2 3 cell_species %>% dplyr :: count ( species ) %>% mutate ( proportion = n / ncol ( res_mat )) A tibble: 3 \u00d7 3 species n proportion <chr> <int> <dbl> human 566 0.516894977 mixed 3 0.002739726 mouse 526 0.480365297 Great, only about 0.3% of cells here are doublets, which is lower than the ~1% 10x lists. Doublet rate tends to be lower when cell concentration is lower. However, doublets can still be formed with cells from the same species, so the number of mixed species \"cells\" is only a lower bound of doublet rate. Dimension reduction \u00b6 1 2 seu <- CreateSeuratObject ( res_mat , min.cells = 3 ) %>% SCTransform ( verbose = FALSE ) 1 2 # Add species to meta data seu <- AddMetaData ( seu , metadata = cell_species $ species , col.name = \"species\" ) See how number of total counts and number of genes expressed are distributed. 1 VlnPlot ( seu , c ( \"nCount_RNA\" , \"nFeature_RNA\" ), group.by = \"species\" ) Another QC plot 1 2 3 ggplot ( seu @ meta.data , aes ( nCount_RNA , nFeature_RNA , color = species )) + geom_point () + labs ( x = \"Total UMI counts per cell\" , y = \"Number of genes detected\" ) The mixed species doublets do look different from human and mouse cells. 1 2 seu <- RunPCA ( seu , verbose = FALSE , npcs = 30 ) ElbowPlot ( seu , ndims = 30 ) 1 PCAPlot ( seu , group.by = \"species\" ) The first PC separates species, as expected. Also as expected, the doublets are in between human and mouse cells in this plot. 1 2 seu <- RunTSNE ( seu , dims = 1 : 20 , check_duplicates = FALSE ) TSNEPlot ( seu , group.by = \"species\" ) The species separate, and the few doublets form its own cluster, as expected.","title":"R"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#download-data","text":"The data set we are using here is 1k 1:1 Mixture of Fresh Frozen Human (HEK293T) and Mouse (NIH3T3) Cells from the 10x website. First, we download the fastq files (6.34 GB). 1 2 3 4 if ( ! dir.exists ( \"./data\" )) dir.create ( \"./data\" ) if ( ! file.exists ( \"./data/hgmm_1k_fastqs.tar\" )) { download.file ( \"http://cf.10xgenomics.com/samples/cell-exp/2.1.0/hgmm_1k/hgmm_1k_fastqs.tar\" , destfile = \"./data/hgmm_1k_fastqs.tar\" , quiet = TRUE ) } Then untar this file 1 untar ( \"./data/hgmm_1k_fastqs.tar\" , exdir = \"./data\" )","title":"Download data"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#generate-the-gene-count-matrix","text":"","title":"Generate the gene count matrix"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#build-the-kallisto-index","text":"Here we use kallisto to pseudoalign the reads to the transcriptome and then to create the bus file to be converted to a sparse matrix. The first step is to build an index of the transcriptome. This data set has both human and mouse cells, so we need both human and mouse transcriptomes. The transcriptomes downloaded here are from Ensembl version 99, the most recent version as of writing. 1 2 3 4 5 6 7 8 9 10 11 if ( ! dir.exists ( \"./reference\" )) dir.create ( \"./reference\" ) # Human transcriptome if ( ! file.exists ( \"./reference/hs_cdna.fa.gz\" )) { download.file ( \"ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz\" , \"./reference/hs_cdna.fa.gz\" , method = \"wget\" , quiet = TRUE ) } # Mouse transcriptome if ( ! file.exists ( \"./reference/mm_cdna.fa.gz\" )) { download.file ( \"ftp://ftp.ensembl.org/pub/release-99/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz\" , \"./reference/mm_cdna.fa.gz\" , method = \"wget\" , quiet = TRUE ) } 1 2 3 if ( ! file.exists ( \"./reference/hs_mm_tr_index.idx\" )) { system ( \"kallisto index -i ./reference/hs_mm_tr_index.idx ./reference/hs_cdna.fa.gz ./reference/mm_cdna.fa.gz\" ) } 1 2 tr2g <- map_dfr ( c ( \"./reference/hs_cdna.fa.gz\" , \"./reference/mm_cdna.fa.gz\" ), tr2g_fasta ) save_tr2g_bustools ( tr2g , \"./reference/hs_mm_tr2g.tsv\" ) Reading FASTA file. Reading FASTA file. 1 2 fastq_fns <- list.files ( \"./data/fastqs\" , full.name = TRUE ) fastq_fns <- fastq_fns [ str_detect ( fastq_fns , \"R\\\\d\" )] 1 fastq_fns './data/fastqs/hgmm_1k_S1_L001_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L001_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L002_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L002_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L003_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L003_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L004_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L004_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L005_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L005_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L006_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L006_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L007_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L007_R2_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L008_R1_001.fastq.gz' './data/fastqs/hgmm_1k_S1_L008_R2_001.fastq.gz' 1 2 system ( paste ( \"kb count -i reference/hs_mm_tr_index.idx -g reference/hs_mm_tr2g.tsv -x 10xv2 -o output\" , paste ( fastq_fns , collapse = \" \" ), sep = \" \" ), intern = TRUE ) See what the outputs are 1 list.files ( \"./output\" , recursive = TRUE ) '10xv2_whitelist.txt' 'counts_unfiltered/cells_x_genes.barcodes.txt' 'counts_unfiltered/cells_x_genes.genes.txt' 'counts_unfiltered/cells_x_genes.mtx' 'inspect.json' 'matrix.ec' 'output.bus' 'output.unfiltered.bus' 'run_info.json' 'transcripts.txt' Explaining the output: matrix.ec : A text file with two columns. The first column is the 0 based index of equivalence classes. The second column is the set of transcripts (denoted by 0 based index based on order of appearance in the transcriptome fasta file) present in the corresponding equivalence class. output.bus : The data represented in bus format. This is a binary file, so don't use something like read.table to read it into R. run_info.json : Information about the call to kallisto bus , including the command used, number and percentage of reads pseudoaligned, version of kallisto used, and etc. transcript.txt : A text file with one column, which is the transcripts present in the data, in the same order as in the transcriptome fasta file.","title":"Build the kallisto index"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#explore-the-data","text":"Now we can load the matrix into R for analysis. 1 2 res_mat <- read_count_output ( \"./output/counts_unfiltered\" , name = \"cells_x_genes\" , tcc = FALSE )","title":"Explore the data"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#remove-empty-droplets","text":"Cool, so now we have the sparse matrix. What does it look like? 1 dim ( res_mat ) 77202 362207 The number of genes is as expected for two species. There're way more cells than we expect, which is about 1000. So what's going on? How many UMIs per barcode? 1 2 tot_counts <- Matrix :: colSums ( res_mat ) summary ( tot_counts ) Min. 1st Qu. Median Mean 3rd Qu. Max. 0.00 1.00 1.00 76.04 8.00 74292.00 The vast majority of \"cells\" have only a few UMI detected. Those are empty droplets. 10x claims to have cell capture rate of up to 65%, but in practice, depending on how many cells are in fact loaded, the rate can be much lower. A commonly used method to estimate the number of empty droplets is barcode ranking knee and inflection points, as those are often assumed to represent transition between two components of a distribution. While more sophisticated method exist (e.g. see emptyDrops in DropletUtils ), for simplicity, we will use the barcode ranking method here. However, whichever way we go, we don't have the ground truth. 1 2 # Compute barcode rank bc_rank <- barcodeRanks ( res_mat ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #' Knee plot for filtering empty droplets #' #' Visualizes the inflection point to filter empty droplets. This function plots #' different datasets with a different color. Facets can be added after calling #' this function with `facet_*` functions. #' #' @param bc_rank A `DataFrame` output from `DropletUtil::barcodeRanks`. #' @return A ggplot2 object. knee_plot <- function ( bc_rank ) { knee_plt <- tibble ( rank = bc_rank [[ \"rank\" ]], total = bc_rank [[ \"total\" ]]) %>% distinct () %>% dplyr :: filter ( total > 0 ) annot <- tibble ( inflection = metadata ( bc_rank )[[ \"inflection\" ]], rank_cutoff = max ( bc_rank $ rank [ bc_rank $ total > metadata ( bc_rank )[[ \"inflection\" ]]])) p <- ggplot ( knee_plt , aes ( rank , total )) + geom_line () + geom_hline ( aes ( yintercept = inflection ), data = annot , linetype = 2 ) + geom_vline ( aes ( xintercept = rank_cutoff ), data = annot , linetype = 2 ) + scale_x_log10 () + scale_y_log10 () + annotation_logticks () + labs ( x = \"Rank\" , y = \"Total UMIs\" ) return ( p ) } 1 2 options ( repr.plot.width = 9 , repr.plot.height = 6 ) knee_plot ( bc_rank ) The inflection point looks like a reasonable number of cells. 1 2 3 4 # Filter the matrix res_mat <- res_mat [, tot_counts > metadata ( bc_rank ) $ inflection ] res_mat <- res_mat [ Matrix :: rowSums ( res_mat ) > 0 ,] dim ( res_mat ) 37755 1095","title":"Remove empty droplets"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#cell-species","text":"How many cells are from humans and how many from mice? The number of cells with mixed species indicates doublet rate. 1 2 3 4 5 6 7 8 9 gene_species <- ifelse ( str_detect ( rownames ( res_mat ), \"^ENSMUSG\" ), \"mouse\" , \"human\" ) mouse_inds <- gene_species == \"mouse\" human_inds <- gene_species == \"human\" # mark cells as mouse or human cell_species <- tibble ( n_mouse_umi = Matrix :: colSums ( res_mat [ mouse_inds ,]), n_human_umi = Matrix :: colSums ( res_mat [ human_inds ,]), tot_umi = Matrix :: colSums ( res_mat ), prop_mouse = n_mouse_umi / tot_umi , prop_human = n_human_umi / tot_umi ) 1 2 3 4 5 6 7 # Classify species based on proportion of UMI, with cutoff of 90% cell_species <- cell_species %>% mutate ( species = case_when ( prop_mouse > 0.9 ~ \"mouse\" , prop_human > 0.9 ~ \"human\" , TRUE ~ \"mixed\" )) 1 2 ggplot ( cell_species , aes ( n_human_umi , n_mouse_umi , color = species )) + geom_point () Great, looks like the vast majority of cells are not mixed. 1 2 3 cell_species %>% dplyr :: count ( species ) %>% mutate ( proportion = n / ncol ( res_mat )) A tibble: 3 \u00d7 3 species n proportion <chr> <int> <dbl> human 566 0.516894977 mixed 3 0.002739726 mouse 526 0.480365297 Great, only about 0.3% of cells here are doublets, which is lower than the ~1% 10x lists. Doublet rate tends to be lower when cell concentration is lower. However, doublets can still be formed with cells from the same species, so the number of mixed species \"cells\" is only a lower bound of doublet rate.","title":"Cell species"},{"location":"tutorials/kb_species_mixing/R/kb_mixed_species_10x_v2.html#dimension-reduction","text":"1 2 seu <- CreateSeuratObject ( res_mat , min.cells = 3 ) %>% SCTransform ( verbose = FALSE ) 1 2 # Add species to meta data seu <- AddMetaData ( seu , metadata = cell_species $ species , col.name = \"species\" ) See how number of total counts and number of genes expressed are distributed. 1 VlnPlot ( seu , c ( \"nCount_RNA\" , \"nFeature_RNA\" ), group.by = \"species\" ) Another QC plot 1 2 3 ggplot ( seu @ meta.data , aes ( nCount_RNA , nFeature_RNA , color = species )) + geom_point () + labs ( x = \"Total UMI counts per cell\" , y = \"Number of genes detected\" ) The mixed species doublets do look different from human and mouse cells. 1 2 seu <- RunPCA ( seu , verbose = FALSE , npcs = 30 ) ElbowPlot ( seu , ndims = 30 ) 1 PCAPlot ( seu , group.by = \"species\" ) The first PC separates species, as expected. Also as expected, the doublets are in between human and mouse cells in this plot. 1 2 seu <- RunTSNE ( seu , dims = 1 : 20 , check_duplicates = FALSE ) TSNEPlot ( seu , group.by = \"species\" ) The species separate, and the few doublets form its own cluster, as expected.","title":"Dimension reduction"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html","text":"Pre-processing and analysis of mixed-species single-cell RNA-seq data with kallisto|bustools. \u00b6 In this notebook, we will perform pre-processing and analysis of 10x Genomics 1k 1:1 mixure of fresh frozen human and mouse cells using the kallisto | bustools workflow, implemented with a wrapper called kb . It was developed by Kyung Hoi (Joseph) Min and A. Sina Booeshaghi. 1 !date Thu Jan 16 18:54:23 UTC 2020 Pre-processing \u00b6 Download the data \u00b6 Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 7 8 9 10 %%time !wget https://caltech.box.com/shared/static/8oeuskecfr9ujlufqj3b7frj74rxfzcc.txt -O checksums.txt !wget https://caltech.box.com/shared/static/ags4jxbqrceuqewb0zy7kyuuggazqb0j.gz -O 1k_hgmm_v3_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/39tknal6wm4lhvozu6bf6vczb475bnuu.gz -O 1k_hgmm_v3_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/x2hwq2q3weuggtffjfgd1e8a1m1y7wj9.gz -O 1k_hgmm_v3_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/0g7lnuieg8jxlxswrssdtz809gus75ek.gz -O 1k_hgmm_v3_S1_L002_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/0avmybuxqcw8haa1hf0n72oyb8zriiuu.gz -O 1k_hgmm_v3_S1_L003_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/hp10z2yr8u3lbzoj1qflz83r2v9ohs6q.gz -O 1k_hgmm_v3_S1_L003_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/fx8fduedje53dvf3xixyyaqzugn7yy85.gz -O 1k_hgmm_v3_S1_L004_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak.gz -O 1k_hgmm_v3_S1_L004_R2_001.fastq.gz -- 2020 - 01 - 16 18 : 54 : 36 -- https : // caltech . box . com / shared / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt [ following ] -- 2020 - 01 - 16 18 : 54 : 36 -- https : // caltech . box . com / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt [ following ] -- 2020 - 01 - 16 18 : 54 : 36 -- https : // caltech . app . box . com / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! bfmyuKChl9mlNrvM6NKR0M68SdDjLgsYPYDbhlX2FmS_ZXAPPd_pMhS3ctm - xienppt - TjTuthbN2Z0NFzY94kGDhyUbFSAeMBhJMo1RFQHlD - _pCmKgyFLg5jYM7fBGFWYC - PpKwd6Pna0Y6RwuNiHyTUZKJbep5tzrRhbXrlDEVRxwC6p3RcjJFo4GChO3XsdUhh_y8f7P6AAwynNro6pZPX2Vk8GbEsBwJi8Z9kfZNZAjk0cOFFLDgq0xAdnVH - _tT41ILHT7ANRV2jFLJM6vQCwHrUcfw1oB5O0pBRcuF8_X9EiMT1a60aRFo4HJRtinBP4 - Lc41oeOAcH2Q59666iK0NqrOZl2lnmF0xcrcpEectHpff - jg8AEZsqJ_4CdVQQnXVluT_w5kglccQYIpXDfkyGBB94Ib_v6wtBsXzwafxYg35z - RRk6XWYaRcx49SnxJNjAKlIdFOHcAmnfK - H7tk4QN1yW5V_fFe169MyBc2GShaX3ZOTAHW5HyRCscM0VycqQFhfN62ak3cXjxE6f - FA4l4qLqoCp5OsLQW6i - r_fefmo92TlnPHVHbUYZC - cCSfjZwEZiM0rnHnTDG_QacLNOMiicE6qYSQZ1cv2IpWWlzgTg9NFrun - cmjcne3kOvRQCVuhuiXb7yXCs8uoBJzDijBfepy6DF6TDkVFDANLdkkgO_8QziwmHKNsPLg7P - RF262lmtRnWtwvhW8XU9JFu0IJmnkG - UGeB4FBGxN28eRbAUxWzLm - KQe_rj - Ym0hRXnv7dg5zo_M2tQX6DK32pDHAaaqE832ta_iN0 - AR82yPDSElVA1VGOsHgjzjfeqPTvRuFnu5pf6aBHI5I1 - ppLMXKKQVauHJKKwV3dOBPrdGA2VLFVGVLgrX7FX1K7rzHk_tU7OUawhYHZO_Y44recX1svQLbFcX5KFp4MjfLaOI4W0z4gosUOH9lrb - XU23AQXhkKawuBk0Xf - 6 P_fsICcrguBvm2t41KpejEcJAwPl2JeKurRHIObdnuyXa9pPGhODme0T8HvNL9grmJXCV8BJfEQs0wDcc2NUWdftsLqh5ASwAncaIkflEELx0iC7T0V1zmMenqTVGkQUajYql4weAoUwejK4ELE07fYaXmed68yZvT_GEia5yj6i05udh6W_NcycQbmKsbHuI9rUhuiwjI3S1RlNxWCO9E - rs_WJoc20thLlDOGZ4XC0zTwRkaX19OK8A9qiKv48gUaqpHJlWBiRjQND7iSBG6rNU4oqF9105Mqi0rn1zrwxYtYIp - 2 OaF_PKqDLdzd8RZLO5_PfW1280fK45Xn2eUpioK48qZIIMuDP0En_91QnD_13RTFfM7hqU15BToeqDV9IIsNJe / download [ following ] -- 2020 - 01 - 16 18 : 54 : 37 -- https : // public . boxcloud . com / d / 1 / b1 ! bfmyuKChl9mlNrvM6NKR0M68SdDjLgsYPYDbhlX2FmS_ZXAPPd_pMhS3ctm - xienppt - TjTuthbN2Z0NFzY94kGDhyUbFSAeMBhJMo1RFQHlD - _pCmKgyFLg5jYM7fBGFWYC - PpKwd6Pna0Y6RwuNiHyTUZKJbep5tzrRhbXrlDEVRxwC6p3RcjJFo4GChO3XsdUhh_y8f7P6AAwynNro6pZPX2Vk8GbEsBwJi8Z9kfZNZAjk0cOFFLDgq0xAdnVH - _tT41ILHT7ANRV2jFLJM6vQCwHrUcfw1oB5O0pBRcuF8_X9EiMT1a60aRFo4HJRtinBP4 - Lc41oeOAcH2Q59666iK0NqrOZl2lnmF0xcrcpEectHpff - jg8AEZsqJ_4CdVQQnXVluT_w5kglccQYIpXDfkyGBB94Ib_v6wtBsXzwafxYg35z - RRk6XWYaRcx49SnxJNjAKlIdFOHcAmnfK - H7tk4QN1yW5V_fFe169MyBc2GShaX3ZOTAHW5HyRCscM0VycqQFhfN62ak3cXjxE6f - FA4l4qLqoCp5OsLQW6i - r_fefmo92TlnPHVHbUYZC - cCSfjZwEZiM0rnHnTDG_QacLNOMiicE6qYSQZ1cv2IpWWlzgTg9NFrun - cmjcne3kOvRQCVuhuiXb7yXCs8uoBJzDijBfepy6DF6TDkVFDANLdkkgO_8QziwmHKNsPLg7P - RF262lmtRnWtwvhW8XU9JFu0IJmnkG - UGeB4FBGxN28eRbAUxWzLm - KQe_rj - Ym0hRXnv7dg5zo_M2tQX6DK32pDHAaaqE832ta_iN0 - AR82yPDSElVA1VGOsHgjzjfeqPTvRuFnu5pf6aBHI5I1 - ppLMXKKQVauHJKKwV3dOBPrdGA2VLFVGVLgrX7FX1K7rzHk_tU7OUawhYHZO_Y44recX1svQLbFcX5KFp4MjfLaOI4W0z4gosUOH9lrb - XU23AQXhkKawuBk0Xf - 6 P_fsICcrguBvm2t41KpejEcJAwPl2JeKurRHIObdnuyXa9pPGhODme0T8HvNL9grmJXCV8BJfEQs0wDcc2NUWdftsLqh5ASwAncaIkflEELx0iC7T0V1zmMenqTVGkQUajYql4weAoUwejK4ELE07fYaXmed68yZvT_GEia5yj6i05udh6W_NcycQbmKsbHuI9rUhuiwjI3S1RlNxWCO9E - rs_WJoc20thLlDOGZ4XC0zTwRkaX19OK8A9qiKv48gUaqpHJlWBiRjQND7iSBG6rNU4oqF9105Mqi0rn1zrwxYtYIp - 2 OaF_PKqDLdzd8RZLO5_PfW1280fK45Xn2eUpioK48qZIIMuDP0En_91QnD_13RTFfM7hqU15BToeqDV9IIsNJe / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 816 [ text/plain ] Saving to : \u2018 checksums . txt \u2019 checksums . txt 100 %[ ===================> ] 816 -- . - KB / s in 0 s 2020 - 01 - 16 18 : 54 : 38 ( 89.8 MB / s ) - \u2018 checksums . txt \u2019 saved [ 816/816 ] -- 2020 - 01 - 16 18 : 54 : 39 -- https : // caltech . box . com / shared / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz [ following ] -- 2020 - 01 - 16 18 : 54 : 39 -- https : // caltech . box . com / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz [ following ] -- 2020 - 01 - 16 18 : 54 : 39 -- https : // caltech . app . box . com / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! oAVoFP4CGR1yzS3AhdhiaAdMAqPE05UNEXs7urCZBMlXrLO - eC_WoLKu2DicVApzVB9uFBwPyVG6qVvLSuO2q5RhwOFJXQEue5oTPrDX1Oelxh_0A28enjR8a7iNaqt2ez03RXB_1h0zIVpGjGSU6TRlA - x335MOdkAAggJljV_2P7TsmgUNHxPiA11T3Hfg - epxmbm0r - 0 dWrivQy5LVfIGMidRAgT6HtNUw2lhYJEDPBIJ97sN_Amcd8EaWdialvo4aARr9yyRptTpd9fbZe6n5yDW8DBL6PE - VKRFGKXHUi_RHseIWha - fuCnBFPujgex1nWiI4fvDDm3ZGgH7uzQTTnKItBddTOqcjZqGhAlyMXw4f4FMJyKTYgud4SudpKwPzRO0 - dI8YduzmDvbwTynwAqNq2tMiQ3tRfXp9sc7M3ePoKG1e2SuYipRCfb_i2CAb2p7hH8MwKFE9KyAPh44LJ6fZI4GP8bYEy92_K0qcSR1bm0T5FufAGP - Z8dmjX93Ck08JSed15BwlE2tT7nlqfCU1OeTyxHjxS7zDpTqAehjxuJyhfo8Yrc6z2Do8Yr_25MyEW_Cn7XBYYGqvcGQ0Cw2j2UQvtsxNstEQP3trK_PP44zUMmnewU269KOG0jLJvi3f65HkaOQf_o775BLbrZsVcOwg82qJ5uR3w - QQy50FHIag0bZJPy6dWqvvorsMDeFt5rrp - NdPlr818AoA4yti - Rxf63WQv1z0yrU2YeYNSNTeQZvAcGbhUJqepo6ohC9ogv5zgRBQF21l0GfDggPtV - gO - QMPh64LGho922p8KyLEDXRUg_8MLR - ZnjUs2C3Cdpw9Dnj1XtbH_EBg3efe_AYXV6UtgUb_AQIMjrD2L7W349IHfS5 - WKsuSPgx9go4Oxi9uCe0ydrH9157AZryUKvj1esq - O6CAYHTUpNSo1VW37VgcZxuKnLkBtvs82TVER9_cIwn0dT8vuOkCnKyYTwZbcWi1oAYimjpA7VuLh4vcFlAMZO0aq_Hni4QY0v4Z7JzcYxmcRTvbDJWsnH6EG7bUAkaLO90tyQ - cZcCVQQDpLRiX0EewF - tsqGqBLZPwhJ9uIrEysE85Epd3KzS59SuF7TIvaF7FD9uwKHZsg - MsZDMsXU4ms8SQvCmE7a43yQJHqJgO5zF38bYW_SVk_3qfcLLixG_3ALPapnYf4VFAob9c34TBKmaWLiLteSE - hPsMaLYABMf9PoCh2T9hlidzqvBrYP8RPPo9N4w - yrqidTRo - r1EGCXcBF9CfqeHSxaviQYa9F50dbqUBPXAA4gl4nxmZppjtFuidX3nx5dMkwLcnNriaE4S4S39XWyIsjo7SHWPWJEJp6c5goE6VOI8sP2 - LXKd7jMgl9iXCz - 69 nFWAvDCsCybxBxdMdek0t_qC0lYX3PYsN_B -/ download [ following ] -- 2020 - 01 - 16 18 : 54 : 40 -- https : // public . boxcloud . com / d / 1 / b1 ! oAVoFP4CGR1yzS3AhdhiaAdMAqPE05UNEXs7urCZBMlXrLO - eC_WoLKu2DicVApzVB9uFBwPyVG6qVvLSuO2q5RhwOFJXQEue5oTPrDX1Oelxh_0A28enjR8a7iNaqt2ez03RXB_1h0zIVpGjGSU6TRlA - x335MOdkAAggJljV_2P7TsmgUNHxPiA11T3Hfg - epxmbm0r - 0 dWrivQy5LVfIGMidRAgT6HtNUw2lhYJEDPBIJ97sN_Amcd8EaWdialvo4aARr9yyRptTpd9fbZe6n5yDW8DBL6PE - VKRFGKXHUi_RHseIWha - fuCnBFPujgex1nWiI4fvDDm3ZGgH7uzQTTnKItBddTOqcjZqGhAlyMXw4f4FMJyKTYgud4SudpKwPzRO0 - dI8YduzmDvbwTynwAqNq2tMiQ3tRfXp9sc7M3ePoKG1e2SuYipRCfb_i2CAb2p7hH8MwKFE9KyAPh44LJ6fZI4GP8bYEy92_K0qcSR1bm0T5FufAGP - Z8dmjX93Ck08JSed15BwlE2tT7nlqfCU1OeTyxHjxS7zDpTqAehjxuJyhfo8Yrc6z2Do8Yr_25MyEW_Cn7XBYYGqvcGQ0Cw2j2UQvtsxNstEQP3trK_PP44zUMmnewU269KOG0jLJvi3f65HkaOQf_o775BLbrZsVcOwg82qJ5uR3w - QQy50FHIag0bZJPy6dWqvvorsMDeFt5rrp - NdPlr818AoA4yti - Rxf63WQv1z0yrU2YeYNSNTeQZvAcGbhUJqepo6ohC9ogv5zgRBQF21l0GfDggPtV - gO - QMPh64LGho922p8KyLEDXRUg_8MLR - ZnjUs2C3Cdpw9Dnj1XtbH_EBg3efe_AYXV6UtgUb_AQIMjrD2L7W349IHfS5 - WKsuSPgx9go4Oxi9uCe0ydrH9157AZryUKvj1esq - O6CAYHTUpNSo1VW37VgcZxuKnLkBtvs82TVER9_cIwn0dT8vuOkCnKyYTwZbcWi1oAYimjpA7VuLh4vcFlAMZO0aq_Hni4QY0v4Z7JzcYxmcRTvbDJWsnH6EG7bUAkaLO90tyQ - cZcCVQQDpLRiX0EewF - tsqGqBLZPwhJ9uIrEysE85Epd3KzS59SuF7TIvaF7FD9uwKHZsg - MsZDMsXU4ms8SQvCmE7a43yQJHqJgO5zF38bYW_SVk_3qfcLLixG_3ALPapnYf4VFAob9c34TBKmaWLiLteSE - hPsMaLYABMf9PoCh2T9hlidzqvBrYP8RPPo9N4w - yrqidTRo - r1EGCXcBF9CfqeHSxaviQYa9F50dbqUBPXAA4gl4nxmZppjtFuidX3nx5dMkwLcnNriaE4S4S39XWyIsjo7SHWPWJEJp6c5goE6VOI8sP2 - LXKd7jMgl9iXCz - 69 nFWAvDCsCybxBxdMdek0t_qC0lYX3PYsN_B -/ download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 419837628 ( 400 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L001_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L001_ 100 %[ ===================> ] 400.39 M 16.4 MB / s in 25 s 2020 - 01 - 16 18 : 55 : 06 ( 16.0 MB / s ) - \u2018 1 k_hgmm_v3_S1_L001_R1_001 . fastq . gz \u2019 saved [ 419837628/419837628 ] -- 2020 - 01 - 16 18 : 55 : 07 -- https : // caltech . box . com / shared / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz [ following ] -- 2020 - 01 - 16 18 : 55 : 08 -- https : // caltech . box . com / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz [ following ] -- 2020 - 01 - 16 18 : 55 : 08 -- https : // caltech . app . box . com / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! eMeEHUzOmOGHx4f5b3u4YGvAAT_ZvAOou4Cdq - FhcruaF75WIj_4ktPNtpHE9MhcjGV9Zf4k8vUAmELv9i8U4ZYKMGd2ThQpny70Iw9WTklsVgfJ3F5dpQCA - MDosYM72KQHxse5bPCuG_4TUqfGDj3jntaMzVgv9aRnMBVf2a9Brzq4NZJGImlNQnIN9q4ZhKgfuFrrU5qoUSRJO2snYBdWw9VNf5EuXi3ZrlUWw7JKSMho_DYuM - s5REZZj_YMykt7l2wlY2E490vAeXj7FxU2P2heWW6uVLyfdDrGfFDpaB4XYIezd2KXHauKm8WQxZ1Kk9Mm - HGkRV9sqen_lvgzcu4o1dWiThdiIYN_ayiEqPIEsKef - NKnXn - LY1QpVR716vhuEX3vUkoSfddWiuG2cRC8RF_aLyRFEbLjk30oPbgP - aXhqWIuXaHHHfUJ9NoRetWsfkCG3bMWNOJn_OA1RP52tUKD9R7dhdiRkp83aCTTcod2pSR9VBOUvWNcb2b5X0HlR4Y - zyRo - ZXTL0QQZENrSzOCYUoFB - 3 RrepdxTjIhsiZte0mJKRA8TD68gR3dmcAv8kWB7e9gYdrSYleCl6xv_zhgIJSRQgmmB87KAmjepi9vSRflAVbLSvwzzPqIDroA5 - t2DnOt2mCCKQUusghM37RkwIY4l - 2 s8iRntB5JE - QGZdemCWl8PivZ5S8hE6toPtR9mHlZn8fYX9DaB5HtMnzP7McFIg0iFtuVW7PP6_yYDHxXpoFAVvvNDQ1BahrO3pTzjy - 1 nZobsjleqDdJkwvybDCOm8BAml4WQ1e - Gl5fFieTQEBNySygOT - uhA4XQvdYbz1okKHO5DASspk - UxRhOg81ySuJlr__6WOMd0xGEF7EgUDQCBYs_V8MPhy_ - 6 l4v7YkREDQAmKRrSUnrTYaG2MBZg9VH3F5mwh4UHf0us5zWXjNNdapZgD10ea9b6t7m9yRqxlOgeIHiV5KYuKuvti9IeF9zFNSHSUj5h0_zIdOSvf5EX54K - xinnIMh0fpdeZQOUkmoLX5EqJV_HBgxBTb0zCRXhxmrxplYkNfsOS2Bpb9QANXFIm49G__tjdP7ad - mIPVOEh7Vz3AFcS5f7eAvOx4zHCWsivQ9kCCUyKpuHWDC27EHtM_MTJzugZLCLZuhAC0V355fohXfa09QGr34l2nGJQ3WrnuJBMtmIDzYNFdT7iCyEpf_buJErlZqLVzIx4AxQKUrPXGSWgHB_tvELrfcYkoi53M9CAUJcEvou2KksxShc1GGTldmYrswP1j5_HIL21thqJYIE8KjZ4AoCd2WWJ4VnW3g53shEeWeUThpKue_cpDVujhQVBoWRa_ - HZ0xjEGHGDt4MD6SaQSlZklLaKgzGLmXvkp - U7Mg5Wry6LTtLo30xffseOxOx5QXCFw6swPyI . / download [ following ] -- 2020 - 01 - 16 18 : 55 : 09 -- https : // public . boxcloud . com / d / 1 / b1 ! eMeEHUzOmOGHx4f5b3u4YGvAAT_ZvAOou4Cdq - FhcruaF75WIj_4ktPNtpHE9MhcjGV9Zf4k8vUAmELv9i8U4ZYKMGd2ThQpny70Iw9WTklsVgfJ3F5dpQCA - MDosYM72KQHxse5bPCuG_4TUqfGDj3jntaMzVgv9aRnMBVf2a9Brzq4NZJGImlNQnIN9q4ZhKgfuFrrU5qoUSRJO2snYBdWw9VNf5EuXi3ZrlUWw7JKSMho_DYuM - s5REZZj_YMykt7l2wlY2E490vAeXj7FxU2P2heWW6uVLyfdDrGfFDpaB4XYIezd2KXHauKm8WQxZ1Kk9Mm - HGkRV9sqen_lvgzcu4o1dWiThdiIYN_ayiEqPIEsKef - NKnXn - LY1QpVR716vhuEX3vUkoSfddWiuG2cRC8RF_aLyRFEbLjk30oPbgP - aXhqWIuXaHHHfUJ9NoRetWsfkCG3bMWNOJn_OA1RP52tUKD9R7dhdiRkp83aCTTcod2pSR9VBOUvWNcb2b5X0HlR4Y - zyRo - ZXTL0QQZENrSzOCYUoFB - 3 RrepdxTjIhsiZte0mJKRA8TD68gR3dmcAv8kWB7e9gYdrSYleCl6xv_zhgIJSRQgmmB87KAmjepi9vSRflAVbLSvwzzPqIDroA5 - t2DnOt2mCCKQUusghM37RkwIY4l - 2 s8iRntB5JE - QGZdemCWl8PivZ5S8hE6toPtR9mHlZn8fYX9DaB5HtMnzP7McFIg0iFtuVW7PP6_yYDHxXpoFAVvvNDQ1BahrO3pTzjy - 1 nZobsjleqDdJkwvybDCOm8BAml4WQ1e - Gl5fFieTQEBNySygOT - uhA4XQvdYbz1okKHO5DASspk - UxRhOg81ySuJlr__6WOMd0xGEF7EgUDQCBYs_V8MPhy_ - 6 l4v7YkREDQAmKRrSUnrTYaG2MBZg9VH3F5mwh4UHf0us5zWXjNNdapZgD10ea9b6t7m9yRqxlOgeIHiV5KYuKuvti9IeF9zFNSHSUj5h0_zIdOSvf5EX54K - xinnIMh0fpdeZQOUkmoLX5EqJV_HBgxBTb0zCRXhxmrxplYkNfsOS2Bpb9QANXFIm49G__tjdP7ad - mIPVOEh7Vz3AFcS5f7eAvOx4zHCWsivQ9kCCUyKpuHWDC27EHtM_MTJzugZLCLZuhAC0V355fohXfa09QGr34l2nGJQ3WrnuJBMtmIDzYNFdT7iCyEpf_buJErlZqLVzIx4AxQKUrPXGSWgHB_tvELrfcYkoi53M9CAUJcEvou2KksxShc1GGTldmYrswP1j5_HIL21thqJYIE8KjZ4AoCd2WWJ4VnW3g53shEeWeUThpKue_cpDVujhQVBoWRa_ - HZ0xjEGHGDt4MD6SaQSlZklLaKgzGLmXvkp - U7Mg5Wry6LTtLo30xffseOxOx5QXCFw6swPyI . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 968233265 ( 923 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L001_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L001_ 100 %[ ===================> ] 923.38 M 15.9 MB / s in 60 s 2020 - 01 - 16 18 : 56 : 09 ( 15.4 MB / s ) - \u2018 1 k_hgmm_v3_S1_L001_R2_001 . fastq . gz \u2019 saved [ 968233265/968233265 ] -- 2020 - 01 - 16 18 : 56 : 11 -- https : // caltech . box . com / shared / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 11 -- https : // caltech . box . com / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 11 -- https : // caltech . app . box . com / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! 1 NvTdn9tUiR6SLQjou9XPBfP3IARW - Zvl - rfuaQwKGeKpakXmc_T1ALgvc8tt7nwNO5GQLgTmRLsnBzIvu1J7NeuOlb1hHe0W - xh3JFBNjG - bbl - 2 dfivsp6nYJhqlkzp3QwvDDGqfUBNIpviNYqBmgudZ4cBacwqGgS76XM4y7E7P9ZrE2taHquPWtTQeyYh - uJtNLFys4HEXOK79bMz1z9ToTAA_5tz_5gxYUzVv3gdy13lO2kt3_ZzEIPXmBUK4b6GRRpqjH7eVKj_GJR_UMCw - hCmAKLoKM099ZSHzaOdBFH8M4SxwKfms9MG_nX98wXtqpeaKviS7Fn67aPQdU00KQ6JAwsgZs7ATYS7Xf9nVvcSX133cvbRtPsmn - 9 k8O5Pk7xDV1lN_GdkzA56QOw72NX - tbKtkD_X8 - 4 hxiEPLIj51OITqEMDNoLSu4 - 1e0 MBmNcH83fShvUBUXDGfgE5k8OyNpuw7EKxgipU6mrZQwvvsfxBGrBy37f_WB0kcgrojNbP4N6UZXJIJlzhaH4lqY2Eoj2yfYkQ1YywsEvvN7nKtr7ByGcwZrhxDLzHDGlNpTyYeIf0uDaqjcgGmAUhwv_KZfAn31Fa7zhjq2tgR7vsdJV3dIYVoIwktid5tau2slGnS2KIF72i0zXeN3kdudKaM6t27W0fV4lBd8kG41EYZTd86ollhJ6hvAktgeDwSqvawzdL7me_SkPbhoEoT1dMiF3 - yxhyVwen17QxGETLH4wbmhJufBcr5umliRDi3yAquHiGVrqTboo5O7ezNIxuhjm6ExOH7OcHaxke2cJxv_faC - WHt8BWoh64ABbm_mRYAjY3AssacpRQ_VIrzGLWI_TRNWDRmHv7pPyS_JUTQTBT40OHcB4_nFtdQPZe7SnmEUcvq1YeXU6BF9NeV7BiG6kFFrWH - 4 tUSMN_u6XEGo_MG7uAWv9M6aHAUqjTY1UxwQPMVAsakQTjAKMsWg0LgdJTJ8zs7FW - uTgwFEbDVXgY18HYrHv61hhPmchK2cUIqi6p6JJ5Stir7LesvhtFaVWWeurSGvRDp6fFiDbBvPNzUWH7YI_SnyUVpC0ugLUR2RNAYBTgAgRO - HJqPASe1CEV0pE1zLs70 - Gn4EOsGWfYoYlqKfpshctoOi4 - NdEStPP - fpBVj0uOO604RRzb - L75ZVg9LRGaOXOWelLN6SE_b_W3aOrveb8xe7A2TU_7zX4lt1fEHthCBjCaT9fCOSWFdcIJRD4uYVJnKziwYh3ZR9pATvVIyVUUxMlgoIYTkId6wMcvSELUZ2yRD2YXmnbwOH889IEiBX - o4_HRxjuvMUqHLXaIVsvA8VvOh5XQCclwif5E3zIoXSXiYlLqdTEAJGN9lNz7xK_GZhiB0fnsgdWdyEcMvKEQWh1WjnFqO8ySAQFtGJlROErNP8 . / download [ following ] -- 2020 - 01 - 16 18 : 56 : 12 -- https : // public . boxcloud . com / d / 1 / b1 ! 1 NvTdn9tUiR6SLQjou9XPBfP3IARW - Zvl - rfuaQwKGeKpakXmc_T1ALgvc8tt7nwNO5GQLgTmRLsnBzIvu1J7NeuOlb1hHe0W - xh3JFBNjG - bbl - 2 dfivsp6nYJhqlkzp3QwvDDGqfUBNIpviNYqBmgudZ4cBacwqGgS76XM4y7E7P9ZrE2taHquPWtTQeyYh - uJtNLFys4HEXOK79bMz1z9ToTAA_5tz_5gxYUzVv3gdy13lO2kt3_ZzEIPXmBUK4b6GRRpqjH7eVKj_GJR_UMCw - hCmAKLoKM099ZSHzaOdBFH8M4SxwKfms9MG_nX98wXtqpeaKviS7Fn67aPQdU00KQ6JAwsgZs7ATYS7Xf9nVvcSX133cvbRtPsmn - 9 k8O5Pk7xDV1lN_GdkzA56QOw72NX - tbKtkD_X8 - 4 hxiEPLIj51OITqEMDNoLSu4 - 1e0 MBmNcH83fShvUBUXDGfgE5k8OyNpuw7EKxgipU6mrZQwvvsfxBGrBy37f_WB0kcgrojNbP4N6UZXJIJlzhaH4lqY2Eoj2yfYkQ1YywsEvvN7nKtr7ByGcwZrhxDLzHDGlNpTyYeIf0uDaqjcgGmAUhwv_KZfAn31Fa7zhjq2tgR7vsdJV3dIYVoIwktid5tau2slGnS2KIF72i0zXeN3kdudKaM6t27W0fV4lBd8kG41EYZTd86ollhJ6hvAktgeDwSqvawzdL7me_SkPbhoEoT1dMiF3 - yxhyVwen17QxGETLH4wbmhJufBcr5umliRDi3yAquHiGVrqTboo5O7ezNIxuhjm6ExOH7OcHaxke2cJxv_faC - WHt8BWoh64ABbm_mRYAjY3AssacpRQ_VIrzGLWI_TRNWDRmHv7pPyS_JUTQTBT40OHcB4_nFtdQPZe7SnmEUcvq1YeXU6BF9NeV7BiG6kFFrWH - 4 tUSMN_u6XEGo_MG7uAWv9M6aHAUqjTY1UxwQPMVAsakQTjAKMsWg0LgdJTJ8zs7FW - uTgwFEbDVXgY18HYrHv61hhPmchK2cUIqi6p6JJ5Stir7LesvhtFaVWWeurSGvRDp6fFiDbBvPNzUWH7YI_SnyUVpC0ugLUR2RNAYBTgAgRO - HJqPASe1CEV0pE1zLs70 - Gn4EOsGWfYoYlqKfpshctoOi4 - NdEStPP - fpBVj0uOO604RRzb - L75ZVg9LRGaOXOWelLN6SE_b_W3aOrveb8xe7A2TU_7zX4lt1fEHthCBjCaT9fCOSWFdcIJRD4uYVJnKziwYh3ZR9pATvVIyVUUxMlgoIYTkId6wMcvSELUZ2yRD2YXmnbwOH889IEiBX - o4_HRxjuvMUqHLXaIVsvA8VvOh5XQCclwif5E3zIoXSXiYlLqdTEAJGN9lNz7xK_GZhiB0fnsgdWdyEcMvKEQWh1WjnFqO8ySAQFtGJlROErNP8 . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 423258946 ( 404 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L002_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L002_ 100 %[ ===================> ] 403.65 M 15.1 MB / s in 27 s 2020 - 01 - 16 18 : 56 : 40 ( 14.7 MB / s ) - \u2018 1 k_hgmm_v3_S1_L002_R1_001 . fastq . gz \u2019 saved [ 423258946/423258946 ] -- 2020 - 01 - 16 18 : 56 : 42 -- https : // caltech . box . com / shared / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 43 -- https : // caltech . box . com / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 43 -- https : // caltech . app . box . com / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! 79 kAcHiZNW1K0g5DJlFaxIrBmP9Lq0jf5EpmyiR7Sgmpy5ctAFebeM - PuXcpFbOoZEVu0hOonAmRI11mSlDHIhd1ztkuqmhijupOwUo7xeD_Jl68Q_E_Vs9Jz_MU6SVcuHDI5OLiKU6pniutDYlW8FTIVxkdNG2nw9C99R1P - nbP4kj6KvqGcipyBI - 4 eA4OnXMZde9VFAYCGYl2RGZSph0rQElMBLu0urlryCZ2PCuX0uilIfwLVcNnXCZYI_fYR1__Mrlw9lvqjSovNgNZQzjuOT07UTailKUdPgOYlpDBqqmJGlOkZ2nunT5LMEZdiMl5U5t2mvYbnOwDiM05AGuANMoOBzkW4ysBJMPuKFV8M6YIUfQbZ6Pjh8RO3TKzCdAO_MTR__q1LElgeVWWD3hE_DFc5nJ19VsLfbdXwJca9ZFIsRsFF4yQRhYZIyi5IeI - pp0rBwQ - Ze8LQZBbH2U1_A6hkPwsE5Lrqlwc7wT2YFalTtNA6fbQc - 6 qzeQ70iiTEZiq11jJCfiHKMqijXzX8ctXu3aWg9XnrEhOsAzrejMVH6NrcbS_agMkEp5zJF1Bv3yqRhta6iAlLI7OE6 - Ccobtjpqgi2zwK3CppNPR65ORDdNSRtPqASkyAjzdbImfPioH71zKoOGXUEq7IcyDlN - Sc2B799voZko_pjbBVwkaJraT1yYaHyuHhHfFF - U - O_T0OQkPnbikjUAZJsazPd - hh8h_Syv1LyAKNMLPAMEfD3wfJuqoEpGmDfEX_h1uaBQOZk8NGlrXfJ0LJl3uMsb60OKA4_Q7NNyKK - B0Pc0A41zzpSURCs37vvG6Dm_uZY5xCCKwL85fBvUuKycZS7X5icUmbGb8Szmpysltr4UpZtFmJ0 - 4 WDAT0a9d0vNjEKsaYQeMSnQpocmLd52Q_6HJlP7aB_GugleSsn8bOTbwax6UAdt816rXQuUm30Jx1ZsjuErfb3flmf7jZ1O1gVzsgue0 - wzFdRRgabhWs_kxajgmEn_UnhzrsNFTkfgu06LTvaX - z4N3VM4JotiC - wsMJLusgZOaMhgou_z9zjR7XUx_1u3AsPm8gUUUeH5mx - WVxRcvqLSd7iLOqy3thk - DWb0700eAyocZj - V5b2Tu9OSfeT7x9lPv9bsipB9z8Gvtdq8 - _jgmc80Fq0s5NfGthlD7M5eJ_jVfXaj - dqwGTC6jvo3KpDggzsWVYvyZgEkL9my3yXKUqBAaEIHhMAjgVbkNGc3J_iaK7UiJvQgjNy2hcVWnIH1mcd_o3gVYSkwI8FJcmgPCEx3v_x9HrIu0Z5qSmnCn0q - ZbmuqlA443AOCv3sG99AH7CJxus25S_Fku_pzeIUCCCXbQmQBmeMEeM503xzfNo3lj7U0Oi4yaXTZoUMIwWwu_UJNJKU76gb9YbjzVcS - 5 - sc - lGaShA . / download [ following ] -- 2020 - 01 - 16 18 : 56 : 44 -- https : // public . boxcloud . com / d / 1 / b1 ! 79 kAcHiZNW1K0g5DJlFaxIrBmP9Lq0jf5EpmyiR7Sgmpy5ctAFebeM - PuXcpFbOoZEVu0hOonAmRI11mSlDHIhd1ztkuqmhijupOwUo7xeD_Jl68Q_E_Vs9Jz_MU6SVcuHDI5OLiKU6pniutDYlW8FTIVxkdNG2nw9C99R1P - nbP4kj6KvqGcipyBI - 4 eA4OnXMZde9VFAYCGYl2RGZSph0rQElMBLu0urlryCZ2PCuX0uilIfwLVcNnXCZYI_fYR1__Mrlw9lvqjSovNgNZQzjuOT07UTailKUdPgOYlpDBqqmJGlOkZ2nunT5LMEZdiMl5U5t2mvYbnOwDiM05AGuANMoOBzkW4ysBJMPuKFV8M6YIUfQbZ6Pjh8RO3TKzCdAO_MTR__q1LElgeVWWD3hE_DFc5nJ19VsLfbdXwJca9ZFIsRsFF4yQRhYZIyi5IeI - pp0rBwQ - Ze8LQZBbH2U1_A6hkPwsE5Lrqlwc7wT2YFalTtNA6fbQc - 6 qzeQ70iiTEZiq11jJCfiHKMqijXzX8ctXu3aWg9XnrEhOsAzrejMVH6NrcbS_agMkEp5zJF1Bv3yqRhta6iAlLI7OE6 - Ccobtjpqgi2zwK3CppNPR65ORDdNSRtPqASkyAjzdbImfPioH71zKoOGXUEq7IcyDlN - Sc2B799voZko_pjbBVwkaJraT1yYaHyuHhHfFF - U - O_T0OQkPnbikjUAZJsazPd - hh8h_Syv1LyAKNMLPAMEfD3wfJuqoEpGmDfEX_h1uaBQOZk8NGlrXfJ0LJl3uMsb60OKA4_Q7NNyKK - B0Pc0A41zzpSURCs37vvG6Dm_uZY5xCCKwL85fBvUuKycZS7X5icUmbGb8Szmpysltr4UpZtFmJ0 - 4 WDAT0a9d0vNjEKsaYQeMSnQpocmLd52Q_6HJlP7aB_GugleSsn8bOTbwax6UAdt816rXQuUm30Jx1ZsjuErfb3flmf7jZ1O1gVzsgue0 - wzFdRRgabhWs_kxajgmEn_UnhzrsNFTkfgu06LTvaX - z4N3VM4JotiC - wsMJLusgZOaMhgou_z9zjR7XUx_1u3AsPm8gUUUeH5mx - WVxRcvqLSd7iLOqy3thk - DWb0700eAyocZj - V5b2Tu9OSfeT7x9lPv9bsipB9z8Gvtdq8 - _jgmc80Fq0s5NfGthlD7M5eJ_jVfXaj - dqwGTC6jvo3KpDggzsWVYvyZgEkL9my3yXKUqBAaEIHhMAjgVbkNGc3J_iaK7UiJvQgjNy2hcVWnIH1mcd_o3gVYSkwI8FJcmgPCEx3v_x9HrIu0Z5qSmnCn0q - ZbmuqlA443AOCv3sG99AH7CJxus25S_Fku_pzeIUCCCXbQmQBmeMEeM503xzfNo3lj7U0Oi4yaXTZoUMIwWwu_UJNJKU76gb9YbjzVcS - 5 - sc - lGaShA . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 973374355 ( 928 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L002_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L002_ 100 %[ ===================> ] 928.28 M 13.0 MB / s in 75 s 2020 - 01 - 16 18 : 57 : 59 ( 12.3 MB / s ) - \u2018 1 k_hgmm_v3_S1_L002_R2_001 . fastq . gz \u2019 saved [ 973374355/973374355 ] -- 2020 - 01 - 16 18 : 58 : 00 -- https : // caltech . box . com / shared / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 01 -- https : // caltech . box . com / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 01 -- https : // caltech . app . box . com / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! zHrLG8OVxmbu_X5CCalwcI9XsSk7skfol3wOewRa56Hh9VPV0leflqfgU2rRSijvIjZ4Ro - jMVv0IWuh4koUegkVcoA7BnwUObdAITHF7CoIROzymgqEFYNucz19Xj400z6VJREgqtuADoCurcPaDjgYNeFtpuw6sneQpa0GqTi256k1hVbcxsbU_tmbBygR9TE1bHjNsrAqpu_J - 2 u_A9ppq - JHToyKwktrckM7bXshBgtIYMScGTYPgqaMnFQixuzhEb8e0jzdL7GFC84nBTkIvgaS7pExnd10ER3cYqOPpZrASu97cl0dZ6wxIvqYl85 - VFchjZXUwxc5afybt_lKOqSp8iMoPgggnFbZlFz261oQ3NvRAwvm5oFWWyZNAggGVorUweh - UQARGRYU4JD9VZKElwKD758BmYwa3pmGNhf5W95hSLze5Tpp47n8Hdl40QpPN0V60_y2nz2f7x - eMtOuoxU_KoWjMGG9Nr6WHKgFXpv - kKq9rAeTsmepkMFQDQmkKsvtQzi - 9 eNEg1DaBCBgLkdBz9a - 1 LhBut4Jx8D54 - uiroZCG5bvBLryJlYuNtkjAW8ickBx9_KBcDNBhQsN0RyeN3DIhTlHTo6EC41HkInwoYSMw0Nmq3zU - jtU4wRxz7b49w1C7foZ0miiONEz1azwAb9eN7PBQatyPfNbPAqaZo2z09fwjthYFrv0gSEYBkweo - Wn6HCUVeUdpnYd3j4F1KEA8KWmMPw7ZG - e5IO9jvChfUBtKXmFTDkECC - f_ORBlG1q6WuP6hgFZpuI1vWnKwVqHrx7CKHaazb7oNKz0M73F8Sbd5uc63v4i0I3crPsBBbrX2GwKqWiSm23TkZrBxOsIAkKtV1Vfjic4ji4UJ4W7_iP5FxyVrMLBE8rJpng53sochm0k4zx5ZcPvJPUz765el3U4aV_D4sf - hA66yEy_W9EG7zW4W2cZY1k9jrNCavoUP9z8zS9d - uNDeDlbBKfd72TYDers2xmoqSNWD447fiSGQ_YjKAQqhUTxPstLbdg3b2zzgm3hFccjMaR2bgmJxz8XvBGKGVnMochQKC89Asy0jnWAdjfA9gjidBe20oyTHoWLiNUuDl - L3j_cR4Aa - dc4ipXAQj31IciinSx3M54DvkqHVhYHDlzuagrfFqGzEF7grhJXs_sQHmFkUQsaTdF6eDZNVt_8L8w3Raw6nwQXT4Y3gG6XHIGwBSJeNTMMMEZdHZFXB5gahsZkFKJy_3sq2cPC8PgM3du5E4qv8ZPzP98AJfdY81khyCQefsshOw7hcNMqS_zL8r12AIlH_WR524K89BvHwDq6y7D7anHez39wJTmZYZOnYQ_ - OSyToo_6blIztoIuKpqLL3u4NwaO5jEV5GqhExBVsrw4U_dYtJaKbyK - OCu4HW2G_IGxOBVZ9SqBe0 . / download [ following ] -- 2020 - 01 - 16 18 : 58 : 02 -- https : // public . boxcloud . com / d / 1 / b1 ! zHrLG8OVxmbu_X5CCalwcI9XsSk7skfol3wOewRa56Hh9VPV0leflqfgU2rRSijvIjZ4Ro - jMVv0IWuh4koUegkVcoA7BnwUObdAITHF7CoIROzymgqEFYNucz19Xj400z6VJREgqtuADoCurcPaDjgYNeFtpuw6sneQpa0GqTi256k1hVbcxsbU_tmbBygR9TE1bHjNsrAqpu_J - 2 u_A9ppq - JHToyKwktrckM7bXshBgtIYMScGTYPgqaMnFQixuzhEb8e0jzdL7GFC84nBTkIvgaS7pExnd10ER3cYqOPpZrASu97cl0dZ6wxIvqYl85 - VFchjZXUwxc5afybt_lKOqSp8iMoPgggnFbZlFz261oQ3NvRAwvm5oFWWyZNAggGVorUweh - UQARGRYU4JD9VZKElwKD758BmYwa3pmGNhf5W95hSLze5Tpp47n8Hdl40QpPN0V60_y2nz2f7x - eMtOuoxU_KoWjMGG9Nr6WHKgFXpv - kKq9rAeTsmepkMFQDQmkKsvtQzi - 9 eNEg1DaBCBgLkdBz9a - 1 LhBut4Jx8D54 - uiroZCG5bvBLryJlYuNtkjAW8ickBx9_KBcDNBhQsN0RyeN3DIhTlHTo6EC41HkInwoYSMw0Nmq3zU - jtU4wRxz7b49w1C7foZ0miiONEz1azwAb9eN7PBQatyPfNbPAqaZo2z09fwjthYFrv0gSEYBkweo - Wn6HCUVeUdpnYd3j4F1KEA8KWmMPw7ZG - e5IO9jvChfUBtKXmFTDkECC - f_ORBlG1q6WuP6hgFZpuI1vWnKwVqHrx7CKHaazb7oNKz0M73F8Sbd5uc63v4i0I3crPsBBbrX2GwKqWiSm23TkZrBxOsIAkKtV1Vfjic4ji4UJ4W7_iP5FxyVrMLBE8rJpng53sochm0k4zx5ZcPvJPUz765el3U4aV_D4sf - hA66yEy_W9EG7zW4W2cZY1k9jrNCavoUP9z8zS9d - uNDeDlbBKfd72TYDers2xmoqSNWD447fiSGQ_YjKAQqhUTxPstLbdg3b2zzgm3hFccjMaR2bgmJxz8XvBGKGVnMochQKC89Asy0jnWAdjfA9gjidBe20oyTHoWLiNUuDl - L3j_cR4Aa - dc4ipXAQj31IciinSx3M54DvkqHVhYHDlzuagrfFqGzEF7grhJXs_sQHmFkUQsaTdF6eDZNVt_8L8w3Raw6nwQXT4Y3gG6XHIGwBSJeNTMMMEZdHZFXB5gahsZkFKJy_3sq2cPC8PgM3du5E4qv8ZPzP98AJfdY81khyCQefsshOw7hcNMqS_zL8r12AIlH_WR524K89BvHwDq6y7D7anHez39wJTmZYZOnYQ_ - OSyToo_6blIztoIuKpqLL3u4NwaO5jEV5GqhExBVsrw4U_dYtJaKbyK - OCu4HW2G_IGxOBVZ9SqBe0 . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 421486566 ( 402 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L003_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L003_ 100 %[ ===================> ] 401.96 M 16.8 MB / s in 25 s 2020 - 01 - 16 18 : 58 : 28 ( 16.2 MB / s ) - \u2018 1 k_hgmm_v3_S1_L003_R1_001 . fastq . gz \u2019 saved [ 421486566/421486566 ] -- 2020 - 01 - 16 18 : 58 : 29 -- https : // caltech . box . com / shared / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 29 -- https : // caltech . box . com / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 29 -- https : // caltech . app . box . com / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! LNaWTLUQ - vxEPA9_tHQ4uDYdxzj - 1 zQ5BQ6bOusms_Y99Z8R8PZNzG_fYT4TROauq - YdTB9GtbP4dfwW_zRVQJ8CGgLSskQSK0I06Z_JI9uY0lvn39jSklO1R9c0EJk8uYJGyPErMQEIv2PGFv0R6X - loY3xReq_f8qlO6nH3xycTSaVs3tJ5DNQQvPyGa0UVXs2zpKVI_jsxCvOI_rn - _W - AS5hurrs4NSi_KQfe - phIxvzJoeN35otkm7WFj4Uqr9yY9JR6rdar458hlWkM35o - hBdoEqfEX7bjbUwVYhCLUX - KVdym_gNuWpLlUokqiSB7mRbila0_zyiOnuYp41r1uo4B_MQfGefTPi4Sft - uDSEMbpebxDvwgVO - 6 TXrjy41ltLydUSTl8npGK0HpGiwfq - 4 dyZGf9HC6AlVcsnW3i6o - naZaP0Q25Vy2YGVfXPODqEo8HF0VRYUC6JuisLHQbPoN_2MCD3Ba - rY60XzosXWzTojVRQWbBRSUZR4Bj - fYfo7TPndzkmbVUgnmYpi_twtu0O8B9VwkKYBR5EYrVsPiR00O1TxrXMpApFnyNCPG5PlNmktvYX_yst2dSsZJtxLoykEJIKTCHOVfpze_J8YJhBcGIFmlLp7I7I8dlxJlZ125zWRWlIEg0gv3ihFtl7Xm6F_0KlgZ67hsjXyW6Wi45hiyOxOsO1n8z9n0BlMMPpOHX_DsC3kz0D4SM - 9 XKHivQ8fWcMIND5ZWY0azA0kA0Hk0r22DgKgBozCl2QTw9_2taOyIMeZaRMCxVDX6Eh2X4r6XAMSjzmzpVlQXQwm1u4 - dBMokk8ExwLmi1ViKiCfoOpmE6SSkE2tODHCGTwkEkHWbUe1zz2cEhTsjxwv1P2Frq8RrcAn4cn_3bZ5EHhzE9Rsrp5xQFAd60sAo3s76fvholiwvj4v16bT8FSxBuL456yOC5PmyKAkanksb8UAyZiMM2RwzRmVLr4WGeRehVPwl4E11LkIiKCm3OVZ2aYx3lKMNdAw9VqvQn3rkT1fsS86iz7UGnHS - HIWi6RtMJRFs4zFcsHmUozCUNC9gbkqCWPdpYUffYjzvD6Mrw7Lj2lTjfKlVCF1 - YnbWNxREmSyREwCt - MbZ31C08p0XFCsPUhUQTfSHLzmghuCB2MHhDJhN_hIftJGflZUq - 4 pQksPHR3uXl2P - zZiObYWDzVt5KqmKUbVn0FVmVYruayzYYJDZ9NQF_jSJ - RNgPXT6kVbZqJfu5_lME07vaKluqNHhgrh3m5TAb7Acy6g7kaIGa - Ap4vQ1DYDooIHPbDrQGSbaiEW_p3KqNG4eFjgmoHarBFAcN3CqcJB2gmykPa8nCLn9oWt4Va6Ag0YXg9F8R9Va37PGTe9 - HIzi0MVn - RAAmz - 1 M5WFnonQ0KUfTB5qfGpumhQ8MB3ELERMg . / download [ following ] -- 2020 - 01 - 16 18 : 58 : 30 -- https : // public . boxcloud . com / d / 1 / b1 ! LNaWTLUQ - vxEPA9_tHQ4uDYdxzj - 1 zQ5BQ6bOusms_Y99Z8R8PZNzG_fYT4TROauq - YdTB9GtbP4dfwW_zRVQJ8CGgLSskQSK0I06Z_JI9uY0lvn39jSklO1R9c0EJk8uYJGyPErMQEIv2PGFv0R6X - loY3xReq_f8qlO6nH3xycTSaVs3tJ5DNQQvPyGa0UVXs2zpKVI_jsxCvOI_rn - _W - AS5hurrs4NSi_KQfe - phIxvzJoeN35otkm7WFj4Uqr9yY9JR6rdar458hlWkM35o - hBdoEqfEX7bjbUwVYhCLUX - KVdym_gNuWpLlUokqiSB7mRbila0_zyiOnuYp41r1uo4B_MQfGefTPi4Sft - uDSEMbpebxDvwgVO - 6 TXrjy41ltLydUSTl8npGK0HpGiwfq - 4 dyZGf9HC6AlVcsnW3i6o - naZaP0Q25Vy2YGVfXPODqEo8HF0VRYUC6JuisLHQbPoN_2MCD3Ba - rY60XzosXWzTojVRQWbBRSUZR4Bj - fYfo7TPndzkmbVUgnmYpi_twtu0O8B9VwkKYBR5EYrVsPiR00O1TxrXMpApFnyNCPG5PlNmktvYX_yst2dSsZJtxLoykEJIKTCHOVfpze_J8YJhBcGIFmlLp7I7I8dlxJlZ125zWRWlIEg0gv3ihFtl7Xm6F_0KlgZ67hsjXyW6Wi45hiyOxOsO1n8z9n0BlMMPpOHX_DsC3kz0D4SM - 9 XKHivQ8fWcMIND5ZWY0azA0kA0Hk0r22DgKgBozCl2QTw9_2taOyIMeZaRMCxVDX6Eh2X4r6XAMSjzmzpVlQXQwm1u4 - dBMokk8ExwLmi1ViKiCfoOpmE6SSkE2tODHCGTwkEkHWbUe1zz2cEhTsjxwv1P2Frq8RrcAn4cn_3bZ5EHhzE9Rsrp5xQFAd60sAo3s76fvholiwvj4v16bT8FSxBuL456yOC5PmyKAkanksb8UAyZiMM2RwzRmVLr4WGeRehVPwl4E11LkIiKCm3OVZ2aYx3lKMNdAw9VqvQn3rkT1fsS86iz7UGnHS - HIWi6RtMJRFs4zFcsHmUozCUNC9gbkqCWPdpYUffYjzvD6Mrw7Lj2lTjfKlVCF1 - YnbWNxREmSyREwCt - MbZ31C08p0XFCsPUhUQTfSHLzmghuCB2MHhDJhN_hIftJGflZUq - 4 pQksPHR3uXl2P - zZiObYWDzVt5KqmKUbVn0FVmVYruayzYYJDZ9NQF_jSJ - RNgPXT6kVbZqJfu5_lME07vaKluqNHhgrh3m5TAb7Acy6g7kaIGa - Ap4vQ1DYDooIHPbDrQGSbaiEW_p3KqNG4eFjgmoHarBFAcN3CqcJB2gmykPa8nCLn9oWt4Va6Ag0YXg9F8R9Va37PGTe9 - HIzi0MVn - RAAmz - 1 M5WFnonQ0KUfTB5qfGpumhQ8MB3ELERMg . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 970486795 ( 926 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L003_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L003_ 100 %[ ===================> ] 925.53 M 15.6 MB / s in 60 s 2020 - 01 - 16 18 : 59 : 30 ( 15.5 MB / s ) - \u2018 1 k_hgmm_v3_S1_L003_R2_001 . fastq . gz \u2019 saved [ 970486795/970486795 ] -- 2020 - 01 - 16 18 : 59 : 32 -- https : // caltech . box . com / shared / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz [ following ] -- 2020 - 01 - 16 18 : 59 : 32 -- https : // caltech . box . com / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz [ following ] -- 2020 - 01 - 16 18 : 59 : 33 -- https : // caltech . app . box . com / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! imbmg2pYPv4x_SlBgRNQE5NOR5aNqtkjYk - YINStXZGTaCj8buOftPVEncitP7br6ug5kpmYANYKROeXMtjOfORToRAZg24MIIVLjG7Z7tuYdgBMo - 2 o2S8YCrolfWwUMYgsv0y9qSb0RNQZx6OpB1Tbq9eiUjn9YW7vKQ1_QA6tY10HgzSI_HbcPPStqpen8U0JasrqZ8g3OUw7MRx2m5JYuDYV3BbCiMVdah5HDBk_Ce53T5cJL8uKuMoxNHqgohQ6vL8pLZLlLCqoPjbhKWeTyxnyVFTxL - ke_OyllVx8kaC3F4HqNwGf1fWm6bcxi8H7 - 0 mnlBY36qP5MrZ3sw6EPdP6Wq3o - 4 WcMggxXn0cxqxRkXbWfZm1l0tXdY_MtzavlsLZgx - biwOvAhZ6vFwL0hTAxuRdX59nxersZ3bgDvW2HJZnHTlShvRJzEIjZeJzp1lFQPz0MlQYiNh2Tj5T182PED8BoFWvrSd2Ft0nmZ3dkOTvqYikpI7kxR0aR6TCtxZQZXYssb5QYmvJ - wfhBY7ta - Kxezx9rxQvBZWGuv1tUkULoGt9hlB_MK1knySnTuYaZSHtpa46vzuLKQUVsy6rdfHsjjhkPfSP8vsz6OsunPIesENH7OaIPOAPcaOSdAaSKL7TNUeGa0_E5RcUugz8adLWcER12bG6zeo8 - wqbYIr32IuH1VRIW6U2szmSMdJ60sssRXHeapkuPcyOlnq4kqrtbXYkATHsJDw0PAd88_B1Bl16LEEFy6BpgcL1gLBCYDOZivVEzv2ZJh2o5PptBIPnWWbdCZxIfvMcFCUo1Z9OA - BYlUL9YrsaAZP3Ndb_U78Vv6y0H0ENJudx8LchOXWrV6hnHuILUpq16KmyxRWTF4CPey05hNLhSQGvv9KSIR1E05sU7lQHjFK3BttPkoQlk1oA8aAjXASIG72lHNztLblGj9jxrOBJ6k0sfSfC - aRgT0MntN_YghdiZq8jmRqQP0jx34D2gAagtPhyC7JhmAA44fEpx2Syjr2yS4mH3IdWCfPAKeG4M3MvpLKmTXi9enaYqHXCPrqoll_lYB8VwKXDSdzIZayUyCCBLGd4rLuVGCuceeQ8xJxoRG4LDAqwf97 - Qh5tMucrZ3K6aRGBT - L0YqZROgcE_Wtvw6oRFt7F - 6 y7a3eVx2BoKagRPm11GEOgKFZfZi8IOL5seAs9PSqTqwdZN9_FmcB0M5FQDTyAfHy - Xb0TsUmmz_UceeMxz5QQcqY - F36YoCw3UUwv4QbgTTahuRcpHFCfOh1mK3k2glKu_2LPxhIsDBhuijDaMwO - o5HHnsuYmBC1VhZfmWE9suqaC4RZxGCyHrYLhuGytTao99b_A1Mov - eK0Zg7SohrntkpvncgUa1kbEOGE3yP9eOvT985RAa2uxkGonWxQpxOeiq1awWwT79Q / download [ following ] -- 2020 - 01 - 16 18 : 59 : 33 -- https : // public . boxcloud . com / d / 1 / b1 ! imbmg2pYPv4x_SlBgRNQE5NOR5aNqtkjYk - YINStXZGTaCj8buOftPVEncitP7br6ug5kpmYANYKROeXMtjOfORToRAZg24MIIVLjG7Z7tuYdgBMo - 2 o2S8YCrolfWwUMYgsv0y9qSb0RNQZx6OpB1Tbq9eiUjn9YW7vKQ1_QA6tY10HgzSI_HbcPPStqpen8U0JasrqZ8g3OUw7MRx2m5JYuDYV3BbCiMVdah5HDBk_Ce53T5cJL8uKuMoxNHqgohQ6vL8pLZLlLCqoPjbhKWeTyxnyVFTxL - ke_OyllVx8kaC3F4HqNwGf1fWm6bcxi8H7 - 0 mnlBY36qP5MrZ3sw6EPdP6Wq3o - 4 WcMggxXn0cxqxRkXbWfZm1l0tXdY_MtzavlsLZgx - biwOvAhZ6vFwL0hTAxuRdX59nxersZ3bgDvW2HJZnHTlShvRJzEIjZeJzp1lFQPz0MlQYiNh2Tj5T182PED8BoFWvrSd2Ft0nmZ3dkOTvqYikpI7kxR0aR6TCtxZQZXYssb5QYmvJ - wfhBY7ta - Kxezx9rxQvBZWGuv1tUkULoGt9hlB_MK1knySnTuYaZSHtpa46vzuLKQUVsy6rdfHsjjhkPfSP8vsz6OsunPIesENH7OaIPOAPcaOSdAaSKL7TNUeGa0_E5RcUugz8adLWcER12bG6zeo8 - wqbYIr32IuH1VRIW6U2szmSMdJ60sssRXHeapkuPcyOlnq4kqrtbXYkATHsJDw0PAd88_B1Bl16LEEFy6BpgcL1gLBCYDOZivVEzv2ZJh2o5PptBIPnWWbdCZxIfvMcFCUo1Z9OA - BYlUL9YrsaAZP3Ndb_U78Vv6y0H0ENJudx8LchOXWrV6hnHuILUpq16KmyxRWTF4CPey05hNLhSQGvv9KSIR1E05sU7lQHjFK3BttPkoQlk1oA8aAjXASIG72lHNztLblGj9jxrOBJ6k0sfSfC - aRgT0MntN_YghdiZq8jmRqQP0jx34D2gAagtPhyC7JhmAA44fEpx2Syjr2yS4mH3IdWCfPAKeG4M3MvpLKmTXi9enaYqHXCPrqoll_lYB8VwKXDSdzIZayUyCCBLGd4rLuVGCuceeQ8xJxoRG4LDAqwf97 - Qh5tMucrZ3K6aRGBT - L0YqZROgcE_Wtvw6oRFt7F - 6 y7a3eVx2BoKagRPm11GEOgKFZfZi8IOL5seAs9PSqTqwdZN9_FmcB0M5FQDTyAfHy - Xb0TsUmmz_UceeMxz5QQcqY - F36YoCw3UUwv4QbgTTahuRcpHFCfOh1mK3k2glKu_2LPxhIsDBhuijDaMwO - o5HHnsuYmBC1VhZfmWE9suqaC4RZxGCyHrYLhuGytTao99b_A1Mov - eK0Zg7SohrntkpvncgUa1kbEOGE3yP9eOvT985RAa2uxkGonWxQpxOeiq1awWwT79Q / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 428614106 ( 409 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L004_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L004_ 100 %[ ===================> ] 408.76 M 14.8 MB / s in 27 s 2020 - 01 - 16 19 : 00 : 01 ( 14.9 MB / s ) - \u2018 1 k_hgmm_v3_S1_L004_R1_001 . fastq . gz \u2019 saved [ 428614106/428614106 ] -- 2020 - 01 - 16 19 : 00 : 03 -- https : // caltech . box . com / shared / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz [ following ] -- 2020 - 01 - 16 19 : 00 : 03 -- https : // caltech . box . com / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz [ following ] -- 2020 - 01 - 16 19 : 00 : 03 -- https : // caltech . app . box . com / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! aR - u6N2LrOdq - EuVbJbBEUk_6DUe630nsy8NEYSVJo78KVIcz8zdjQ8iMc0ipefvzQ2XAGOevcum9kZ8qqSKR0xSqs420wqrhoyfIQO7NVqI5a - bHk8u - uS5RLcAByJddbj - XB1Iv2LM45DL0OKC1aW8UOrk - o1MqethJAtF0iJSccRI0GZBJstB8IXrDuhhF0pYd8hh1DOQVasV1FL6 - 2 VpFNA7DHlqnh2Ox80X0ratcJAncbtChZhnU48xVcKDmAOehay9a8eOhjck7ej94n1EK7AOx7MI7dvSUA8yUfkjHK4jCWVC6jlexRNymoaa4P_zDl1wGJO_u581 - dhKxXE0ht4zwNuSo8EHEaYAI8q_XAHxTQzMFvu6Rp6uTUc7jP3y_9f9GiiwtBU496QgBbTaZ4CcifmXJa_qb_eIR1iUHmjpnVgSS1XK - 8 Zfz37Y7DUFPKJz4daBCozgU92F2Oe6_TplzA4exVx - QzVDMD - btpWAOOibAQ1lfqsEXjEPieOWUs9kVlNUfG4kmK34YqYMAkRnCsMzLoy0GtGqyLOPSMGwfk170LeNjJn - nwGs_XBL4gttrqjEcnppHHaEcC - 8 Hy8wQQ6BBrjiDQ5X - ZfytkXny_jZ7IFOPIOkg3j8ykIfOuoM8gTaKRSuuxGPRUTBJLxSH9noHEGoIALqWgZ18YdzVzGeNnm6ANMezOOivt7CLtdJ2Ctg3Qa - C0qdZj_fnbab3JO8dOEdiTlgTob2sA3_3QNh3Hnp7dtpHiEyAXYoarOnuk0ylDDRDWl9yxuuHZXFSc2FkQywkMWz0lbNLAoiVL8v5HfDXA6_DAOGgjFnv7YEOGA5I3mOBUhb7eGjJMDSfk - eWkf3m_ISe2fPM002vLFU2BuXBxItcUXpvpGXYFq_Eio - Fj7a4N6zjfOh5VhO__oa6LO0H7ZBkvkPZv4Z77ON4r4j50HqcwAaDP19gpSm4ac8qXV3aQAKdq2b3Cp5 - by - 4 iL4iNFu3XEnYw562uBgKmUQtnBRIr9JXcH5_73c3WP7WFFRfiddmpIBWUOIOLXNZLZ5ge2Is8t6wXGiyhgPNwDjvoJk18evgoU5fnjQDR4x_XHbKr2rpA6XGMguWqOHA9F1I8iCW0UV1tupLzs6fslujlnsfmci - ih33YBdzwgeDkzvT8zCkxdXxktPWES1a3X06NUp7oOa1FaC8AOfBBcaA7JozlM2om369I5WTqe - UCzd5Pg_LODf2hVFxtsNipjoHMESLcJwWJTUnE5o5ttsOYnhy - GIFbeqZsd7rhVIKrBhPx2oSavUMsJtYM44cp3BEdbSKXKj5pj8nQW9wCLVPgz5AyoyMJHZ72He8ax3rZFxk15uamgy9ywrc4q9DukMpuLmVGN9lG9eDm2IXIAO_QeBmPRqQQ07H7CJFARP0SgCTG56sg24GyE . / download [ following ] -- 2020 - 01 - 16 19 : 00 : 04 -- https : // public . boxcloud . com / d / 1 / b1 ! aR - u6N2LrOdq - EuVbJbBEUk_6DUe630nsy8NEYSVJo78KVIcz8zdjQ8iMc0ipefvzQ2XAGOevcum9kZ8qqSKR0xSqs420wqrhoyfIQO7NVqI5a - bHk8u - uS5RLcAByJddbj - XB1Iv2LM45DL0OKC1aW8UOrk - o1MqethJAtF0iJSccRI0GZBJstB8IXrDuhhF0pYd8hh1DOQVasV1FL6 - 2 VpFNA7DHlqnh2Ox80X0ratcJAncbtChZhnU48xVcKDmAOehay9a8eOhjck7ej94n1EK7AOx7MI7dvSUA8yUfkjHK4jCWVC6jlexRNymoaa4P_zDl1wGJO_u581 - dhKxXE0ht4zwNuSo8EHEaYAI8q_XAHxTQzMFvu6Rp6uTUc7jP3y_9f9GiiwtBU496QgBbTaZ4CcifmXJa_qb_eIR1iUHmjpnVgSS1XK - 8 Zfz37Y7DUFPKJz4daBCozgU92F2Oe6_TplzA4exVx - QzVDMD - btpWAOOibAQ1lfqsEXjEPieOWUs9kVlNUfG4kmK34YqYMAkRnCsMzLoy0GtGqyLOPSMGwfk170LeNjJn - nwGs_XBL4gttrqjEcnppHHaEcC - 8 Hy8wQQ6BBrjiDQ5X - ZfytkXny_jZ7IFOPIOkg3j8ykIfOuoM8gTaKRSuuxGPRUTBJLxSH9noHEGoIALqWgZ18YdzVzGeNnm6ANMezOOivt7CLtdJ2Ctg3Qa - C0qdZj_fnbab3JO8dOEdiTlgTob2sA3_3QNh3Hnp7dtpHiEyAXYoarOnuk0ylDDRDWl9yxuuHZXFSc2FkQywkMWz0lbNLAoiVL8v5HfDXA6_DAOGgjFnv7YEOGA5I3mOBUhb7eGjJMDSfk - eWkf3m_ISe2fPM002vLFU2BuXBxItcUXpvpGXYFq_Eio - Fj7a4N6zjfOh5VhO__oa6LO0H7ZBkvkPZv4Z77ON4r4j50HqcwAaDP19gpSm4ac8qXV3aQAKdq2b3Cp5 - by - 4 iL4iNFu3XEnYw562uBgKmUQtnBRIr9JXcH5_73c3WP7WFFRfiddmpIBWUOIOLXNZLZ5ge2Is8t6wXGiyhgPNwDjvoJk18evgoU5fnjQDR4x_XHbKr2rpA6XGMguWqOHA9F1I8iCW0UV1tupLzs6fslujlnsfmci - ih33YBdzwgeDkzvT8zCkxdXxktPWES1a3X06NUp7oOa1FaC8AOfBBcaA7JozlM2om369I5WTqe - UCzd5Pg_LODf2hVFxtsNipjoHMESLcJwWJTUnE5o5ttsOYnhy - GIFbeqZsd7rhVIKrBhPx2oSavUMsJtYM44cp3BEdbSKXKj5pj8nQW9wCLVPgz5AyoyMJHZ72He8ax3rZFxk15uamgy9ywrc4q9DukMpuLmVGN9lG9eDm2IXIAO_QeBmPRqQQ07H7CJFARP0SgCTG56sg24GyE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 984350311 ( 939 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L004_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L004_ 100 %[ ===================> ] 938.75 M 14.8 MB / s in 66 s 2020 - 01 - 16 19 : 01 : 11 ( 14.3 MB / s ) - \u2018 1 k_hgmm_v3_S1_L004_R2_001 . fastq . gz \u2019 saved [ 984350311/984350311 ] CPU times : user 4.07 s , sys : 923 ms , total : 4.99 s Wall time : 6 min 36 s Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing 1 k_hgmm_v3_S1_L001_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L001_R2_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L002_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L002_R2_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L003_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L003_R2_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L004_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L004_R2_001 . fastq . gz : OK Install kb \u00b6 Install kb for running the kallisto|bustools workflow. 1 !pip install git+https://github.com/pachterlab/kb_python@count-kite Collecting git + https : // github . com / pachterlab / kb_python @ count - kite Cloning https : // github . com / pachterlab / kb_python ( to revision count - kite ) to / tmp / pip - req - build - a0qz7ipg Running command git clone - q https : // github . com / pachterlab / kb_python / tmp / pip - req - build - a0qz7ipg Running command git checkout - b count - kite -- track origin / count - kite Switched to a new branch 'count-kite' Branch 'count-kite' set up to track remote branch 'count-kite' from 'origin' . Collecting anndata >= 0.6 . 22. post1 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 2 b / 72 / 87196 c15f68d9865c31a43a10cf7c50bcbcedd5607d09f9aada0b3963103 / anndata - 0.6 . 22. post1 - py3 - none - any . whl ( 47 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 1.5 MB / s \u001b [ ? 25 hCollecting loompy >= 3.0 . 6 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 36 / 52 / 74 ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9 / loompy - 3.0 . 6. tar . gz ( 41 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5.2 MB / s \u001b [ ? 25 hRequirement already satisfied : requests >= 2.19 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 2.21 . 0 ) Collecting tqdm >= 4.39 . 0 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 72 / c9 / 7 fc20feac72e79032a7c8138fd0d395dc6d8812b5b9edf53c3afd0b31017 / tqdm - 4.41 . 1 - py2 . py3 - none - any . whl ( 56 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 61 kB 6.0 MB / s \u001b [ ? 25 hRequirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.8 . 0 ) Requirement already satisfied : numpy ~= 1.14 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.17 . 5 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 5.5 . 0 ) Requirement already satisfied : scipy ~= 1.0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.4 . 1 ) Requirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 0.25 . 3 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 42.0 . 2 ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.47 . 0 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 7.0 ) Collecting numpy - groupies \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 57 / ae / 18217 b57ba3e4bb8a44ecbfc161ed065f6d1b90c75d404bd6ba8d6f024e2 / numpy_groupies - 0.9 . 10. tar . gz ( 43 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5.0 MB / s \u001b [ ? 25 hRequirement already satisfied : urllib3 < 1.25 , >= 1.21 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 1.24 . 3 ) Requirement already satisfied : chardet < 3.1 . 0 , >= 3.0 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 3.0 . 4 ) Requirement already satisfied : idna < 2.9 , >= 2.5 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2.8 ) Requirement already satisfied : certifi >= 2017.4 . 17 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2019.11 . 28 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.12 . 0 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.6 . 1 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2018.9 ) Requirement already satisfied : llvmlite >= 0.31 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.31 . 0 ) Building wheels for collected packages : kb - python , loompy , numpy - groupies Building wheel for kb - python ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for kb - python : filename = kb_python - 0.24 . 4 - cp36 - none - any . whl size = 80991434 sha256 = b20b650c19860c1906c5f89f39c001fc874adf088a4ea686339d12b8d79bb949 Stored in directory : / tmp / pip - ephem - wheel - cache - jjr0rnle / wheels / 8 e / 56 / 56 / c89223de74af26792675e82f4bb5223e7cf0d653a33038e34c Building wheel for loompy ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for loompy : filename = loompy - 3.0 . 6 - cp36 - none - any . whl size = 47896 sha256 = a5e692dd7ff61ebcf5e8a8c6fbbe7b21d7c62ef647f1cf05c685a47022b8ad3f Stored in directory : / root /. cache / pip / wheels / f9 / a4 / 90 / 5 a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9 Building wheel for numpy - groupies ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for numpy - groupies : filename = numpy_groupies - 0 + unknown - cp36 - none - any . whl size = 28044 sha256 = cad74d3e67d56a0982d83056af061c8f0c0f78550f14af52834f6523756b1c7d Stored in directory : / root /. cache / pip / wheels / 30 / ac / 83 / 64 d5f9293aeaec63f9539142fc629a41af064cae1b3d8d94aa Successfully built kb - python loompy numpy - groupies Installing collected packages : anndata , numpy - groupies , loompy , tqdm , kb - python Found existing installation : tqdm 4.28 . 1 Uninstalling tqdm - 4.28 . 1 : Successfully uninstalled tqdm - 4.28 . 1 Successfully installed anndata - 0.6 . 22. post1 kb - python - 0.24 . 4 loompy - 3.0 . 6 numpy - groupies - 0 + unknown tqdm - 4.41 . 1 Download human and mouse reference files \u00b6 We will download the following files from Ensembl: * Mouse genome (FASTA) * Mouse genome annotations (GTF) * Human genome (FASTA) * Human genome annotations (GTF) 1 2 3 4 5 %%time !wget ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz !wget ftp://ftp.ensembl.org/pub/release-98/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/homo_sapiens/Homo_sapiens.GRCh38.98.gtf.gz --2020-01-16 19:02:01-- ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz => \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/mus_musculus/dna ... done. ==> SIZE Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... 805984352 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... done. Length: 805984352 (769M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 768.65M 3.72MB/s in 3m 24s 2020-01-16 19:05:30 (3.76 MB/s) - \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 saved [805984352] --2020-01-16 19:05:31-- ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz => \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/mus_musculus ... done. ==> SIZE Mus_musculus.GRCm38.98.gtf.gz ... 30256597 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.98.gtf.gz ... done. Length: 30256597 (29M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 28.85M 5.48MB/s in 5.3s 2020-01-16 19:05:40 (5.48 MB/s) - \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 saved [30256597] --2020-01-16 19:05:41-- ftp://ftp.ensembl.org/pub/release-98/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz => \u2018Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/homo_sapiens/dna ... done. ==> SIZE Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz ... 881211416 ==> PASV ... done. ==> RETR Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz ... done. Length: 881211416 (840M) (unauthoritative) Homo_sapiens.GRCh38 100%[===================>] 840.39M 8.60MB/s in 2m 58s 2020-01-16 19:08:43 (4.72 MB/s) - \u2018Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\u2019 saved [881211416] --2020-01-16 19:08:44-- ftp://ftp.ensembl.org/pub/release-98/gtf/homo_sapiens/Homo_sapiens.GRCh38.98.gtf.gz => \u2018Homo_sapiens.GRCh38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/homo_sapiens ... done. ==> SIZE Homo_sapiens.GRCh38.98.gtf.gz ... 46712404 ==> PASV ... done. ==> RETR Homo_sapiens.GRCh38.98.gtf.gz ... done. Length: 46712404 (45M) (unauthoritative) Homo_sapiens.GRCh38 100%[===================>] 44.55M 6.53MB/s in 9.3s 2020-01-16 19:08:57 (4.79 MB/s) - \u2018Homo_sapiens.GRCh38.98.gtf.gz\u2019 saved [46712404] CPU times: user 3.91 s, sys: 853 ms, total: 4.76 s Wall time: 6min 56s Build the mixed species index \u00b6 kb can build a single transcriptome index with multiple references. The FASTAs and GTFs must be passed in as a comma-separated list. Note : Because Google Colab offers limited RAM, we split the index into 4 parts. 1 2 3 4 %%time !kb ref -i mixed_index.idx -g mixed_t2g.txt -f1 mixed_cdna.fa -n 4 \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz,Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz \\ Mus_musculus.GRCm38.98.gtf.gz,Homo_sapiens.GRCh38.98.gtf.gz [ 2020 - 01 - 16 19 : 09 : 00 , 016 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2020 - 01 - 16 19 : 09 : 00 , 016 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 19 : 09 : 03 , 821 ] INFO Creating transcript - to - gene mapping at / content / tmp / tmp_54cxwsm [ 2020 - 01 - 16 19 : 09 : 41 , 067 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 19 : 10 : 07 , 073 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmp8njkjc7p [ 2020 - 01 - 16 19 : 17 : 20 , 153 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmpdb4z6qdv [ 2020 - 01 - 16 19 : 18 : 16 , 788 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpbwrr1fgf [ 2020 - 01 - 16 19 : 18 : 16 , 788 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: JH584302.1, GL456394.1, GL456383.1, GL456392.1, GL456393.1, GL456396.1, GL456213.1, GL456366.1, GL456370.1, GL456360.1, JH584300.1, GL456390.1, GL456359.1, GL456387.1, GL456378.1, GL456389.1, GL456379.1, GL456368.1, GL456382.1, GL456367.1, JH584301.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 19 : 19 : 12 , 867 ] INFO Wrote 142446 cDNA transcripts [ 2020 - 01 - 16 19 : 19 : 12 , 870 ] INFO Preparing Homo_sapiens . GRCh38 . dna . primary_assembly . fa . gz , Homo_sapiens . GRCh38 . 98 . gtf . gz [ 2020 - 01 - 16 19 : 19 : 12 , 870 ] INFO Decompressing Homo_sapiens . GRCh38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 19 : 19 : 19 , 514 ] INFO Creating transcript - to - gene mapping at / content / tmp / tmpbcio2ycd [ 2020 - 01 - 16 19 : 20 : 16 , 297 ] INFO Decompressing Homo_sapiens . GRCh38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 19 : 20 : 44 , 907 ] INFO Sorting tmp / Homo_sapiens . GRCh38 . dna . primary_assembly . fa to / content / tmp / tmpotz6u8im [ 2020 - 01 - 16 19 : 28 : 55 , 130 ] INFO Sorting tmp / Homo_sapiens . GRCh38 . 98 . gtf to / content / tmp / tmpm1lths39 [ 2020 - 01 - 16 19 : 30 : 22 , 587 ] INFO Splitting genome tmp / Homo_sapiens . GRCh38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpzdmdny6v [ 2020 - 01 - 16 19 : 30 : 22 , 587 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: KI270311.1, KI270580.1, KI270424.1, KI270304.1, KI270305.1, KI270708.1, KI270591.1, KI270316.1, GL000008.2, KI270507.1, KI270364.1, KI270749.1, KI270548.1, KI270363.1, KI270414.1, KI270709.1, KI270583.1, KI270395.1, KI270322.1, KI270746.1, KI270390.1, KI270435.1, KI270411.1, KI270362.1, KI270751.1, KI270755.1, KI270735.1, GL000214.1, KI270312.1, KI270714.1, KI270317.1, KI270303.1, KI270373.1, KI270753.1, KI270587.1, KI270385.1, KI270425.1, KI270340.1, KI270391.1, KI270590.1, KI270522.1, KI270419.1, KI270730.1, KI270742.1, KI270302.1, KI270740.1, KI270757.1, KI270584.1, KI270723.1, KI270392.1, KI270538.1, KI270732.1, KI270544.1, KI270722.1, KI270736.1, KI270737.1, KI270707.1, KI270528.1, KI270396.1, KI270379.1, KI270374.1, KI270752.1, KI270729.1, KI270335.1, KI270508.1, KI270512.1, KI270371.1, KI270366.1, KI270589.1, KI270382.1, KI270418.1, KI270519.1, KI270510.1, KI270412.1, KI270724.1, KI270310.1, KI270738.1, KI270389.1, KI270745.1, KI270394.1, KI270336.1, GL000221.1, KI270468.1, KI270465.1, KI270579.1, KI270372.1, KI270378.1, KI270725.1, KI270741.1, GL000208.1, GL000224.1, KI270717.1, KI270466.1, KI270376.1, KI270743.1, KI270420.1, KI270715.1, KI270386.1, KI270509.1, KI270329.1, KI270593.1, KI270384.1, KI270712.1, KI270530.1, KI270429.1, KI270581.1, KI270718.1, KI270516.1, KI270582.1, KI270393.1, KI270387.1, GL000226.1, KI270739.1, KI270315.1, KI270710.1, KI270333.1, KI270438.1, KI270337.1, KI270467.1, KI270588.1, KI270334.1, KI270517.1, KI270719.1, KI270448.1, KI270417.1, KI270754.1, KI270720.1, KI270521.1, KI270381.1, KI270422.1, KI270756.1, KI270716.1, KI270515.1, KI270518.1, KI270375.1, KI270320.1, KI270330.1, KI270539.1, KI270529.1, KI270511.1, KI270388.1, KI270748.1, KI270747.1, KI270383.1, KI270706.1, KI270338.1, KI270423.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 19 : 31 : 39 , 720 ] INFO Wrote 227368 cDNA transcripts [ 2020 - 01 - 16 19 : 31 : 39 , 725 ] INFO Concatenating 2 transcript - to - gene mappings to mixed_t2g . txt [ 2020 - 01 - 16 19 : 31 : 40 , 026 ] INFO Concatenating 2 cDNAs to mixed_cdna . fa [ 2020 - 01 - 16 19 : 31 : 41 , 876 ] INFO Splitting mixed_cdna . fa into 4 parts [ 2020 - 01 - 16 19 : 31 : 46 , 079 ] INFO Indexing / content / tmp / tmp5sr_pily to mixed_index . idx . 0 [ 2020 - 01 - 16 19 : 38 : 23 , 368 ] INFO Indexing / content / tmp / tmpgxjc_cx6 to mixed_index . idx . 1 [ 2020 - 01 - 16 19 : 44 : 32 , 316 ] INFO Indexing / content / tmp / tmpj4tfo0m8 to mixed_index . idx . 2 [ 2020 - 01 - 16 19 : 51 : 03 , 185 ] INFO Indexing / content / tmp / tmp8wqyvg2b to mixed_index . idx . 3 CPU times : user 13 . 5 s , sys : 2 . 6 s , total : 16 . 1 s Wall time : 48 min 39 s Generate an RNA count matrix in H5AD format \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 6 7 %%time !kb count -i mixed_index.idx.0,mixed_index.idx.1,mixed_index.idx.2,mixed_index.idx.3 \\ -g mixed_t2g.txt -x 10xv3 -o output --h5ad -t 2 \\ 1k_hgmm_v3_S1_L001_R1_001.fastq.gz 1k_hgmm_v3_S1_L001_R2_001.fastq.gz \\ 1k_hgmm_v3_S1_L002_R1_001.fastq.gz 1k_hgmm_v3_S1_L002_R2_001.fastq.gz \\ 1k_hgmm_v3_S1_L003_R1_001.fastq.gz 1k_hgmm_v3_S1_L003_R2_001.fastq.gz \\ 1k_hgmm_v3_S1_L004_R1_001.fastq.gz 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO Generating BUS file using 4 indices [2020-01-16 19:57:50,686] INFO Generating BUS file to output/tmp/bus_part0 from [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO Using index mixed_index.idx.0 [2020-01-16 20:14:53,228] INFO Generating BUS file to output/tmp/bus_part1 from [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO Using index mixed_index.idx.1 [2020-01-16 20:30:59,826] INFO Generating BUS file to output/tmp/bus_part2 from [2020-01-16 20:30:59,826] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO Using index mixed_index.idx.2 [2020-01-16 20:53:38,011] INFO Generating BUS file to output/tmp/bus_part3 from [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO Using index mixed_index.idx.3 [2020-01-16 21:15:37,278] INFO Merging BUS records to output from [2020-01-16 21:15:37,278] INFO output/tmp/bus_part0 [2020-01-16 21:15:37,278] INFO output/tmp/bus_part1 [2020-01-16 21:15:37,278] INFO output/tmp/bus_part2 [2020-01-16 21:15:37,278] INFO output/tmp/bus_part3 [2020-01-16 21:17:58,873] INFO Sorting BUS file output/output.bus to output/tmp/output.s.bus [2020-01-16 21:19:58,502] INFO Whitelist not provided [2020-01-16 21:19:58,502] INFO Copying pre-packaged 10XV3 whitelist to output [2020-01-16 21:19:59,491] INFO Inspecting BUS file output/tmp/output.s.bus [2020-01-16 21:20:52,633] INFO Correcting BUS records in output/tmp/output.s.bus to output/tmp/output.s.c.bus with whitelist output/10xv3_whitelist.txt [2020-01-16 21:22:16,890] INFO Sorting BUS file output/tmp/output.s.c.bus to output/output.unfiltered.bus [2020-01-16 21:24:06,413] INFO Generating count matrix output/counts_unfiltered/cells_x_genes from BUS file output/output.unfiltered.bus [2020-01-16 21:24:42,940] INFO Reading matrix output/counts_unfiltered/cells_x_genes.mtx [2020-01-16 21:24:57,663] INFO Writing matrix to h5ad output/counts_unfiltered/adata.h5ad CPU times: user 28.2 s, sys: 3.99 s, total: 32.1 s Wall time: 1h 27min 16s Analysis \u00b6 See this notebook for how to process and load count matrices for a species mixing experiment. 1","title":"Python"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#pre-processing-and-analysis-of-mixed-species-single-cell-rna-seq-data-with-kallistobustools","text":"In this notebook, we will perform pre-processing and analysis of 10x Genomics 1k 1:1 mixure of fresh frozen human and mouse cells using the kallisto | bustools workflow, implemented with a wrapper called kb . It was developed by Kyung Hoi (Joseph) Min and A. Sina Booeshaghi. 1 !date Thu Jan 16 18:54:23 UTC 2020","title":"Pre-processing and analysis of mixed-species single-cell RNA-seq data with kallisto|bustools."},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#pre-processing","text":"","title":"Pre-processing"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#download-the-data","text":"Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 7 8 9 10 %%time !wget https://caltech.box.com/shared/static/8oeuskecfr9ujlufqj3b7frj74rxfzcc.txt -O checksums.txt !wget https://caltech.box.com/shared/static/ags4jxbqrceuqewb0zy7kyuuggazqb0j.gz -O 1k_hgmm_v3_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/39tknal6wm4lhvozu6bf6vczb475bnuu.gz -O 1k_hgmm_v3_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/x2hwq2q3weuggtffjfgd1e8a1m1y7wj9.gz -O 1k_hgmm_v3_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/0g7lnuieg8jxlxswrssdtz809gus75ek.gz -O 1k_hgmm_v3_S1_L002_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/0avmybuxqcw8haa1hf0n72oyb8zriiuu.gz -O 1k_hgmm_v3_S1_L003_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/hp10z2yr8u3lbzoj1qflz83r2v9ohs6q.gz -O 1k_hgmm_v3_S1_L003_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/fx8fduedje53dvf3xixyyaqzugn7yy85.gz -O 1k_hgmm_v3_S1_L004_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak.gz -O 1k_hgmm_v3_S1_L004_R2_001.fastq.gz -- 2020 - 01 - 16 18 : 54 : 36 -- https : // caltech . box . com / shared / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt [ following ] -- 2020 - 01 - 16 18 : 54 : 36 -- https : // caltech . box . com / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt [ following ] -- 2020 - 01 - 16 18 : 54 : 36 -- https : // caltech . app . box . com / public / static / 8 oeuskecfr9ujlufqj3b7frj74rxfzcc . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! bfmyuKChl9mlNrvM6NKR0M68SdDjLgsYPYDbhlX2FmS_ZXAPPd_pMhS3ctm - xienppt - TjTuthbN2Z0NFzY94kGDhyUbFSAeMBhJMo1RFQHlD - _pCmKgyFLg5jYM7fBGFWYC - PpKwd6Pna0Y6RwuNiHyTUZKJbep5tzrRhbXrlDEVRxwC6p3RcjJFo4GChO3XsdUhh_y8f7P6AAwynNro6pZPX2Vk8GbEsBwJi8Z9kfZNZAjk0cOFFLDgq0xAdnVH - _tT41ILHT7ANRV2jFLJM6vQCwHrUcfw1oB5O0pBRcuF8_X9EiMT1a60aRFo4HJRtinBP4 - Lc41oeOAcH2Q59666iK0NqrOZl2lnmF0xcrcpEectHpff - jg8AEZsqJ_4CdVQQnXVluT_w5kglccQYIpXDfkyGBB94Ib_v6wtBsXzwafxYg35z - RRk6XWYaRcx49SnxJNjAKlIdFOHcAmnfK - H7tk4QN1yW5V_fFe169MyBc2GShaX3ZOTAHW5HyRCscM0VycqQFhfN62ak3cXjxE6f - FA4l4qLqoCp5OsLQW6i - r_fefmo92TlnPHVHbUYZC - cCSfjZwEZiM0rnHnTDG_QacLNOMiicE6qYSQZ1cv2IpWWlzgTg9NFrun - cmjcne3kOvRQCVuhuiXb7yXCs8uoBJzDijBfepy6DF6TDkVFDANLdkkgO_8QziwmHKNsPLg7P - RF262lmtRnWtwvhW8XU9JFu0IJmnkG - UGeB4FBGxN28eRbAUxWzLm - KQe_rj - Ym0hRXnv7dg5zo_M2tQX6DK32pDHAaaqE832ta_iN0 - AR82yPDSElVA1VGOsHgjzjfeqPTvRuFnu5pf6aBHI5I1 - ppLMXKKQVauHJKKwV3dOBPrdGA2VLFVGVLgrX7FX1K7rzHk_tU7OUawhYHZO_Y44recX1svQLbFcX5KFp4MjfLaOI4W0z4gosUOH9lrb - XU23AQXhkKawuBk0Xf - 6 P_fsICcrguBvm2t41KpejEcJAwPl2JeKurRHIObdnuyXa9pPGhODme0T8HvNL9grmJXCV8BJfEQs0wDcc2NUWdftsLqh5ASwAncaIkflEELx0iC7T0V1zmMenqTVGkQUajYql4weAoUwejK4ELE07fYaXmed68yZvT_GEia5yj6i05udh6W_NcycQbmKsbHuI9rUhuiwjI3S1RlNxWCO9E - rs_WJoc20thLlDOGZ4XC0zTwRkaX19OK8A9qiKv48gUaqpHJlWBiRjQND7iSBG6rNU4oqF9105Mqi0rn1zrwxYtYIp - 2 OaF_PKqDLdzd8RZLO5_PfW1280fK45Xn2eUpioK48qZIIMuDP0En_91QnD_13RTFfM7hqU15BToeqDV9IIsNJe / download [ following ] -- 2020 - 01 - 16 18 : 54 : 37 -- https : // public . boxcloud . com / d / 1 / b1 ! bfmyuKChl9mlNrvM6NKR0M68SdDjLgsYPYDbhlX2FmS_ZXAPPd_pMhS3ctm - xienppt - TjTuthbN2Z0NFzY94kGDhyUbFSAeMBhJMo1RFQHlD - _pCmKgyFLg5jYM7fBGFWYC - PpKwd6Pna0Y6RwuNiHyTUZKJbep5tzrRhbXrlDEVRxwC6p3RcjJFo4GChO3XsdUhh_y8f7P6AAwynNro6pZPX2Vk8GbEsBwJi8Z9kfZNZAjk0cOFFLDgq0xAdnVH - _tT41ILHT7ANRV2jFLJM6vQCwHrUcfw1oB5O0pBRcuF8_X9EiMT1a60aRFo4HJRtinBP4 - Lc41oeOAcH2Q59666iK0NqrOZl2lnmF0xcrcpEectHpff - jg8AEZsqJ_4CdVQQnXVluT_w5kglccQYIpXDfkyGBB94Ib_v6wtBsXzwafxYg35z - RRk6XWYaRcx49SnxJNjAKlIdFOHcAmnfK - H7tk4QN1yW5V_fFe169MyBc2GShaX3ZOTAHW5HyRCscM0VycqQFhfN62ak3cXjxE6f - FA4l4qLqoCp5OsLQW6i - r_fefmo92TlnPHVHbUYZC - cCSfjZwEZiM0rnHnTDG_QacLNOMiicE6qYSQZ1cv2IpWWlzgTg9NFrun - cmjcne3kOvRQCVuhuiXb7yXCs8uoBJzDijBfepy6DF6TDkVFDANLdkkgO_8QziwmHKNsPLg7P - RF262lmtRnWtwvhW8XU9JFu0IJmnkG - UGeB4FBGxN28eRbAUxWzLm - KQe_rj - Ym0hRXnv7dg5zo_M2tQX6DK32pDHAaaqE832ta_iN0 - AR82yPDSElVA1VGOsHgjzjfeqPTvRuFnu5pf6aBHI5I1 - ppLMXKKQVauHJKKwV3dOBPrdGA2VLFVGVLgrX7FX1K7rzHk_tU7OUawhYHZO_Y44recX1svQLbFcX5KFp4MjfLaOI4W0z4gosUOH9lrb - XU23AQXhkKawuBk0Xf - 6 P_fsICcrguBvm2t41KpejEcJAwPl2JeKurRHIObdnuyXa9pPGhODme0T8HvNL9grmJXCV8BJfEQs0wDcc2NUWdftsLqh5ASwAncaIkflEELx0iC7T0V1zmMenqTVGkQUajYql4weAoUwejK4ELE07fYaXmed68yZvT_GEia5yj6i05udh6W_NcycQbmKsbHuI9rUhuiwjI3S1RlNxWCO9E - rs_WJoc20thLlDOGZ4XC0zTwRkaX19OK8A9qiKv48gUaqpHJlWBiRjQND7iSBG6rNU4oqF9105Mqi0rn1zrwxYtYIp - 2 OaF_PKqDLdzd8RZLO5_PfW1280fK45Xn2eUpioK48qZIIMuDP0En_91QnD_13RTFfM7hqU15BToeqDV9IIsNJe / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 816 [ text/plain ] Saving to : \u2018 checksums . txt \u2019 checksums . txt 100 %[ ===================> ] 816 -- . - KB / s in 0 s 2020 - 01 - 16 18 : 54 : 38 ( 89.8 MB / s ) - \u2018 checksums . txt \u2019 saved [ 816/816 ] -- 2020 - 01 - 16 18 : 54 : 39 -- https : // caltech . box . com / shared / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz [ following ] -- 2020 - 01 - 16 18 : 54 : 39 -- https : // caltech . box . com / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz [ following ] -- 2020 - 01 - 16 18 : 54 : 39 -- https : // caltech . app . box . com / public / static / ags4jxbqrceuqewb0zy7kyuuggazqb0j . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! oAVoFP4CGR1yzS3AhdhiaAdMAqPE05UNEXs7urCZBMlXrLO - eC_WoLKu2DicVApzVB9uFBwPyVG6qVvLSuO2q5RhwOFJXQEue5oTPrDX1Oelxh_0A28enjR8a7iNaqt2ez03RXB_1h0zIVpGjGSU6TRlA - x335MOdkAAggJljV_2P7TsmgUNHxPiA11T3Hfg - epxmbm0r - 0 dWrivQy5LVfIGMidRAgT6HtNUw2lhYJEDPBIJ97sN_Amcd8EaWdialvo4aARr9yyRptTpd9fbZe6n5yDW8DBL6PE - VKRFGKXHUi_RHseIWha - fuCnBFPujgex1nWiI4fvDDm3ZGgH7uzQTTnKItBddTOqcjZqGhAlyMXw4f4FMJyKTYgud4SudpKwPzRO0 - dI8YduzmDvbwTynwAqNq2tMiQ3tRfXp9sc7M3ePoKG1e2SuYipRCfb_i2CAb2p7hH8MwKFE9KyAPh44LJ6fZI4GP8bYEy92_K0qcSR1bm0T5FufAGP - Z8dmjX93Ck08JSed15BwlE2tT7nlqfCU1OeTyxHjxS7zDpTqAehjxuJyhfo8Yrc6z2Do8Yr_25MyEW_Cn7XBYYGqvcGQ0Cw2j2UQvtsxNstEQP3trK_PP44zUMmnewU269KOG0jLJvi3f65HkaOQf_o775BLbrZsVcOwg82qJ5uR3w - QQy50FHIag0bZJPy6dWqvvorsMDeFt5rrp - NdPlr818AoA4yti - Rxf63WQv1z0yrU2YeYNSNTeQZvAcGbhUJqepo6ohC9ogv5zgRBQF21l0GfDggPtV - gO - QMPh64LGho922p8KyLEDXRUg_8MLR - ZnjUs2C3Cdpw9Dnj1XtbH_EBg3efe_AYXV6UtgUb_AQIMjrD2L7W349IHfS5 - WKsuSPgx9go4Oxi9uCe0ydrH9157AZryUKvj1esq - O6CAYHTUpNSo1VW37VgcZxuKnLkBtvs82TVER9_cIwn0dT8vuOkCnKyYTwZbcWi1oAYimjpA7VuLh4vcFlAMZO0aq_Hni4QY0v4Z7JzcYxmcRTvbDJWsnH6EG7bUAkaLO90tyQ - cZcCVQQDpLRiX0EewF - tsqGqBLZPwhJ9uIrEysE85Epd3KzS59SuF7TIvaF7FD9uwKHZsg - MsZDMsXU4ms8SQvCmE7a43yQJHqJgO5zF38bYW_SVk_3qfcLLixG_3ALPapnYf4VFAob9c34TBKmaWLiLteSE - hPsMaLYABMf9PoCh2T9hlidzqvBrYP8RPPo9N4w - yrqidTRo - r1EGCXcBF9CfqeHSxaviQYa9F50dbqUBPXAA4gl4nxmZppjtFuidX3nx5dMkwLcnNriaE4S4S39XWyIsjo7SHWPWJEJp6c5goE6VOI8sP2 - LXKd7jMgl9iXCz - 69 nFWAvDCsCybxBxdMdek0t_qC0lYX3PYsN_B -/ download [ following ] -- 2020 - 01 - 16 18 : 54 : 40 -- https : // public . boxcloud . com / d / 1 / b1 ! oAVoFP4CGR1yzS3AhdhiaAdMAqPE05UNEXs7urCZBMlXrLO - eC_WoLKu2DicVApzVB9uFBwPyVG6qVvLSuO2q5RhwOFJXQEue5oTPrDX1Oelxh_0A28enjR8a7iNaqt2ez03RXB_1h0zIVpGjGSU6TRlA - x335MOdkAAggJljV_2P7TsmgUNHxPiA11T3Hfg - epxmbm0r - 0 dWrivQy5LVfIGMidRAgT6HtNUw2lhYJEDPBIJ97sN_Amcd8EaWdialvo4aARr9yyRptTpd9fbZe6n5yDW8DBL6PE - VKRFGKXHUi_RHseIWha - fuCnBFPujgex1nWiI4fvDDm3ZGgH7uzQTTnKItBddTOqcjZqGhAlyMXw4f4FMJyKTYgud4SudpKwPzRO0 - dI8YduzmDvbwTynwAqNq2tMiQ3tRfXp9sc7M3ePoKG1e2SuYipRCfb_i2CAb2p7hH8MwKFE9KyAPh44LJ6fZI4GP8bYEy92_K0qcSR1bm0T5FufAGP - Z8dmjX93Ck08JSed15BwlE2tT7nlqfCU1OeTyxHjxS7zDpTqAehjxuJyhfo8Yrc6z2Do8Yr_25MyEW_Cn7XBYYGqvcGQ0Cw2j2UQvtsxNstEQP3trK_PP44zUMmnewU269KOG0jLJvi3f65HkaOQf_o775BLbrZsVcOwg82qJ5uR3w - QQy50FHIag0bZJPy6dWqvvorsMDeFt5rrp - NdPlr818AoA4yti - Rxf63WQv1z0yrU2YeYNSNTeQZvAcGbhUJqepo6ohC9ogv5zgRBQF21l0GfDggPtV - gO - QMPh64LGho922p8KyLEDXRUg_8MLR - ZnjUs2C3Cdpw9Dnj1XtbH_EBg3efe_AYXV6UtgUb_AQIMjrD2L7W349IHfS5 - WKsuSPgx9go4Oxi9uCe0ydrH9157AZryUKvj1esq - O6CAYHTUpNSo1VW37VgcZxuKnLkBtvs82TVER9_cIwn0dT8vuOkCnKyYTwZbcWi1oAYimjpA7VuLh4vcFlAMZO0aq_Hni4QY0v4Z7JzcYxmcRTvbDJWsnH6EG7bUAkaLO90tyQ - cZcCVQQDpLRiX0EewF - tsqGqBLZPwhJ9uIrEysE85Epd3KzS59SuF7TIvaF7FD9uwKHZsg - MsZDMsXU4ms8SQvCmE7a43yQJHqJgO5zF38bYW_SVk_3qfcLLixG_3ALPapnYf4VFAob9c34TBKmaWLiLteSE - hPsMaLYABMf9PoCh2T9hlidzqvBrYP8RPPo9N4w - yrqidTRo - r1EGCXcBF9CfqeHSxaviQYa9F50dbqUBPXAA4gl4nxmZppjtFuidX3nx5dMkwLcnNriaE4S4S39XWyIsjo7SHWPWJEJp6c5goE6VOI8sP2 - LXKd7jMgl9iXCz - 69 nFWAvDCsCybxBxdMdek0t_qC0lYX3PYsN_B -/ download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 419837628 ( 400 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L001_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L001_ 100 %[ ===================> ] 400.39 M 16.4 MB / s in 25 s 2020 - 01 - 16 18 : 55 : 06 ( 16.0 MB / s ) - \u2018 1 k_hgmm_v3_S1_L001_R1_001 . fastq . gz \u2019 saved [ 419837628/419837628 ] -- 2020 - 01 - 16 18 : 55 : 07 -- https : // caltech . box . com / shared / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz [ following ] -- 2020 - 01 - 16 18 : 55 : 08 -- https : // caltech . box . com / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz [ following ] -- 2020 - 01 - 16 18 : 55 : 08 -- https : // caltech . app . box . com / public / static / 39 tknal6wm4lhvozu6bf6vczb475bnuu . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! eMeEHUzOmOGHx4f5b3u4YGvAAT_ZvAOou4Cdq - FhcruaF75WIj_4ktPNtpHE9MhcjGV9Zf4k8vUAmELv9i8U4ZYKMGd2ThQpny70Iw9WTklsVgfJ3F5dpQCA - MDosYM72KQHxse5bPCuG_4TUqfGDj3jntaMzVgv9aRnMBVf2a9Brzq4NZJGImlNQnIN9q4ZhKgfuFrrU5qoUSRJO2snYBdWw9VNf5EuXi3ZrlUWw7JKSMho_DYuM - s5REZZj_YMykt7l2wlY2E490vAeXj7FxU2P2heWW6uVLyfdDrGfFDpaB4XYIezd2KXHauKm8WQxZ1Kk9Mm - HGkRV9sqen_lvgzcu4o1dWiThdiIYN_ayiEqPIEsKef - NKnXn - LY1QpVR716vhuEX3vUkoSfddWiuG2cRC8RF_aLyRFEbLjk30oPbgP - aXhqWIuXaHHHfUJ9NoRetWsfkCG3bMWNOJn_OA1RP52tUKD9R7dhdiRkp83aCTTcod2pSR9VBOUvWNcb2b5X0HlR4Y - zyRo - ZXTL0QQZENrSzOCYUoFB - 3 RrepdxTjIhsiZte0mJKRA8TD68gR3dmcAv8kWB7e9gYdrSYleCl6xv_zhgIJSRQgmmB87KAmjepi9vSRflAVbLSvwzzPqIDroA5 - t2DnOt2mCCKQUusghM37RkwIY4l - 2 s8iRntB5JE - QGZdemCWl8PivZ5S8hE6toPtR9mHlZn8fYX9DaB5HtMnzP7McFIg0iFtuVW7PP6_yYDHxXpoFAVvvNDQ1BahrO3pTzjy - 1 nZobsjleqDdJkwvybDCOm8BAml4WQ1e - Gl5fFieTQEBNySygOT - uhA4XQvdYbz1okKHO5DASspk - UxRhOg81ySuJlr__6WOMd0xGEF7EgUDQCBYs_V8MPhy_ - 6 l4v7YkREDQAmKRrSUnrTYaG2MBZg9VH3F5mwh4UHf0us5zWXjNNdapZgD10ea9b6t7m9yRqxlOgeIHiV5KYuKuvti9IeF9zFNSHSUj5h0_zIdOSvf5EX54K - xinnIMh0fpdeZQOUkmoLX5EqJV_HBgxBTb0zCRXhxmrxplYkNfsOS2Bpb9QANXFIm49G__tjdP7ad - mIPVOEh7Vz3AFcS5f7eAvOx4zHCWsivQ9kCCUyKpuHWDC27EHtM_MTJzugZLCLZuhAC0V355fohXfa09QGr34l2nGJQ3WrnuJBMtmIDzYNFdT7iCyEpf_buJErlZqLVzIx4AxQKUrPXGSWgHB_tvELrfcYkoi53M9CAUJcEvou2KksxShc1GGTldmYrswP1j5_HIL21thqJYIE8KjZ4AoCd2WWJ4VnW3g53shEeWeUThpKue_cpDVujhQVBoWRa_ - HZ0xjEGHGDt4MD6SaQSlZklLaKgzGLmXvkp - U7Mg5Wry6LTtLo30xffseOxOx5QXCFw6swPyI . / download [ following ] -- 2020 - 01 - 16 18 : 55 : 09 -- https : // public . boxcloud . com / d / 1 / b1 ! eMeEHUzOmOGHx4f5b3u4YGvAAT_ZvAOou4Cdq - FhcruaF75WIj_4ktPNtpHE9MhcjGV9Zf4k8vUAmELv9i8U4ZYKMGd2ThQpny70Iw9WTklsVgfJ3F5dpQCA - MDosYM72KQHxse5bPCuG_4TUqfGDj3jntaMzVgv9aRnMBVf2a9Brzq4NZJGImlNQnIN9q4ZhKgfuFrrU5qoUSRJO2snYBdWw9VNf5EuXi3ZrlUWw7JKSMho_DYuM - s5REZZj_YMykt7l2wlY2E490vAeXj7FxU2P2heWW6uVLyfdDrGfFDpaB4XYIezd2KXHauKm8WQxZ1Kk9Mm - HGkRV9sqen_lvgzcu4o1dWiThdiIYN_ayiEqPIEsKef - NKnXn - LY1QpVR716vhuEX3vUkoSfddWiuG2cRC8RF_aLyRFEbLjk30oPbgP - aXhqWIuXaHHHfUJ9NoRetWsfkCG3bMWNOJn_OA1RP52tUKD9R7dhdiRkp83aCTTcod2pSR9VBOUvWNcb2b5X0HlR4Y - zyRo - ZXTL0QQZENrSzOCYUoFB - 3 RrepdxTjIhsiZte0mJKRA8TD68gR3dmcAv8kWB7e9gYdrSYleCl6xv_zhgIJSRQgmmB87KAmjepi9vSRflAVbLSvwzzPqIDroA5 - t2DnOt2mCCKQUusghM37RkwIY4l - 2 s8iRntB5JE - QGZdemCWl8PivZ5S8hE6toPtR9mHlZn8fYX9DaB5HtMnzP7McFIg0iFtuVW7PP6_yYDHxXpoFAVvvNDQ1BahrO3pTzjy - 1 nZobsjleqDdJkwvybDCOm8BAml4WQ1e - Gl5fFieTQEBNySygOT - uhA4XQvdYbz1okKHO5DASspk - UxRhOg81ySuJlr__6WOMd0xGEF7EgUDQCBYs_V8MPhy_ - 6 l4v7YkREDQAmKRrSUnrTYaG2MBZg9VH3F5mwh4UHf0us5zWXjNNdapZgD10ea9b6t7m9yRqxlOgeIHiV5KYuKuvti9IeF9zFNSHSUj5h0_zIdOSvf5EX54K - xinnIMh0fpdeZQOUkmoLX5EqJV_HBgxBTb0zCRXhxmrxplYkNfsOS2Bpb9QANXFIm49G__tjdP7ad - mIPVOEh7Vz3AFcS5f7eAvOx4zHCWsivQ9kCCUyKpuHWDC27EHtM_MTJzugZLCLZuhAC0V355fohXfa09QGr34l2nGJQ3WrnuJBMtmIDzYNFdT7iCyEpf_buJErlZqLVzIx4AxQKUrPXGSWgHB_tvELrfcYkoi53M9CAUJcEvou2KksxShc1GGTldmYrswP1j5_HIL21thqJYIE8KjZ4AoCd2WWJ4VnW3g53shEeWeUThpKue_cpDVujhQVBoWRa_ - HZ0xjEGHGDt4MD6SaQSlZklLaKgzGLmXvkp - U7Mg5Wry6LTtLo30xffseOxOx5QXCFw6swPyI . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 968233265 ( 923 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L001_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L001_ 100 %[ ===================> ] 923.38 M 15.9 MB / s in 60 s 2020 - 01 - 16 18 : 56 : 09 ( 15.4 MB / s ) - \u2018 1 k_hgmm_v3_S1_L001_R2_001 . fastq . gz \u2019 saved [ 968233265/968233265 ] -- 2020 - 01 - 16 18 : 56 : 11 -- https : // caltech . box . com / shared / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 11 -- https : // caltech . box . com / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 11 -- https : // caltech . app . box . com / public / static / x2hwq2q3weuggtffjfgd1e8a1m1y7wj9 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! 1 NvTdn9tUiR6SLQjou9XPBfP3IARW - Zvl - rfuaQwKGeKpakXmc_T1ALgvc8tt7nwNO5GQLgTmRLsnBzIvu1J7NeuOlb1hHe0W - xh3JFBNjG - bbl - 2 dfivsp6nYJhqlkzp3QwvDDGqfUBNIpviNYqBmgudZ4cBacwqGgS76XM4y7E7P9ZrE2taHquPWtTQeyYh - uJtNLFys4HEXOK79bMz1z9ToTAA_5tz_5gxYUzVv3gdy13lO2kt3_ZzEIPXmBUK4b6GRRpqjH7eVKj_GJR_UMCw - hCmAKLoKM099ZSHzaOdBFH8M4SxwKfms9MG_nX98wXtqpeaKviS7Fn67aPQdU00KQ6JAwsgZs7ATYS7Xf9nVvcSX133cvbRtPsmn - 9 k8O5Pk7xDV1lN_GdkzA56QOw72NX - tbKtkD_X8 - 4 hxiEPLIj51OITqEMDNoLSu4 - 1e0 MBmNcH83fShvUBUXDGfgE5k8OyNpuw7EKxgipU6mrZQwvvsfxBGrBy37f_WB0kcgrojNbP4N6UZXJIJlzhaH4lqY2Eoj2yfYkQ1YywsEvvN7nKtr7ByGcwZrhxDLzHDGlNpTyYeIf0uDaqjcgGmAUhwv_KZfAn31Fa7zhjq2tgR7vsdJV3dIYVoIwktid5tau2slGnS2KIF72i0zXeN3kdudKaM6t27W0fV4lBd8kG41EYZTd86ollhJ6hvAktgeDwSqvawzdL7me_SkPbhoEoT1dMiF3 - yxhyVwen17QxGETLH4wbmhJufBcr5umliRDi3yAquHiGVrqTboo5O7ezNIxuhjm6ExOH7OcHaxke2cJxv_faC - WHt8BWoh64ABbm_mRYAjY3AssacpRQ_VIrzGLWI_TRNWDRmHv7pPyS_JUTQTBT40OHcB4_nFtdQPZe7SnmEUcvq1YeXU6BF9NeV7BiG6kFFrWH - 4 tUSMN_u6XEGo_MG7uAWv9M6aHAUqjTY1UxwQPMVAsakQTjAKMsWg0LgdJTJ8zs7FW - uTgwFEbDVXgY18HYrHv61hhPmchK2cUIqi6p6JJ5Stir7LesvhtFaVWWeurSGvRDp6fFiDbBvPNzUWH7YI_SnyUVpC0ugLUR2RNAYBTgAgRO - HJqPASe1CEV0pE1zLs70 - Gn4EOsGWfYoYlqKfpshctoOi4 - NdEStPP - fpBVj0uOO604RRzb - L75ZVg9LRGaOXOWelLN6SE_b_W3aOrveb8xe7A2TU_7zX4lt1fEHthCBjCaT9fCOSWFdcIJRD4uYVJnKziwYh3ZR9pATvVIyVUUxMlgoIYTkId6wMcvSELUZ2yRD2YXmnbwOH889IEiBX - o4_HRxjuvMUqHLXaIVsvA8VvOh5XQCclwif5E3zIoXSXiYlLqdTEAJGN9lNz7xK_GZhiB0fnsgdWdyEcMvKEQWh1WjnFqO8ySAQFtGJlROErNP8 . / download [ following ] -- 2020 - 01 - 16 18 : 56 : 12 -- https : // public . boxcloud . com / d / 1 / b1 ! 1 NvTdn9tUiR6SLQjou9XPBfP3IARW - Zvl - rfuaQwKGeKpakXmc_T1ALgvc8tt7nwNO5GQLgTmRLsnBzIvu1J7NeuOlb1hHe0W - xh3JFBNjG - bbl - 2 dfivsp6nYJhqlkzp3QwvDDGqfUBNIpviNYqBmgudZ4cBacwqGgS76XM4y7E7P9ZrE2taHquPWtTQeyYh - uJtNLFys4HEXOK79bMz1z9ToTAA_5tz_5gxYUzVv3gdy13lO2kt3_ZzEIPXmBUK4b6GRRpqjH7eVKj_GJR_UMCw - hCmAKLoKM099ZSHzaOdBFH8M4SxwKfms9MG_nX98wXtqpeaKviS7Fn67aPQdU00KQ6JAwsgZs7ATYS7Xf9nVvcSX133cvbRtPsmn - 9 k8O5Pk7xDV1lN_GdkzA56QOw72NX - tbKtkD_X8 - 4 hxiEPLIj51OITqEMDNoLSu4 - 1e0 MBmNcH83fShvUBUXDGfgE5k8OyNpuw7EKxgipU6mrZQwvvsfxBGrBy37f_WB0kcgrojNbP4N6UZXJIJlzhaH4lqY2Eoj2yfYkQ1YywsEvvN7nKtr7ByGcwZrhxDLzHDGlNpTyYeIf0uDaqjcgGmAUhwv_KZfAn31Fa7zhjq2tgR7vsdJV3dIYVoIwktid5tau2slGnS2KIF72i0zXeN3kdudKaM6t27W0fV4lBd8kG41EYZTd86ollhJ6hvAktgeDwSqvawzdL7me_SkPbhoEoT1dMiF3 - yxhyVwen17QxGETLH4wbmhJufBcr5umliRDi3yAquHiGVrqTboo5O7ezNIxuhjm6ExOH7OcHaxke2cJxv_faC - WHt8BWoh64ABbm_mRYAjY3AssacpRQ_VIrzGLWI_TRNWDRmHv7pPyS_JUTQTBT40OHcB4_nFtdQPZe7SnmEUcvq1YeXU6BF9NeV7BiG6kFFrWH - 4 tUSMN_u6XEGo_MG7uAWv9M6aHAUqjTY1UxwQPMVAsakQTjAKMsWg0LgdJTJ8zs7FW - uTgwFEbDVXgY18HYrHv61hhPmchK2cUIqi6p6JJ5Stir7LesvhtFaVWWeurSGvRDp6fFiDbBvPNzUWH7YI_SnyUVpC0ugLUR2RNAYBTgAgRO - HJqPASe1CEV0pE1zLs70 - Gn4EOsGWfYoYlqKfpshctoOi4 - NdEStPP - fpBVj0uOO604RRzb - L75ZVg9LRGaOXOWelLN6SE_b_W3aOrveb8xe7A2TU_7zX4lt1fEHthCBjCaT9fCOSWFdcIJRD4uYVJnKziwYh3ZR9pATvVIyVUUxMlgoIYTkId6wMcvSELUZ2yRD2YXmnbwOH889IEiBX - o4_HRxjuvMUqHLXaIVsvA8VvOh5XQCclwif5E3zIoXSXiYlLqdTEAJGN9lNz7xK_GZhiB0fnsgdWdyEcMvKEQWh1WjnFqO8ySAQFtGJlROErNP8 . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 423258946 ( 404 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L002_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L002_ 100 %[ ===================> ] 403.65 M 15.1 MB / s in 27 s 2020 - 01 - 16 18 : 56 : 40 ( 14.7 MB / s ) - \u2018 1 k_hgmm_v3_S1_L002_R1_001 . fastq . gz \u2019 saved [ 423258946/423258946 ] -- 2020 - 01 - 16 18 : 56 : 42 -- https : // caltech . box . com / shared / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 43 -- https : // caltech . box . com / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz [ following ] -- 2020 - 01 - 16 18 : 56 : 43 -- https : // caltech . app . box . com / public / static / 0 g7lnuieg8jxlxswrssdtz809gus75ek . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! 79 kAcHiZNW1K0g5DJlFaxIrBmP9Lq0jf5EpmyiR7Sgmpy5ctAFebeM - PuXcpFbOoZEVu0hOonAmRI11mSlDHIhd1ztkuqmhijupOwUo7xeD_Jl68Q_E_Vs9Jz_MU6SVcuHDI5OLiKU6pniutDYlW8FTIVxkdNG2nw9C99R1P - nbP4kj6KvqGcipyBI - 4 eA4OnXMZde9VFAYCGYl2RGZSph0rQElMBLu0urlryCZ2PCuX0uilIfwLVcNnXCZYI_fYR1__Mrlw9lvqjSovNgNZQzjuOT07UTailKUdPgOYlpDBqqmJGlOkZ2nunT5LMEZdiMl5U5t2mvYbnOwDiM05AGuANMoOBzkW4ysBJMPuKFV8M6YIUfQbZ6Pjh8RO3TKzCdAO_MTR__q1LElgeVWWD3hE_DFc5nJ19VsLfbdXwJca9ZFIsRsFF4yQRhYZIyi5IeI - pp0rBwQ - Ze8LQZBbH2U1_A6hkPwsE5Lrqlwc7wT2YFalTtNA6fbQc - 6 qzeQ70iiTEZiq11jJCfiHKMqijXzX8ctXu3aWg9XnrEhOsAzrejMVH6NrcbS_agMkEp5zJF1Bv3yqRhta6iAlLI7OE6 - Ccobtjpqgi2zwK3CppNPR65ORDdNSRtPqASkyAjzdbImfPioH71zKoOGXUEq7IcyDlN - Sc2B799voZko_pjbBVwkaJraT1yYaHyuHhHfFF - U - O_T0OQkPnbikjUAZJsazPd - hh8h_Syv1LyAKNMLPAMEfD3wfJuqoEpGmDfEX_h1uaBQOZk8NGlrXfJ0LJl3uMsb60OKA4_Q7NNyKK - B0Pc0A41zzpSURCs37vvG6Dm_uZY5xCCKwL85fBvUuKycZS7X5icUmbGb8Szmpysltr4UpZtFmJ0 - 4 WDAT0a9d0vNjEKsaYQeMSnQpocmLd52Q_6HJlP7aB_GugleSsn8bOTbwax6UAdt816rXQuUm30Jx1ZsjuErfb3flmf7jZ1O1gVzsgue0 - wzFdRRgabhWs_kxajgmEn_UnhzrsNFTkfgu06LTvaX - z4N3VM4JotiC - wsMJLusgZOaMhgou_z9zjR7XUx_1u3AsPm8gUUUeH5mx - WVxRcvqLSd7iLOqy3thk - DWb0700eAyocZj - V5b2Tu9OSfeT7x9lPv9bsipB9z8Gvtdq8 - _jgmc80Fq0s5NfGthlD7M5eJ_jVfXaj - dqwGTC6jvo3KpDggzsWVYvyZgEkL9my3yXKUqBAaEIHhMAjgVbkNGc3J_iaK7UiJvQgjNy2hcVWnIH1mcd_o3gVYSkwI8FJcmgPCEx3v_x9HrIu0Z5qSmnCn0q - ZbmuqlA443AOCv3sG99AH7CJxus25S_Fku_pzeIUCCCXbQmQBmeMEeM503xzfNo3lj7U0Oi4yaXTZoUMIwWwu_UJNJKU76gb9YbjzVcS - 5 - sc - lGaShA . / download [ following ] -- 2020 - 01 - 16 18 : 56 : 44 -- https : // public . boxcloud . com / d / 1 / b1 ! 79 kAcHiZNW1K0g5DJlFaxIrBmP9Lq0jf5EpmyiR7Sgmpy5ctAFebeM - PuXcpFbOoZEVu0hOonAmRI11mSlDHIhd1ztkuqmhijupOwUo7xeD_Jl68Q_E_Vs9Jz_MU6SVcuHDI5OLiKU6pniutDYlW8FTIVxkdNG2nw9C99R1P - nbP4kj6KvqGcipyBI - 4 eA4OnXMZde9VFAYCGYl2RGZSph0rQElMBLu0urlryCZ2PCuX0uilIfwLVcNnXCZYI_fYR1__Mrlw9lvqjSovNgNZQzjuOT07UTailKUdPgOYlpDBqqmJGlOkZ2nunT5LMEZdiMl5U5t2mvYbnOwDiM05AGuANMoOBzkW4ysBJMPuKFV8M6YIUfQbZ6Pjh8RO3TKzCdAO_MTR__q1LElgeVWWD3hE_DFc5nJ19VsLfbdXwJca9ZFIsRsFF4yQRhYZIyi5IeI - pp0rBwQ - Ze8LQZBbH2U1_A6hkPwsE5Lrqlwc7wT2YFalTtNA6fbQc - 6 qzeQ70iiTEZiq11jJCfiHKMqijXzX8ctXu3aWg9XnrEhOsAzrejMVH6NrcbS_agMkEp5zJF1Bv3yqRhta6iAlLI7OE6 - Ccobtjpqgi2zwK3CppNPR65ORDdNSRtPqASkyAjzdbImfPioH71zKoOGXUEq7IcyDlN - Sc2B799voZko_pjbBVwkaJraT1yYaHyuHhHfFF - U - O_T0OQkPnbikjUAZJsazPd - hh8h_Syv1LyAKNMLPAMEfD3wfJuqoEpGmDfEX_h1uaBQOZk8NGlrXfJ0LJl3uMsb60OKA4_Q7NNyKK - B0Pc0A41zzpSURCs37vvG6Dm_uZY5xCCKwL85fBvUuKycZS7X5icUmbGb8Szmpysltr4UpZtFmJ0 - 4 WDAT0a9d0vNjEKsaYQeMSnQpocmLd52Q_6HJlP7aB_GugleSsn8bOTbwax6UAdt816rXQuUm30Jx1ZsjuErfb3flmf7jZ1O1gVzsgue0 - wzFdRRgabhWs_kxajgmEn_UnhzrsNFTkfgu06LTvaX - z4N3VM4JotiC - wsMJLusgZOaMhgou_z9zjR7XUx_1u3AsPm8gUUUeH5mx - WVxRcvqLSd7iLOqy3thk - DWb0700eAyocZj - V5b2Tu9OSfeT7x9lPv9bsipB9z8Gvtdq8 - _jgmc80Fq0s5NfGthlD7M5eJ_jVfXaj - dqwGTC6jvo3KpDggzsWVYvyZgEkL9my3yXKUqBAaEIHhMAjgVbkNGc3J_iaK7UiJvQgjNy2hcVWnIH1mcd_o3gVYSkwI8FJcmgPCEx3v_x9HrIu0Z5qSmnCn0q - ZbmuqlA443AOCv3sG99AH7CJxus25S_Fku_pzeIUCCCXbQmQBmeMEeM503xzfNo3lj7U0Oi4yaXTZoUMIwWwu_UJNJKU76gb9YbjzVcS - 5 - sc - lGaShA . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 973374355 ( 928 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L002_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L002_ 100 %[ ===================> ] 928.28 M 13.0 MB / s in 75 s 2020 - 01 - 16 18 : 57 : 59 ( 12.3 MB / s ) - \u2018 1 k_hgmm_v3_S1_L002_R2_001 . fastq . gz \u2019 saved [ 973374355/973374355 ] -- 2020 - 01 - 16 18 : 58 : 00 -- https : // caltech . box . com / shared / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 01 -- https : // caltech . box . com / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 01 -- https : // caltech . app . box . com / public / static / 0 avmybuxqcw8haa1hf0n72oyb8zriiuu . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! zHrLG8OVxmbu_X5CCalwcI9XsSk7skfol3wOewRa56Hh9VPV0leflqfgU2rRSijvIjZ4Ro - jMVv0IWuh4koUegkVcoA7BnwUObdAITHF7CoIROzymgqEFYNucz19Xj400z6VJREgqtuADoCurcPaDjgYNeFtpuw6sneQpa0GqTi256k1hVbcxsbU_tmbBygR9TE1bHjNsrAqpu_J - 2 u_A9ppq - JHToyKwktrckM7bXshBgtIYMScGTYPgqaMnFQixuzhEb8e0jzdL7GFC84nBTkIvgaS7pExnd10ER3cYqOPpZrASu97cl0dZ6wxIvqYl85 - VFchjZXUwxc5afybt_lKOqSp8iMoPgggnFbZlFz261oQ3NvRAwvm5oFWWyZNAggGVorUweh - UQARGRYU4JD9VZKElwKD758BmYwa3pmGNhf5W95hSLze5Tpp47n8Hdl40QpPN0V60_y2nz2f7x - eMtOuoxU_KoWjMGG9Nr6WHKgFXpv - kKq9rAeTsmepkMFQDQmkKsvtQzi - 9 eNEg1DaBCBgLkdBz9a - 1 LhBut4Jx8D54 - uiroZCG5bvBLryJlYuNtkjAW8ickBx9_KBcDNBhQsN0RyeN3DIhTlHTo6EC41HkInwoYSMw0Nmq3zU - jtU4wRxz7b49w1C7foZ0miiONEz1azwAb9eN7PBQatyPfNbPAqaZo2z09fwjthYFrv0gSEYBkweo - Wn6HCUVeUdpnYd3j4F1KEA8KWmMPw7ZG - e5IO9jvChfUBtKXmFTDkECC - f_ORBlG1q6WuP6hgFZpuI1vWnKwVqHrx7CKHaazb7oNKz0M73F8Sbd5uc63v4i0I3crPsBBbrX2GwKqWiSm23TkZrBxOsIAkKtV1Vfjic4ji4UJ4W7_iP5FxyVrMLBE8rJpng53sochm0k4zx5ZcPvJPUz765el3U4aV_D4sf - hA66yEy_W9EG7zW4W2cZY1k9jrNCavoUP9z8zS9d - uNDeDlbBKfd72TYDers2xmoqSNWD447fiSGQ_YjKAQqhUTxPstLbdg3b2zzgm3hFccjMaR2bgmJxz8XvBGKGVnMochQKC89Asy0jnWAdjfA9gjidBe20oyTHoWLiNUuDl - L3j_cR4Aa - dc4ipXAQj31IciinSx3M54DvkqHVhYHDlzuagrfFqGzEF7grhJXs_sQHmFkUQsaTdF6eDZNVt_8L8w3Raw6nwQXT4Y3gG6XHIGwBSJeNTMMMEZdHZFXB5gahsZkFKJy_3sq2cPC8PgM3du5E4qv8ZPzP98AJfdY81khyCQefsshOw7hcNMqS_zL8r12AIlH_WR524K89BvHwDq6y7D7anHez39wJTmZYZOnYQ_ - OSyToo_6blIztoIuKpqLL3u4NwaO5jEV5GqhExBVsrw4U_dYtJaKbyK - OCu4HW2G_IGxOBVZ9SqBe0 . / download [ following ] -- 2020 - 01 - 16 18 : 58 : 02 -- https : // public . boxcloud . com / d / 1 / b1 ! zHrLG8OVxmbu_X5CCalwcI9XsSk7skfol3wOewRa56Hh9VPV0leflqfgU2rRSijvIjZ4Ro - jMVv0IWuh4koUegkVcoA7BnwUObdAITHF7CoIROzymgqEFYNucz19Xj400z6VJREgqtuADoCurcPaDjgYNeFtpuw6sneQpa0GqTi256k1hVbcxsbU_tmbBygR9TE1bHjNsrAqpu_J - 2 u_A9ppq - JHToyKwktrckM7bXshBgtIYMScGTYPgqaMnFQixuzhEb8e0jzdL7GFC84nBTkIvgaS7pExnd10ER3cYqOPpZrASu97cl0dZ6wxIvqYl85 - VFchjZXUwxc5afybt_lKOqSp8iMoPgggnFbZlFz261oQ3NvRAwvm5oFWWyZNAggGVorUweh - UQARGRYU4JD9VZKElwKD758BmYwa3pmGNhf5W95hSLze5Tpp47n8Hdl40QpPN0V60_y2nz2f7x - eMtOuoxU_KoWjMGG9Nr6WHKgFXpv - kKq9rAeTsmepkMFQDQmkKsvtQzi - 9 eNEg1DaBCBgLkdBz9a - 1 LhBut4Jx8D54 - uiroZCG5bvBLryJlYuNtkjAW8ickBx9_KBcDNBhQsN0RyeN3DIhTlHTo6EC41HkInwoYSMw0Nmq3zU - jtU4wRxz7b49w1C7foZ0miiONEz1azwAb9eN7PBQatyPfNbPAqaZo2z09fwjthYFrv0gSEYBkweo - Wn6HCUVeUdpnYd3j4F1KEA8KWmMPw7ZG - e5IO9jvChfUBtKXmFTDkECC - f_ORBlG1q6WuP6hgFZpuI1vWnKwVqHrx7CKHaazb7oNKz0M73F8Sbd5uc63v4i0I3crPsBBbrX2GwKqWiSm23TkZrBxOsIAkKtV1Vfjic4ji4UJ4W7_iP5FxyVrMLBE8rJpng53sochm0k4zx5ZcPvJPUz765el3U4aV_D4sf - hA66yEy_W9EG7zW4W2cZY1k9jrNCavoUP9z8zS9d - uNDeDlbBKfd72TYDers2xmoqSNWD447fiSGQ_YjKAQqhUTxPstLbdg3b2zzgm3hFccjMaR2bgmJxz8XvBGKGVnMochQKC89Asy0jnWAdjfA9gjidBe20oyTHoWLiNUuDl - L3j_cR4Aa - dc4ipXAQj31IciinSx3M54DvkqHVhYHDlzuagrfFqGzEF7grhJXs_sQHmFkUQsaTdF6eDZNVt_8L8w3Raw6nwQXT4Y3gG6XHIGwBSJeNTMMMEZdHZFXB5gahsZkFKJy_3sq2cPC8PgM3du5E4qv8ZPzP98AJfdY81khyCQefsshOw7hcNMqS_zL8r12AIlH_WR524K89BvHwDq6y7D7anHez39wJTmZYZOnYQ_ - OSyToo_6blIztoIuKpqLL3u4NwaO5jEV5GqhExBVsrw4U_dYtJaKbyK - OCu4HW2G_IGxOBVZ9SqBe0 . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 421486566 ( 402 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L003_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L003_ 100 %[ ===================> ] 401.96 M 16.8 MB / s in 25 s 2020 - 01 - 16 18 : 58 : 28 ( 16.2 MB / s ) - \u2018 1 k_hgmm_v3_S1_L003_R1_001 . fastq . gz \u2019 saved [ 421486566/421486566 ] -- 2020 - 01 - 16 18 : 58 : 29 -- https : // caltech . box . com / shared / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 29 -- https : // caltech . box . com / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz [ following ] -- 2020 - 01 - 16 18 : 58 : 29 -- https : // caltech . app . box . com / public / static / hp10z2yr8u3lbzoj1qflz83r2v9ohs6q . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! LNaWTLUQ - vxEPA9_tHQ4uDYdxzj - 1 zQ5BQ6bOusms_Y99Z8R8PZNzG_fYT4TROauq - YdTB9GtbP4dfwW_zRVQJ8CGgLSskQSK0I06Z_JI9uY0lvn39jSklO1R9c0EJk8uYJGyPErMQEIv2PGFv0R6X - loY3xReq_f8qlO6nH3xycTSaVs3tJ5DNQQvPyGa0UVXs2zpKVI_jsxCvOI_rn - _W - AS5hurrs4NSi_KQfe - phIxvzJoeN35otkm7WFj4Uqr9yY9JR6rdar458hlWkM35o - hBdoEqfEX7bjbUwVYhCLUX - KVdym_gNuWpLlUokqiSB7mRbila0_zyiOnuYp41r1uo4B_MQfGefTPi4Sft - uDSEMbpebxDvwgVO - 6 TXrjy41ltLydUSTl8npGK0HpGiwfq - 4 dyZGf9HC6AlVcsnW3i6o - naZaP0Q25Vy2YGVfXPODqEo8HF0VRYUC6JuisLHQbPoN_2MCD3Ba - rY60XzosXWzTojVRQWbBRSUZR4Bj - fYfo7TPndzkmbVUgnmYpi_twtu0O8B9VwkKYBR5EYrVsPiR00O1TxrXMpApFnyNCPG5PlNmktvYX_yst2dSsZJtxLoykEJIKTCHOVfpze_J8YJhBcGIFmlLp7I7I8dlxJlZ125zWRWlIEg0gv3ihFtl7Xm6F_0KlgZ67hsjXyW6Wi45hiyOxOsO1n8z9n0BlMMPpOHX_DsC3kz0D4SM - 9 XKHivQ8fWcMIND5ZWY0azA0kA0Hk0r22DgKgBozCl2QTw9_2taOyIMeZaRMCxVDX6Eh2X4r6XAMSjzmzpVlQXQwm1u4 - dBMokk8ExwLmi1ViKiCfoOpmE6SSkE2tODHCGTwkEkHWbUe1zz2cEhTsjxwv1P2Frq8RrcAn4cn_3bZ5EHhzE9Rsrp5xQFAd60sAo3s76fvholiwvj4v16bT8FSxBuL456yOC5PmyKAkanksb8UAyZiMM2RwzRmVLr4WGeRehVPwl4E11LkIiKCm3OVZ2aYx3lKMNdAw9VqvQn3rkT1fsS86iz7UGnHS - HIWi6RtMJRFs4zFcsHmUozCUNC9gbkqCWPdpYUffYjzvD6Mrw7Lj2lTjfKlVCF1 - YnbWNxREmSyREwCt - MbZ31C08p0XFCsPUhUQTfSHLzmghuCB2MHhDJhN_hIftJGflZUq - 4 pQksPHR3uXl2P - zZiObYWDzVt5KqmKUbVn0FVmVYruayzYYJDZ9NQF_jSJ - RNgPXT6kVbZqJfu5_lME07vaKluqNHhgrh3m5TAb7Acy6g7kaIGa - Ap4vQ1DYDooIHPbDrQGSbaiEW_p3KqNG4eFjgmoHarBFAcN3CqcJB2gmykPa8nCLn9oWt4Va6Ag0YXg9F8R9Va37PGTe9 - HIzi0MVn - RAAmz - 1 M5WFnonQ0KUfTB5qfGpumhQ8MB3ELERMg . / download [ following ] -- 2020 - 01 - 16 18 : 58 : 30 -- https : // public . boxcloud . com / d / 1 / b1 ! LNaWTLUQ - vxEPA9_tHQ4uDYdxzj - 1 zQ5BQ6bOusms_Y99Z8R8PZNzG_fYT4TROauq - YdTB9GtbP4dfwW_zRVQJ8CGgLSskQSK0I06Z_JI9uY0lvn39jSklO1R9c0EJk8uYJGyPErMQEIv2PGFv0R6X - loY3xReq_f8qlO6nH3xycTSaVs3tJ5DNQQvPyGa0UVXs2zpKVI_jsxCvOI_rn - _W - AS5hurrs4NSi_KQfe - phIxvzJoeN35otkm7WFj4Uqr9yY9JR6rdar458hlWkM35o - hBdoEqfEX7bjbUwVYhCLUX - KVdym_gNuWpLlUokqiSB7mRbila0_zyiOnuYp41r1uo4B_MQfGefTPi4Sft - uDSEMbpebxDvwgVO - 6 TXrjy41ltLydUSTl8npGK0HpGiwfq - 4 dyZGf9HC6AlVcsnW3i6o - naZaP0Q25Vy2YGVfXPODqEo8HF0VRYUC6JuisLHQbPoN_2MCD3Ba - rY60XzosXWzTojVRQWbBRSUZR4Bj - fYfo7TPndzkmbVUgnmYpi_twtu0O8B9VwkKYBR5EYrVsPiR00O1TxrXMpApFnyNCPG5PlNmktvYX_yst2dSsZJtxLoykEJIKTCHOVfpze_J8YJhBcGIFmlLp7I7I8dlxJlZ125zWRWlIEg0gv3ihFtl7Xm6F_0KlgZ67hsjXyW6Wi45hiyOxOsO1n8z9n0BlMMPpOHX_DsC3kz0D4SM - 9 XKHivQ8fWcMIND5ZWY0azA0kA0Hk0r22DgKgBozCl2QTw9_2taOyIMeZaRMCxVDX6Eh2X4r6XAMSjzmzpVlQXQwm1u4 - dBMokk8ExwLmi1ViKiCfoOpmE6SSkE2tODHCGTwkEkHWbUe1zz2cEhTsjxwv1P2Frq8RrcAn4cn_3bZ5EHhzE9Rsrp5xQFAd60sAo3s76fvholiwvj4v16bT8FSxBuL456yOC5PmyKAkanksb8UAyZiMM2RwzRmVLr4WGeRehVPwl4E11LkIiKCm3OVZ2aYx3lKMNdAw9VqvQn3rkT1fsS86iz7UGnHS - HIWi6RtMJRFs4zFcsHmUozCUNC9gbkqCWPdpYUffYjzvD6Mrw7Lj2lTjfKlVCF1 - YnbWNxREmSyREwCt - MbZ31C08p0XFCsPUhUQTfSHLzmghuCB2MHhDJhN_hIftJGflZUq - 4 pQksPHR3uXl2P - zZiObYWDzVt5KqmKUbVn0FVmVYruayzYYJDZ9NQF_jSJ - RNgPXT6kVbZqJfu5_lME07vaKluqNHhgrh3m5TAb7Acy6g7kaIGa - Ap4vQ1DYDooIHPbDrQGSbaiEW_p3KqNG4eFjgmoHarBFAcN3CqcJB2gmykPa8nCLn9oWt4Va6Ag0YXg9F8R9Va37PGTe9 - HIzi0MVn - RAAmz - 1 M5WFnonQ0KUfTB5qfGpumhQ8MB3ELERMg . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 970486795 ( 926 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L003_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L003_ 100 %[ ===================> ] 925.53 M 15.6 MB / s in 60 s 2020 - 01 - 16 18 : 59 : 30 ( 15.5 MB / s ) - \u2018 1 k_hgmm_v3_S1_L003_R2_001 . fastq . gz \u2019 saved [ 970486795/970486795 ] -- 2020 - 01 - 16 18 : 59 : 32 -- https : // caltech . box . com / shared / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz [ following ] -- 2020 - 01 - 16 18 : 59 : 32 -- https : // caltech . box . com / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz [ following ] -- 2020 - 01 - 16 18 : 59 : 33 -- https : // caltech . app . box . com / public / static / fx8fduedje53dvf3xixyyaqzugn7yy85 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! imbmg2pYPv4x_SlBgRNQE5NOR5aNqtkjYk - YINStXZGTaCj8buOftPVEncitP7br6ug5kpmYANYKROeXMtjOfORToRAZg24MIIVLjG7Z7tuYdgBMo - 2 o2S8YCrolfWwUMYgsv0y9qSb0RNQZx6OpB1Tbq9eiUjn9YW7vKQ1_QA6tY10HgzSI_HbcPPStqpen8U0JasrqZ8g3OUw7MRx2m5JYuDYV3BbCiMVdah5HDBk_Ce53T5cJL8uKuMoxNHqgohQ6vL8pLZLlLCqoPjbhKWeTyxnyVFTxL - ke_OyllVx8kaC3F4HqNwGf1fWm6bcxi8H7 - 0 mnlBY36qP5MrZ3sw6EPdP6Wq3o - 4 WcMggxXn0cxqxRkXbWfZm1l0tXdY_MtzavlsLZgx - biwOvAhZ6vFwL0hTAxuRdX59nxersZ3bgDvW2HJZnHTlShvRJzEIjZeJzp1lFQPz0MlQYiNh2Tj5T182PED8BoFWvrSd2Ft0nmZ3dkOTvqYikpI7kxR0aR6TCtxZQZXYssb5QYmvJ - wfhBY7ta - Kxezx9rxQvBZWGuv1tUkULoGt9hlB_MK1knySnTuYaZSHtpa46vzuLKQUVsy6rdfHsjjhkPfSP8vsz6OsunPIesENH7OaIPOAPcaOSdAaSKL7TNUeGa0_E5RcUugz8adLWcER12bG6zeo8 - wqbYIr32IuH1VRIW6U2szmSMdJ60sssRXHeapkuPcyOlnq4kqrtbXYkATHsJDw0PAd88_B1Bl16LEEFy6BpgcL1gLBCYDOZivVEzv2ZJh2o5PptBIPnWWbdCZxIfvMcFCUo1Z9OA - BYlUL9YrsaAZP3Ndb_U78Vv6y0H0ENJudx8LchOXWrV6hnHuILUpq16KmyxRWTF4CPey05hNLhSQGvv9KSIR1E05sU7lQHjFK3BttPkoQlk1oA8aAjXASIG72lHNztLblGj9jxrOBJ6k0sfSfC - aRgT0MntN_YghdiZq8jmRqQP0jx34D2gAagtPhyC7JhmAA44fEpx2Syjr2yS4mH3IdWCfPAKeG4M3MvpLKmTXi9enaYqHXCPrqoll_lYB8VwKXDSdzIZayUyCCBLGd4rLuVGCuceeQ8xJxoRG4LDAqwf97 - Qh5tMucrZ3K6aRGBT - L0YqZROgcE_Wtvw6oRFt7F - 6 y7a3eVx2BoKagRPm11GEOgKFZfZi8IOL5seAs9PSqTqwdZN9_FmcB0M5FQDTyAfHy - Xb0TsUmmz_UceeMxz5QQcqY - F36YoCw3UUwv4QbgTTahuRcpHFCfOh1mK3k2glKu_2LPxhIsDBhuijDaMwO - o5HHnsuYmBC1VhZfmWE9suqaC4RZxGCyHrYLhuGytTao99b_A1Mov - eK0Zg7SohrntkpvncgUa1kbEOGE3yP9eOvT985RAa2uxkGonWxQpxOeiq1awWwT79Q / download [ following ] -- 2020 - 01 - 16 18 : 59 : 33 -- https : // public . boxcloud . com / d / 1 / b1 ! imbmg2pYPv4x_SlBgRNQE5NOR5aNqtkjYk - YINStXZGTaCj8buOftPVEncitP7br6ug5kpmYANYKROeXMtjOfORToRAZg24MIIVLjG7Z7tuYdgBMo - 2 o2S8YCrolfWwUMYgsv0y9qSb0RNQZx6OpB1Tbq9eiUjn9YW7vKQ1_QA6tY10HgzSI_HbcPPStqpen8U0JasrqZ8g3OUw7MRx2m5JYuDYV3BbCiMVdah5HDBk_Ce53T5cJL8uKuMoxNHqgohQ6vL8pLZLlLCqoPjbhKWeTyxnyVFTxL - ke_OyllVx8kaC3F4HqNwGf1fWm6bcxi8H7 - 0 mnlBY36qP5MrZ3sw6EPdP6Wq3o - 4 WcMggxXn0cxqxRkXbWfZm1l0tXdY_MtzavlsLZgx - biwOvAhZ6vFwL0hTAxuRdX59nxersZ3bgDvW2HJZnHTlShvRJzEIjZeJzp1lFQPz0MlQYiNh2Tj5T182PED8BoFWvrSd2Ft0nmZ3dkOTvqYikpI7kxR0aR6TCtxZQZXYssb5QYmvJ - wfhBY7ta - Kxezx9rxQvBZWGuv1tUkULoGt9hlB_MK1knySnTuYaZSHtpa46vzuLKQUVsy6rdfHsjjhkPfSP8vsz6OsunPIesENH7OaIPOAPcaOSdAaSKL7TNUeGa0_E5RcUugz8adLWcER12bG6zeo8 - wqbYIr32IuH1VRIW6U2szmSMdJ60sssRXHeapkuPcyOlnq4kqrtbXYkATHsJDw0PAd88_B1Bl16LEEFy6BpgcL1gLBCYDOZivVEzv2ZJh2o5PptBIPnWWbdCZxIfvMcFCUo1Z9OA - BYlUL9YrsaAZP3Ndb_U78Vv6y0H0ENJudx8LchOXWrV6hnHuILUpq16KmyxRWTF4CPey05hNLhSQGvv9KSIR1E05sU7lQHjFK3BttPkoQlk1oA8aAjXASIG72lHNztLblGj9jxrOBJ6k0sfSfC - aRgT0MntN_YghdiZq8jmRqQP0jx34D2gAagtPhyC7JhmAA44fEpx2Syjr2yS4mH3IdWCfPAKeG4M3MvpLKmTXi9enaYqHXCPrqoll_lYB8VwKXDSdzIZayUyCCBLGd4rLuVGCuceeQ8xJxoRG4LDAqwf97 - Qh5tMucrZ3K6aRGBT - L0YqZROgcE_Wtvw6oRFt7F - 6 y7a3eVx2BoKagRPm11GEOgKFZfZi8IOL5seAs9PSqTqwdZN9_FmcB0M5FQDTyAfHy - Xb0TsUmmz_UceeMxz5QQcqY - F36YoCw3UUwv4QbgTTahuRcpHFCfOh1mK3k2glKu_2LPxhIsDBhuijDaMwO - o5HHnsuYmBC1VhZfmWE9suqaC4RZxGCyHrYLhuGytTao99b_A1Mov - eK0Zg7SohrntkpvncgUa1kbEOGE3yP9eOvT985RAa2uxkGonWxQpxOeiq1awWwT79Q / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 428614106 ( 409 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L004_R1_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L004_ 100 %[ ===================> ] 408.76 M 14.8 MB / s in 27 s 2020 - 01 - 16 19 : 00 : 01 ( 14.9 MB / s ) - \u2018 1 k_hgmm_v3_S1_L004_R1_001 . fastq . gz \u2019 saved [ 428614106/428614106 ] -- 2020 - 01 - 16 19 : 00 : 03 -- https : // caltech . box . com / shared / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz [ following ] -- 2020 - 01 - 16 19 : 00 : 03 -- https : // caltech . box . com / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz [ following ] -- 2020 - 01 - 16 19 : 00 : 03 -- https : // caltech . app . box . com / public / static / lpt6uzmueh1l2vx71nvsdj3pwqh8z3ak . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! aR - u6N2LrOdq - EuVbJbBEUk_6DUe630nsy8NEYSVJo78KVIcz8zdjQ8iMc0ipefvzQ2XAGOevcum9kZ8qqSKR0xSqs420wqrhoyfIQO7NVqI5a - bHk8u - uS5RLcAByJddbj - XB1Iv2LM45DL0OKC1aW8UOrk - o1MqethJAtF0iJSccRI0GZBJstB8IXrDuhhF0pYd8hh1DOQVasV1FL6 - 2 VpFNA7DHlqnh2Ox80X0ratcJAncbtChZhnU48xVcKDmAOehay9a8eOhjck7ej94n1EK7AOx7MI7dvSUA8yUfkjHK4jCWVC6jlexRNymoaa4P_zDl1wGJO_u581 - dhKxXE0ht4zwNuSo8EHEaYAI8q_XAHxTQzMFvu6Rp6uTUc7jP3y_9f9GiiwtBU496QgBbTaZ4CcifmXJa_qb_eIR1iUHmjpnVgSS1XK - 8 Zfz37Y7DUFPKJz4daBCozgU92F2Oe6_TplzA4exVx - QzVDMD - btpWAOOibAQ1lfqsEXjEPieOWUs9kVlNUfG4kmK34YqYMAkRnCsMzLoy0GtGqyLOPSMGwfk170LeNjJn - nwGs_XBL4gttrqjEcnppHHaEcC - 8 Hy8wQQ6BBrjiDQ5X - ZfytkXny_jZ7IFOPIOkg3j8ykIfOuoM8gTaKRSuuxGPRUTBJLxSH9noHEGoIALqWgZ18YdzVzGeNnm6ANMezOOivt7CLtdJ2Ctg3Qa - C0qdZj_fnbab3JO8dOEdiTlgTob2sA3_3QNh3Hnp7dtpHiEyAXYoarOnuk0ylDDRDWl9yxuuHZXFSc2FkQywkMWz0lbNLAoiVL8v5HfDXA6_DAOGgjFnv7YEOGA5I3mOBUhb7eGjJMDSfk - eWkf3m_ISe2fPM002vLFU2BuXBxItcUXpvpGXYFq_Eio - Fj7a4N6zjfOh5VhO__oa6LO0H7ZBkvkPZv4Z77ON4r4j50HqcwAaDP19gpSm4ac8qXV3aQAKdq2b3Cp5 - by - 4 iL4iNFu3XEnYw562uBgKmUQtnBRIr9JXcH5_73c3WP7WFFRfiddmpIBWUOIOLXNZLZ5ge2Is8t6wXGiyhgPNwDjvoJk18evgoU5fnjQDR4x_XHbKr2rpA6XGMguWqOHA9F1I8iCW0UV1tupLzs6fslujlnsfmci - ih33YBdzwgeDkzvT8zCkxdXxktPWES1a3X06NUp7oOa1FaC8AOfBBcaA7JozlM2om369I5WTqe - UCzd5Pg_LODf2hVFxtsNipjoHMESLcJwWJTUnE5o5ttsOYnhy - GIFbeqZsd7rhVIKrBhPx2oSavUMsJtYM44cp3BEdbSKXKj5pj8nQW9wCLVPgz5AyoyMJHZ72He8ax3rZFxk15uamgy9ywrc4q9DukMpuLmVGN9lG9eDm2IXIAO_QeBmPRqQQ07H7CJFARP0SgCTG56sg24GyE . / download [ following ] -- 2020 - 01 - 16 19 : 00 : 04 -- https : // public . boxcloud . com / d / 1 / b1 ! aR - u6N2LrOdq - EuVbJbBEUk_6DUe630nsy8NEYSVJo78KVIcz8zdjQ8iMc0ipefvzQ2XAGOevcum9kZ8qqSKR0xSqs420wqrhoyfIQO7NVqI5a - bHk8u - uS5RLcAByJddbj - XB1Iv2LM45DL0OKC1aW8UOrk - o1MqethJAtF0iJSccRI0GZBJstB8IXrDuhhF0pYd8hh1DOQVasV1FL6 - 2 VpFNA7DHlqnh2Ox80X0ratcJAncbtChZhnU48xVcKDmAOehay9a8eOhjck7ej94n1EK7AOx7MI7dvSUA8yUfkjHK4jCWVC6jlexRNymoaa4P_zDl1wGJO_u581 - dhKxXE0ht4zwNuSo8EHEaYAI8q_XAHxTQzMFvu6Rp6uTUc7jP3y_9f9GiiwtBU496QgBbTaZ4CcifmXJa_qb_eIR1iUHmjpnVgSS1XK - 8 Zfz37Y7DUFPKJz4daBCozgU92F2Oe6_TplzA4exVx - QzVDMD - btpWAOOibAQ1lfqsEXjEPieOWUs9kVlNUfG4kmK34YqYMAkRnCsMzLoy0GtGqyLOPSMGwfk170LeNjJn - nwGs_XBL4gttrqjEcnppHHaEcC - 8 Hy8wQQ6BBrjiDQ5X - ZfytkXny_jZ7IFOPIOkg3j8ykIfOuoM8gTaKRSuuxGPRUTBJLxSH9noHEGoIALqWgZ18YdzVzGeNnm6ANMezOOivt7CLtdJ2Ctg3Qa - C0qdZj_fnbab3JO8dOEdiTlgTob2sA3_3QNh3Hnp7dtpHiEyAXYoarOnuk0ylDDRDWl9yxuuHZXFSc2FkQywkMWz0lbNLAoiVL8v5HfDXA6_DAOGgjFnv7YEOGA5I3mOBUhb7eGjJMDSfk - eWkf3m_ISe2fPM002vLFU2BuXBxItcUXpvpGXYFq_Eio - Fj7a4N6zjfOh5VhO__oa6LO0H7ZBkvkPZv4Z77ON4r4j50HqcwAaDP19gpSm4ac8qXV3aQAKdq2b3Cp5 - by - 4 iL4iNFu3XEnYw562uBgKmUQtnBRIr9JXcH5_73c3WP7WFFRfiddmpIBWUOIOLXNZLZ5ge2Is8t6wXGiyhgPNwDjvoJk18evgoU5fnjQDR4x_XHbKr2rpA6XGMguWqOHA9F1I8iCW0UV1tupLzs6fslujlnsfmci - ih33YBdzwgeDkzvT8zCkxdXxktPWES1a3X06NUp7oOa1FaC8AOfBBcaA7JozlM2om369I5WTqe - UCzd5Pg_LODf2hVFxtsNipjoHMESLcJwWJTUnE5o5ttsOYnhy - GIFbeqZsd7rhVIKrBhPx2oSavUMsJtYM44cp3BEdbSKXKj5pj8nQW9wCLVPgz5AyoyMJHZ72He8ax3rZFxk15uamgy9ywrc4q9DukMpuLmVGN9lG9eDm2IXIAO_QeBmPRqQQ07H7CJFARP0SgCTG56sg24GyE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 984350311 ( 939 M ) [ application/octet-stream ] Saving to : \u2018 1 k_hgmm_v3_S1_L004_R2_001 . fastq . gz \u2019 1 k_hgmm_v3_S1_L004_ 100 %[ ===================> ] 938.75 M 14.8 MB / s in 66 s 2020 - 01 - 16 19 : 01 : 11 ( 14.3 MB / s ) - \u2018 1 k_hgmm_v3_S1_L004_R2_001 . fastq . gz \u2019 saved [ 984350311/984350311 ] CPU times : user 4.07 s , sys : 923 ms , total : 4.99 s Wall time : 6 min 36 s Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing 1 k_hgmm_v3_S1_L001_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L001_R2_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L002_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L002_R2_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L003_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L003_R2_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L004_R1_001 . fastq . gz : OK 1 k_hgmm_v3_S1_L004_R2_001 . fastq . gz : OK","title":"Download the data"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#install-kb","text":"Install kb for running the kallisto|bustools workflow. 1 !pip install git+https://github.com/pachterlab/kb_python@count-kite Collecting git + https : // github . com / pachterlab / kb_python @ count - kite Cloning https : // github . com / pachterlab / kb_python ( to revision count - kite ) to / tmp / pip - req - build - a0qz7ipg Running command git clone - q https : // github . com / pachterlab / kb_python / tmp / pip - req - build - a0qz7ipg Running command git checkout - b count - kite -- track origin / count - kite Switched to a new branch 'count-kite' Branch 'count-kite' set up to track remote branch 'count-kite' from 'origin' . Collecting anndata >= 0.6 . 22. post1 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 2 b / 72 / 87196 c15f68d9865c31a43a10cf7c50bcbcedd5607d09f9aada0b3963103 / anndata - 0.6 . 22. post1 - py3 - none - any . whl ( 47 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 1.5 MB / s \u001b [ ? 25 hCollecting loompy >= 3.0 . 6 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 36 / 52 / 74 ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9 / loompy - 3.0 . 6. tar . gz ( 41 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5.2 MB / s \u001b [ ? 25 hRequirement already satisfied : requests >= 2.19 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 2.21 . 0 ) Collecting tqdm >= 4.39 . 0 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 72 / c9 / 7 fc20feac72e79032a7c8138fd0d395dc6d8812b5b9edf53c3afd0b31017 / tqdm - 4.41 . 1 - py2 . py3 - none - any . whl ( 56 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 61 kB 6.0 MB / s \u001b [ ? 25 hRequirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.8 . 0 ) Requirement already satisfied : numpy ~= 1.14 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.17 . 5 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 5.5 . 0 ) Requirement already satisfied : scipy ~= 1.0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.4 . 1 ) Requirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 0.25 . 3 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 42.0 . 2 ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.47 . 0 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 7.0 ) Collecting numpy - groupies \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 57 / ae / 18217 b57ba3e4bb8a44ecbfc161ed065f6d1b90c75d404bd6ba8d6f024e2 / numpy_groupies - 0.9 . 10. tar . gz ( 43 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 5.0 MB / s \u001b [ ? 25 hRequirement already satisfied : urllib3 < 1.25 , >= 1.21 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 1.24 . 3 ) Requirement already satisfied : chardet < 3.1 . 0 , >= 3.0 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 3.0 . 4 ) Requirement already satisfied : idna < 2.9 , >= 2.5 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2.8 ) Requirement already satisfied : certifi >= 2017.4 . 17 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2019.11 . 28 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.12 . 0 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.6 . 1 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2018.9 ) Requirement already satisfied : llvmlite >= 0.31 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.31 . 0 ) Building wheels for collected packages : kb - python , loompy , numpy - groupies Building wheel for kb - python ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for kb - python : filename = kb_python - 0.24 . 4 - cp36 - none - any . whl size = 80991434 sha256 = b20b650c19860c1906c5f89f39c001fc874adf088a4ea686339d12b8d79bb949 Stored in directory : / tmp / pip - ephem - wheel - cache - jjr0rnle / wheels / 8 e / 56 / 56 / c89223de74af26792675e82f4bb5223e7cf0d653a33038e34c Building wheel for loompy ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for loompy : filename = loompy - 3.0 . 6 - cp36 - none - any . whl size = 47896 sha256 = a5e692dd7ff61ebcf5e8a8c6fbbe7b21d7c62ef647f1cf05c685a47022b8ad3f Stored in directory : / root /. cache / pip / wheels / f9 / a4 / 90 / 5 a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9 Building wheel for numpy - groupies ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for numpy - groupies : filename = numpy_groupies - 0 + unknown - cp36 - none - any . whl size = 28044 sha256 = cad74d3e67d56a0982d83056af061c8f0c0f78550f14af52834f6523756b1c7d Stored in directory : / root /. cache / pip / wheels / 30 / ac / 83 / 64 d5f9293aeaec63f9539142fc629a41af064cae1b3d8d94aa Successfully built kb - python loompy numpy - groupies Installing collected packages : anndata , numpy - groupies , loompy , tqdm , kb - python Found existing installation : tqdm 4.28 . 1 Uninstalling tqdm - 4.28 . 1 : Successfully uninstalled tqdm - 4.28 . 1 Successfully installed anndata - 0.6 . 22. post1 kb - python - 0.24 . 4 loompy - 3.0 . 6 numpy - groupies - 0 + unknown tqdm - 4.41 . 1","title":"Install kb"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#download-human-and-mouse-reference-files","text":"We will download the following files from Ensembl: * Mouse genome (FASTA) * Mouse genome annotations (GTF) * Human genome (FASTA) * Human genome annotations (GTF) 1 2 3 4 5 %%time !wget ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz !wget ftp://ftp.ensembl.org/pub/release-98/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/homo_sapiens/Homo_sapiens.GRCh38.98.gtf.gz --2020-01-16 19:02:01-- ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz => \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/mus_musculus/dna ... done. ==> SIZE Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... 805984352 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... done. Length: 805984352 (769M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 768.65M 3.72MB/s in 3m 24s 2020-01-16 19:05:30 (3.76 MB/s) - \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 saved [805984352] --2020-01-16 19:05:31-- ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz => \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/mus_musculus ... done. ==> SIZE Mus_musculus.GRCm38.98.gtf.gz ... 30256597 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.98.gtf.gz ... done. Length: 30256597 (29M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 28.85M 5.48MB/s in 5.3s 2020-01-16 19:05:40 (5.48 MB/s) - \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 saved [30256597] --2020-01-16 19:05:41-- ftp://ftp.ensembl.org/pub/release-98/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz => \u2018Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/homo_sapiens/dna ... done. ==> SIZE Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz ... 881211416 ==> PASV ... done. ==> RETR Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz ... done. Length: 881211416 (840M) (unauthoritative) Homo_sapiens.GRCh38 100%[===================>] 840.39M 8.60MB/s in 2m 58s 2020-01-16 19:08:43 (4.72 MB/s) - \u2018Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz\u2019 saved [881211416] --2020-01-16 19:08:44-- ftp://ftp.ensembl.org/pub/release-98/gtf/homo_sapiens/Homo_sapiens.GRCh38.98.gtf.gz => \u2018Homo_sapiens.GRCh38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/homo_sapiens ... done. ==> SIZE Homo_sapiens.GRCh38.98.gtf.gz ... 46712404 ==> PASV ... done. ==> RETR Homo_sapiens.GRCh38.98.gtf.gz ... done. Length: 46712404 (45M) (unauthoritative) Homo_sapiens.GRCh38 100%[===================>] 44.55M 6.53MB/s in 9.3s 2020-01-16 19:08:57 (4.79 MB/s) - \u2018Homo_sapiens.GRCh38.98.gtf.gz\u2019 saved [46712404] CPU times: user 3.91 s, sys: 853 ms, total: 4.76 s Wall time: 6min 56s","title":"Download human and mouse reference files"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#build-the-mixed-species-index","text":"kb can build a single transcriptome index with multiple references. The FASTAs and GTFs must be passed in as a comma-separated list. Note : Because Google Colab offers limited RAM, we split the index into 4 parts. 1 2 3 4 %%time !kb ref -i mixed_index.idx -g mixed_t2g.txt -f1 mixed_cdna.fa -n 4 \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz,Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz \\ Mus_musculus.GRCm38.98.gtf.gz,Homo_sapiens.GRCh38.98.gtf.gz [ 2020 - 01 - 16 19 : 09 : 00 , 016 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2020 - 01 - 16 19 : 09 : 00 , 016 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 19 : 09 : 03 , 821 ] INFO Creating transcript - to - gene mapping at / content / tmp / tmp_54cxwsm [ 2020 - 01 - 16 19 : 09 : 41 , 067 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 19 : 10 : 07 , 073 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmp8njkjc7p [ 2020 - 01 - 16 19 : 17 : 20 , 153 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmpdb4z6qdv [ 2020 - 01 - 16 19 : 18 : 16 , 788 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpbwrr1fgf [ 2020 - 01 - 16 19 : 18 : 16 , 788 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: JH584302.1, GL456394.1, GL456383.1, GL456392.1, GL456393.1, GL456396.1, GL456213.1, GL456366.1, GL456370.1, GL456360.1, JH584300.1, GL456390.1, GL456359.1, GL456387.1, GL456378.1, GL456389.1, GL456379.1, GL456368.1, GL456382.1, GL456367.1, JH584301.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 19 : 19 : 12 , 867 ] INFO Wrote 142446 cDNA transcripts [ 2020 - 01 - 16 19 : 19 : 12 , 870 ] INFO Preparing Homo_sapiens . GRCh38 . dna . primary_assembly . fa . gz , Homo_sapiens . GRCh38 . 98 . gtf . gz [ 2020 - 01 - 16 19 : 19 : 12 , 870 ] INFO Decompressing Homo_sapiens . GRCh38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 19 : 19 : 19 , 514 ] INFO Creating transcript - to - gene mapping at / content / tmp / tmpbcio2ycd [ 2020 - 01 - 16 19 : 20 : 16 , 297 ] INFO Decompressing Homo_sapiens . GRCh38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 19 : 20 : 44 , 907 ] INFO Sorting tmp / Homo_sapiens . GRCh38 . dna . primary_assembly . fa to / content / tmp / tmpotz6u8im [ 2020 - 01 - 16 19 : 28 : 55 , 130 ] INFO Sorting tmp / Homo_sapiens . GRCh38 . 98 . gtf to / content / tmp / tmpm1lths39 [ 2020 - 01 - 16 19 : 30 : 22 , 587 ] INFO Splitting genome tmp / Homo_sapiens . GRCh38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmpzdmdny6v [ 2020 - 01 - 16 19 : 30 : 22 , 587 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: KI270311.1, KI270580.1, KI270424.1, KI270304.1, KI270305.1, KI270708.1, KI270591.1, KI270316.1, GL000008.2, KI270507.1, KI270364.1, KI270749.1, KI270548.1, KI270363.1, KI270414.1, KI270709.1, KI270583.1, KI270395.1, KI270322.1, KI270746.1, KI270390.1, KI270435.1, KI270411.1, KI270362.1, KI270751.1, KI270755.1, KI270735.1, GL000214.1, KI270312.1, KI270714.1, KI270317.1, KI270303.1, KI270373.1, KI270753.1, KI270587.1, KI270385.1, KI270425.1, KI270340.1, KI270391.1, KI270590.1, KI270522.1, KI270419.1, KI270730.1, KI270742.1, KI270302.1, KI270740.1, KI270757.1, KI270584.1, KI270723.1, KI270392.1, KI270538.1, KI270732.1, KI270544.1, KI270722.1, KI270736.1, KI270737.1, KI270707.1, KI270528.1, KI270396.1, KI270379.1, KI270374.1, KI270752.1, KI270729.1, KI270335.1, KI270508.1, KI270512.1, KI270371.1, KI270366.1, KI270589.1, KI270382.1, KI270418.1, KI270519.1, KI270510.1, KI270412.1, KI270724.1, KI270310.1, KI270738.1, KI270389.1, KI270745.1, KI270394.1, KI270336.1, GL000221.1, KI270468.1, KI270465.1, KI270579.1, KI270372.1, KI270378.1, KI270725.1, KI270741.1, GL000208.1, GL000224.1, KI270717.1, KI270466.1, KI270376.1, KI270743.1, KI270420.1, KI270715.1, KI270386.1, KI270509.1, KI270329.1, KI270593.1, KI270384.1, KI270712.1, KI270530.1, KI270429.1, KI270581.1, KI270718.1, KI270516.1, KI270582.1, KI270393.1, KI270387.1, GL000226.1, KI270739.1, KI270315.1, KI270710.1, KI270333.1, KI270438.1, KI270337.1, KI270467.1, KI270588.1, KI270334.1, KI270517.1, KI270719.1, KI270448.1, KI270417.1, KI270754.1, KI270720.1, KI270521.1, KI270381.1, KI270422.1, KI270756.1, KI270716.1, KI270515.1, KI270518.1, KI270375.1, KI270320.1, KI270330.1, KI270539.1, KI270529.1, KI270511.1, KI270388.1, KI270748.1, KI270747.1, KI270383.1, KI270706.1, KI270338.1, KI270423.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 19 : 31 : 39 , 720 ] INFO Wrote 227368 cDNA transcripts [ 2020 - 01 - 16 19 : 31 : 39 , 725 ] INFO Concatenating 2 transcript - to - gene mappings to mixed_t2g . txt [ 2020 - 01 - 16 19 : 31 : 40 , 026 ] INFO Concatenating 2 cDNAs to mixed_cdna . fa [ 2020 - 01 - 16 19 : 31 : 41 , 876 ] INFO Splitting mixed_cdna . fa into 4 parts [ 2020 - 01 - 16 19 : 31 : 46 , 079 ] INFO Indexing / content / tmp / tmp5sr_pily to mixed_index . idx . 0 [ 2020 - 01 - 16 19 : 38 : 23 , 368 ] INFO Indexing / content / tmp / tmpgxjc_cx6 to mixed_index . idx . 1 [ 2020 - 01 - 16 19 : 44 : 32 , 316 ] INFO Indexing / content / tmp / tmpj4tfo0m8 to mixed_index . idx . 2 [ 2020 - 01 - 16 19 : 51 : 03 , 185 ] INFO Indexing / content / tmp / tmp8wqyvg2b to mixed_index . idx . 3 CPU times : user 13 . 5 s , sys : 2 . 6 s , total : 16 . 1 s Wall time : 48 min 39 s","title":"Build the mixed species index"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#generate-an-rna-count-matrix-in-h5ad-format","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. 1 2 3 4 5 6 7 %%time !kb count -i mixed_index.idx.0,mixed_index.idx.1,mixed_index.idx.2,mixed_index.idx.3 \\ -g mixed_t2g.txt -x 10xv3 -o output --h5ad -t 2 \\ 1k_hgmm_v3_S1_L001_R1_001.fastq.gz 1k_hgmm_v3_S1_L001_R2_001.fastq.gz \\ 1k_hgmm_v3_S1_L002_R1_001.fastq.gz 1k_hgmm_v3_S1_L002_R2_001.fastq.gz \\ 1k_hgmm_v3_S1_L003_R1_001.fastq.gz 1k_hgmm_v3_S1_L003_R2_001.fastq.gz \\ 1k_hgmm_v3_S1_L004_R1_001.fastq.gz 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO Generating BUS file using 4 indices [2020-01-16 19:57:50,686] INFO Generating BUS file to output/tmp/bus_part0 from [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 19:57:50,686] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 19:57:50,686] INFO Using index mixed_index.idx.0 [2020-01-16 20:14:53,228] INFO Generating BUS file to output/tmp/bus_part1 from [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 20:14:53,228] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 20:14:53,228] INFO Using index mixed_index.idx.1 [2020-01-16 20:30:59,826] INFO Generating BUS file to output/tmp/bus_part2 from [2020-01-16 20:30:59,826] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 20:30:59,827] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 20:30:59,827] INFO Using index mixed_index.idx.2 [2020-01-16 20:53:38,011] INFO Generating BUS file to output/tmp/bus_part3 from [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L001_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L001_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L002_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L002_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L003_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L003_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L004_R1_001.fastq.gz [2020-01-16 20:53:38,012] INFO 1k_hgmm_v3_S1_L004_R2_001.fastq.gz [2020-01-16 20:53:38,012] INFO Using index mixed_index.idx.3 [2020-01-16 21:15:37,278] INFO Merging BUS records to output from [2020-01-16 21:15:37,278] INFO output/tmp/bus_part0 [2020-01-16 21:15:37,278] INFO output/tmp/bus_part1 [2020-01-16 21:15:37,278] INFO output/tmp/bus_part2 [2020-01-16 21:15:37,278] INFO output/tmp/bus_part3 [2020-01-16 21:17:58,873] INFO Sorting BUS file output/output.bus to output/tmp/output.s.bus [2020-01-16 21:19:58,502] INFO Whitelist not provided [2020-01-16 21:19:58,502] INFO Copying pre-packaged 10XV3 whitelist to output [2020-01-16 21:19:59,491] INFO Inspecting BUS file output/tmp/output.s.bus [2020-01-16 21:20:52,633] INFO Correcting BUS records in output/tmp/output.s.bus to output/tmp/output.s.c.bus with whitelist output/10xv3_whitelist.txt [2020-01-16 21:22:16,890] INFO Sorting BUS file output/tmp/output.s.c.bus to output/output.unfiltered.bus [2020-01-16 21:24:06,413] INFO Generating count matrix output/counts_unfiltered/cells_x_genes from BUS file output/output.unfiltered.bus [2020-01-16 21:24:42,940] INFO Reading matrix output/counts_unfiltered/cells_x_genes.mtx [2020-01-16 21:24:57,663] INFO Writing matrix to h5ad output/counts_unfiltered/adata.h5ad CPU times: user 28.2 s, sys: 3.99 s, total: 32.1 s Wall time: 1h 27min 16s","title":"Generate an RNA count matrix in H5AD format"},{"location":"tutorials/kb_species_mixing/python/kb_species_mixing.html#analysis","text":"See this notebook for how to process and load count matrices for a species mixing experiment. 1","title":"Analysis"},{"location":"tutorials/kb_velocity/python/kb_velocity.html","text":"Pre-processing and RNA velocity analysis of single-cell RNA-seq data with kallisto|bustools. \u00b6 In this notebook, we will perform pre-processing and RNA velocity analysis of human week 10 fetal forebrain dataset ( SRR6470906 and SRR6470907 ) from La Manno et al., 2018 using the kallisto | bustools workflow, implemented with a wrapper called kb . It was developed by Kyung Hoi (Joseph) Min and A. Sina Booeshaghi. Note: The human RNA velocity index used in this tutorial requires at least 16GB of RAM, which means you need to be on a GPU runtime on Google Colab. To change your runtime to a GPU instance, go to Runtime > Change runtime type > select GPU from the Hardware accelerator dropdown. Downloading and processing the data takes a while (> 2 hours). If you would like to use checkpoint files, which reduce this to ~30 minutes, follow these steps: 1. Skip the Download the data step. 2. Follow through the pre-processing steps. Stop before Generate RNA velocity count matrices . 3. Uncomment the commented commands in the cells that run kb count . 4. Continue through the tutorial. 1 !date Thu Dec 12 20:34:50 UTC 2019 Pre-processing \u00b6 Download the data \u00b6 Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 7 8 9 10 11 12 %%time !wget https://caltech.box.com/shared/static/8w79k2ydhqigkb4cfhosc6k32zycizdq.txt -O checksums.txt # SRR6470907 !wget https://caltech.box.com/shared/static/nvzqphhklk1yx938l6omursw7sr68y43.gz -O SRR6470906_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/63fh2xa5t82x7s74rqa0e2u2ur59y5ox.gz -O SRR6470906_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/zqi3durukillaw1pbns1kd1lowyfg5qk.gz -O SRR6470906_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/i56qojfz41ns1kw9z86sla0vawsch96t.gz -O SRR6470906_S1_L002_R2_001.fastq.gz # SRR6470907 !wget https://caltech.box.com/shared/static/vrditbbk38tw3f61fwpg504vcc5x09ci.gz -O SRR6470907_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/8ud3otwztjeqlmjctbu1fw7hg3k56ejr.gz -O SRR6470907_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/ln14jjd4tz3hvgxf8zj2kmokof7f1nrf.gz -O SRR6470907_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/o5bwf9u2g7egi02by3e3hbvov8fgwbb3.gz -O SRR6470907_S1_L002_R2_001.fastq.gz -- 2019 - 12 - 12 16 : 45 : 17 -- https : // caltech . box . com / shared / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt [ following ] -- 2019 - 12 - 12 16 : 45 : 17 -- https : // caltech . box . com / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt [ following ] -- 2019 - 12 - 12 16 : 45 : 18 -- https : // caltech . app . box . com / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! HROZcLQR4SR8wMrrjExg1KUpkObpwaMUNr5KN5DXu3Zn3FrctuyWJpB8m11X3wFIGVNxY8WZqjNGudP - Nw - ajzZIz - 1 kTO7dtxXAzVUs_8gVstlxRn0dh7tofcn9SEpe0L9Bjohw_8kCgdAEJCWUmqOqODDDO0MJ48xbHi8Xs8a_R6WfralHUXnJvZaj1JAOEuvr1U8Vtsl2y2AzzKIuUspRnN0vK1_lro9z34Ydrjhp7_6O71TKRtbNnREVwJUrj6P3PQ7IQBUmOr9t49TI9I8wLHpTGajKNDc5bweuFCjggl_gfDfTqGjeVk8YtGM3j8sl8qzblSahy8lWAhOLwCiGgwcsw1W - cPKMZssb2Ij5Bq5WCagQM_K5xRhWLPYd_ - rn90p6kVHAX323pRRFcYyotJPAZ8UXNmmQYa6_CMOhcH5agYtE4jEb6vKNQUUezYHEGkv8ghoM9LFjd6Wzc30c66blugFTD0hpVQcPQdLiA4gquc_BrpKLsfQ8B6MPfndlhEIE2uZpXHtE2HIEsiBpLWbUTOXV2vK6xtUVsVFPeq9xQyGGe3_5TFarqqNzGIwO68uGfZ8RneCScuQVbnDym7zzZTCja7jcrHVP5Lj3gOcG2SeK8l4srpLZsfyBBIPrZkHaZ4Zmlan9PK7YEFVssJU5Ul - _k8whB67050b1 - dS6aLZ2v9_rnH1h2sk_ymTKI_8a - PKAvECCvNy8AxABvk6UD4A_FEWjLYhonYYogAc73_2EvNT8gq9dSKIr3n5q2kj2vizM0frtoEHHSa1e89pLYsyGWOp5oeX9gGXMW9o0iyiqXVdSgEOrYL - PX4rETSJs4UCpupzHGanKhkIvBwmzyEPblYc3jykdp5z8wDP72Z0cCRTh7KPeo8yRe7D2Qpz_KUgPxh2uHqUdQ2F7HLfN1PIVoO9BK7bPYx7BKEmqahEy2ji7jGl1CBjFrg6SBQQmqr5mxiouiiCSLTecUT - w2s9XxDj1arBeGA0xX0T6gZn9zueU8HaYa8IV_l6PFjNZVe7Cd6kr9DRG4zRJ_n4K2tqNQouUvTCAvEc461DX39godP_dEP1XjS535ZYi8UmnFMAhsqDFXEJ9Ib9QEs1aoew7pDPhPRqwgPKnMm5TkNrzHXMt2Ng0HsoLcixfLWXG_oxzfDrZ - C9WlmN47Z0IoNrt9Wmd0iYDo_AU4KTfV_LXG7vdULCXMMpE9hulQBNNrmJCR5bC00RXm62Sw - D_oe1PcTfpWehBmlHMj6AWfo36pfHyeI43Dcxlu3Ryvc8JLCM5DpDla0DzjZMgVnr_sBUMvT7_QYXh1SNUyt - PDeKEqiXYV8pc6meDDWXSGTHEdxpkFvOqYV82A3C6BYcU1RO2aJY4rpxQO - y6 / download [ following ] -- 2019 - 12 - 12 16 : 45 : 19 -- https : // public . boxcloud . com / d / 1 / b1 ! HROZcLQR4SR8wMrrjExg1KUpkObpwaMUNr5KN5DXu3Zn3FrctuyWJpB8m11X3wFIGVNxY8WZqjNGudP - Nw - ajzZIz - 1 kTO7dtxXAzVUs_8gVstlxRn0dh7tofcn9SEpe0L9Bjohw_8kCgdAEJCWUmqOqODDDO0MJ48xbHi8Xs8a_R6WfralHUXnJvZaj1JAOEuvr1U8Vtsl2y2AzzKIuUspRnN0vK1_lro9z34Ydrjhp7_6O71TKRtbNnREVwJUrj6P3PQ7IQBUmOr9t49TI9I8wLHpTGajKNDc5bweuFCjggl_gfDfTqGjeVk8YtGM3j8sl8qzblSahy8lWAhOLwCiGgwcsw1W - cPKMZssb2Ij5Bq5WCagQM_K5xRhWLPYd_ - rn90p6kVHAX323pRRFcYyotJPAZ8UXNmmQYa6_CMOhcH5agYtE4jEb6vKNQUUezYHEGkv8ghoM9LFjd6Wzc30c66blugFTD0hpVQcPQdLiA4gquc_BrpKLsfQ8B6MPfndlhEIE2uZpXHtE2HIEsiBpLWbUTOXV2vK6xtUVsVFPeq9xQyGGe3_5TFarqqNzGIwO68uGfZ8RneCScuQVbnDym7zzZTCja7jcrHVP5Lj3gOcG2SeK8l4srpLZsfyBBIPrZkHaZ4Zmlan9PK7YEFVssJU5Ul - _k8whB67050b1 - dS6aLZ2v9_rnH1h2sk_ymTKI_8a - PKAvECCvNy8AxABvk6UD4A_FEWjLYhonYYogAc73_2EvNT8gq9dSKIr3n5q2kj2vizM0frtoEHHSa1e89pLYsyGWOp5oeX9gGXMW9o0iyiqXVdSgEOrYL - PX4rETSJs4UCpupzHGanKhkIvBwmzyEPblYc3jykdp5z8wDP72Z0cCRTh7KPeo8yRe7D2Qpz_KUgPxh2uHqUdQ2F7HLfN1PIVoO9BK7bPYx7BKEmqahEy2ji7jGl1CBjFrg6SBQQmqr5mxiouiiCSLTecUT - w2s9XxDj1arBeGA0xX0T6gZn9zueU8HaYa8IV_l6PFjNZVe7Cd6kr9DRG4zRJ_n4K2tqNQouUvTCAvEc461DX39godP_dEP1XjS535ZYi8UmnFMAhsqDFXEJ9Ib9QEs1aoew7pDPhPRqwgPKnMm5TkNrzHXMt2Ng0HsoLcixfLWXG_oxzfDrZ - C9WlmN47Z0IoNrt9Wmd0iYDo_AU4KTfV_LXG7vdULCXMMpE9hulQBNNrmJCR5bC00RXm62Sw - D_oe1PcTfpWehBmlHMj6AWfo36pfHyeI43Dcxlu3Ryvc8JLCM5DpDla0DzjZMgVnr_sBUMvT7_QYXh1SNUyt - PDeKEqiXYV8pc6meDDWXSGTHEdxpkFvOqYV82A3C6BYcU1RO2aJY4rpxQO - y6 / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 552 [ text/plain ] Saving to : \u2018 checksums . txt \u2019 checksums . txt 100 %[ ===================> ] 552 -- . - KB / s in 0 s 2019 - 12 - 12 16 : 45 : 19 ( 146 MB / s ) - \u2018 checksums . txt \u2019 saved [ 552/552 ] -- 2019 - 12 - 12 16 : 45 : 21 -- https : // caltech . box . com / shared / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz [ following ] -- 2019 - 12 - 12 16 : 45 : 21 -- https : // caltech . box . com / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz [ following ] -- 2019 - 12 - 12 16 : 45 : 21 -- https : // caltech . app . box . com / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! jD0baoEwhAs7CayO95UyhSNszeFfA_EqNIM7jM - ZixrgAG6UaRFMLlmYPaJ8YVAXdFfxrrHnQc0CJHNUY_6RT3QrlkhFFuq92WCeuhmH1Ltvb75ni - GO - K2Ltbni0HMOij3IAWXLEz4IqZLNeMjY1Ln2JyW8cLN_63RoCKDAkqv8okgYR_sB92M6_v2_Cuj3UvfzH4u8H6DKzeFch8_SfF7gubKOAFFmgzG1X4z6tXQBAgf6ezIfkS - K20C3Uw5PK - wxFvUVLIHi_xm9W4FaubPBkxbVlBUqB0WFhMLOlKty3KcLKptS67fy8xMpYQGVmhAUCUzkmOK33rKOBSdePbM9XeicLsreHA1xq41eYCmE_S_3 - 7 YOMFMoS - 3 wjEjsatR - yL_wlHR7Xop2I4Qr9 - 1 JEpBye_C8TtUjLeC7OPzvxvnZJ4r4nWtY1qH9dTJODRf2B9twvXLoE8HE - MR3noULJvEArKEn5d2dIDk1wSpNnHPkKhOhNTp1RP8fjTQXBtUs8vbymUAhDX2lhq0pR4mjbR9Rwphvvom0hpeeuBFEI1R - Wn4M7GnAzdf0cqNwTf2OwuMIq5spmd2DAVRe7QHSSiHEkpd4BDlXg2JTuKIhX4l4c1naAM_3g1zD9EdBWN3pdHamjn3G5Gtk3KuIoMKuOy_fnvIo - nKnrO3DE4J0bgim - GdTQHRbsxBGu2MRU9AVVfgw_yaf2c6Hd_NkAd0GFFJgyEelWVfLYu214F0njqpRY6n3hqDRC_XRSRPbEH7 - Xv0hEBYZzZqH31DKc3jb2sTPsG - jaF4Sv7WR8qOtjD2Xk6uv - 1 MWXefO - pw9GsLmgNGhWX85gmEbAHIxqKA_oJq9pSi3bFNbpWrimvxFGIEcr42b6Utg1oUP35pL5_T8_04SkIhxDihD9gxe6EoYmhpM2kzbcUyViEnG_RUBIFCj7kDaQb71ODQFYPxTXMyb3c_PipXe_GGm_JtZCp_xJeOOZZAs4QGbRXNaznpTzzyA3r66sSycCpbl18rkQQybOoHo8XNhkdzCt - cB3Dw_dkN_YJQ8_BkUIiiij3yETRPEO - NTvHNX_pqWWMRgxNb__RGzoMiANsGyqFlFZmQZnS03gEx6zwa7LhPsTxI6797c1ichD8uXRIw0lOR9HlolEEkVJFHEL14lEWMcBWzrfLnLIa - fL2Gyun2kj0C2J8uk2m_bXr0_D5jsiCrjxaiG5_DojxujNx75YVTjUeypD - xp0UATFQqc6VNjzckSGxZsA178jaS8 - g6OZXglcWCl9EzS3AMxN6f39CbVsdHgKGgTUHSozqJLwyBCKLJfcznPEtxwVsUcn4KvdOtK6sJcmC4ibWF0S2O3gRVMXo9dUeLqFBzUtQMjcNH_EeSfxEGFiuR30C1ZM70v9T6GUD1N0PHhug__2F - DsN57m2ozwjTihQ .. / download [ following ] -- 2019 - 12 - 12 16 : 45 : 22 -- https : // public . boxcloud . com / d / 1 / b1 ! jD0baoEwhAs7CayO95UyhSNszeFfA_EqNIM7jM - ZixrgAG6UaRFMLlmYPaJ8YVAXdFfxrrHnQc0CJHNUY_6RT3QrlkhFFuq92WCeuhmH1Ltvb75ni - GO - K2Ltbni0HMOij3IAWXLEz4IqZLNeMjY1Ln2JyW8cLN_63RoCKDAkqv8okgYR_sB92M6_v2_Cuj3UvfzH4u8H6DKzeFch8_SfF7gubKOAFFmgzG1X4z6tXQBAgf6ezIfkS - K20C3Uw5PK - wxFvUVLIHi_xm9W4FaubPBkxbVlBUqB0WFhMLOlKty3KcLKptS67fy8xMpYQGVmhAUCUzkmOK33rKOBSdePbM9XeicLsreHA1xq41eYCmE_S_3 - 7 YOMFMoS - 3 wjEjsatR - yL_wlHR7Xop2I4Qr9 - 1 JEpBye_C8TtUjLeC7OPzvxvnZJ4r4nWtY1qH9dTJODRf2B9twvXLoE8HE - MR3noULJvEArKEn5d2dIDk1wSpNnHPkKhOhNTp1RP8fjTQXBtUs8vbymUAhDX2lhq0pR4mjbR9Rwphvvom0hpeeuBFEI1R - Wn4M7GnAzdf0cqNwTf2OwuMIq5spmd2DAVRe7QHSSiHEkpd4BDlXg2JTuKIhX4l4c1naAM_3g1zD9EdBWN3pdHamjn3G5Gtk3KuIoMKuOy_fnvIo - nKnrO3DE4J0bgim - GdTQHRbsxBGu2MRU9AVVfgw_yaf2c6Hd_NkAd0GFFJgyEelWVfLYu214F0njqpRY6n3hqDRC_XRSRPbEH7 - Xv0hEBYZzZqH31DKc3jb2sTPsG - jaF4Sv7WR8qOtjD2Xk6uv - 1 MWXefO - pw9GsLmgNGhWX85gmEbAHIxqKA_oJq9pSi3bFNbpWrimvxFGIEcr42b6Utg1oUP35pL5_T8_04SkIhxDihD9gxe6EoYmhpM2kzbcUyViEnG_RUBIFCj7kDaQb71ODQFYPxTXMyb3c_PipXe_GGm_JtZCp_xJeOOZZAs4QGbRXNaznpTzzyA3r66sSycCpbl18rkQQybOoHo8XNhkdzCt - cB3Dw_dkN_YJQ8_BkUIiiij3yETRPEO - NTvHNX_pqWWMRgxNb__RGzoMiANsGyqFlFZmQZnS03gEx6zwa7LhPsTxI6797c1ichD8uXRIw0lOR9HlolEEkVJFHEL14lEWMcBWzrfLnLIa - fL2Gyun2kj0C2J8uk2m_bXr0_D5jsiCrjxaiG5_DojxujNx75YVTjUeypD - xp0UATFQqc6VNjzckSGxZsA178jaS8 - g6OZXglcWCl9EzS3AMxN6f39CbVsdHgKGgTUHSozqJLwyBCKLJfcznPEtxwVsUcn4KvdOtK6sJcmC4ibWF0S2O3gRVMXo9dUeLqFBzUtQMjcNH_EeSfxEGFiuR30C1ZM70v9T6GUD1N0PHhug__2F - DsN57m2ozwjTihQ .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 4547896018 ( 4.2 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L001_R1_001 . fastq . gz \u2019 SRR6470906_S1_L001_ 100 %[ ===================> ] 4.24 G 15.9 MB / s in 4 m 38 s 2019 - 12 - 12 16 : 50 : 01 ( 15.6 MB / s ) - \u2018 SRR6470906_S1_L001_R1_001 . fastq . gz \u2019 saved [ 4547896018/4547896018 ] -- 2019 - 12 - 12 16 : 50 : 03 -- https : // caltech . box . com / shared / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz [ following ] -- 2019 - 12 - 12 16 : 50 : 03 -- https : // caltech . box . com / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz [ following ] -- 2019 - 12 - 12 16 : 50 : 04 -- https : // caltech . app . box . com / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! IQRKpPtIYqhfyougjfYK79FUEIhKonLIzymhygPMsLCU9NejeJmaqCEIpnArmK_HhcOkAKi9KfMn8QjoRS1oz9JgPvc4dIP1jmr6XH6yHNoPtUOu - zH7QjxeAfr_aSbUESOQMljUQ - QwuQtkB - 2 ZuE24H58iNYURr0L1OAB6Wd_7DPeoqPQcuY9xlI4YESc8jmZZFcVKen7vSyx5p9vJY2SuzWrbt8JTiJ5By7APStib5HVw6vFbitaxU - ibdN4uowrGgfzDRSLmyIA6CwaePNehpPCHjfQfF0rieN19M3pxAUG8vEgsvG2VrMUCJ1aZMs1sTr9c6y9m1AOIDAUJheqfqLvfhbs5tsGskwVQvEbOn3cj8oTz2sxSOr01axHwofC7jepknJHS - quJVGFUgp0DfAYIbvTYQ5uQfC0iXxcn4bnPLkYBRHh29tPSPGN2unBDD2TAludj6xhXeeX47LNGa62JkuUru6DdlpLdZuJPpnt3VoowVE8OBpStlyt2p7rEdZUfPPAt9_AW16DZYScA7e3DR7daODJrN9n85lQTKT279M2XeeomRn7s84ZfqxUXshh9kHBx06NqmTM - IOlsFfN7epF27AwfQGAu1tAwCkNrVDhEKWZnllMCjUAMhamqDn_CkGdlrlSIT0gYeGFwttAywRbXbXv - FOlOx6sWhnUWSSxQy6FeG8dgsbfGyLeB0MAC - I2o_sj_2bLgD0gb3b9zatzPcuIm4CjvYPzEdYbI5m - AfGMfhRfTWJchurBxbadhrEG77NRjILyQsmcm4J7VlrUrf1nv8vUADLRbHYsclkbYKKuvLz6o34J9bspPNatCrum06h750_YyDsCEC2D27iap1k9r_aPkzAba1yDlWAu - oq6yPMN5ROtoCqnGTJD2Pl7xzrxFUjMaVF31lHqodRQXHem9VctLmeZthACgi8GNZJr5Jvil9zXtCTHX39xcJF0uBOvrC7O5 - 4 dDj5qB0jSl0DsAWPLhHG1v0s1YdzuySAvt - DSyfrqeuRD9S9V1eUxiC_wiP2IUNGJIi3Ve3aiHA4t8D4iC4eSzkkwKSAEtL60I6KNg4lZdrFd - i2oVuvkfZC0IlV7zVaCP3cgIu851WRyDx7gYy4CXcOdjvfgbHmKXoHNroLF1dIbV5Edht3MN5cfRO7T8TVBPv15Fq4TPxBnJa5zEtIF_UoyqczbQvFQH0sTbDyAHeW - N0Y5 - LkA - jAdO0oE - B3vaPq7KIZK - 6 w09pFXiQ_5Sq - 9 WUy_yGEfOGCDoRwybfzbtWniQcVTpoQatU1GGlyk2EOmPF8iU6WDdDIPL5WpOdba8w - 48 w6_L2D - SSNYFFmLkN6LhvZ12_1Dt__azAM85EBahsFiVUIWSrn7OIPwWBiuLXc_XqEB0e6IbF7FZM57YeArhrukqmuK_yk5u2vKC8S9ofQ .. / download [ following ] -- 2019 - 12 - 12 16 : 50 : 04 -- https : // public . boxcloud . com / d / 1 / b1 ! IQRKpPtIYqhfyougjfYK79FUEIhKonLIzymhygPMsLCU9NejeJmaqCEIpnArmK_HhcOkAKi9KfMn8QjoRS1oz9JgPvc4dIP1jmr6XH6yHNoPtUOu - zH7QjxeAfr_aSbUESOQMljUQ - QwuQtkB - 2 ZuE24H58iNYURr0L1OAB6Wd_7DPeoqPQcuY9xlI4YESc8jmZZFcVKen7vSyx5p9vJY2SuzWrbt8JTiJ5By7APStib5HVw6vFbitaxU - ibdN4uowrGgfzDRSLmyIA6CwaePNehpPCHjfQfF0rieN19M3pxAUG8vEgsvG2VrMUCJ1aZMs1sTr9c6y9m1AOIDAUJheqfqLvfhbs5tsGskwVQvEbOn3cj8oTz2sxSOr01axHwofC7jepknJHS - quJVGFUgp0DfAYIbvTYQ5uQfC0iXxcn4bnPLkYBRHh29tPSPGN2unBDD2TAludj6xhXeeX47LNGa62JkuUru6DdlpLdZuJPpnt3VoowVE8OBpStlyt2p7rEdZUfPPAt9_AW16DZYScA7e3DR7daODJrN9n85lQTKT279M2XeeomRn7s84ZfqxUXshh9kHBx06NqmTM - IOlsFfN7epF27AwfQGAu1tAwCkNrVDhEKWZnllMCjUAMhamqDn_CkGdlrlSIT0gYeGFwttAywRbXbXv - FOlOx6sWhnUWSSxQy6FeG8dgsbfGyLeB0MAC - I2o_sj_2bLgD0gb3b9zatzPcuIm4CjvYPzEdYbI5m - AfGMfhRfTWJchurBxbadhrEG77NRjILyQsmcm4J7VlrUrf1nv8vUADLRbHYsclkbYKKuvLz6o34J9bspPNatCrum06h750_YyDsCEC2D27iap1k9r_aPkzAba1yDlWAu - oq6yPMN5ROtoCqnGTJD2Pl7xzrxFUjMaVF31lHqodRQXHem9VctLmeZthACgi8GNZJr5Jvil9zXtCTHX39xcJF0uBOvrC7O5 - 4 dDj5qB0jSl0DsAWPLhHG1v0s1YdzuySAvt - DSyfrqeuRD9S9V1eUxiC_wiP2IUNGJIi3Ve3aiHA4t8D4iC4eSzkkwKSAEtL60I6KNg4lZdrFd - i2oVuvkfZC0IlV7zVaCP3cgIu851WRyDx7gYy4CXcOdjvfgbHmKXoHNroLF1dIbV5Edht3MN5cfRO7T8TVBPv15Fq4TPxBnJa5zEtIF_UoyqczbQvFQH0sTbDyAHeW - N0Y5 - LkA - jAdO0oE - B3vaPq7KIZK - 6 w09pFXiQ_5Sq - 9 WUy_yGEfOGCDoRwybfzbtWniQcVTpoQatU1GGlyk2EOmPF8iU6WDdDIPL5WpOdba8w - 48 w6_L2D - SSNYFFmLkN6LhvZ12_1Dt__azAM85EBahsFiVUIWSrn7OIPwWBiuLXc_XqEB0e6IbF7FZM57YeArhrukqmuK_yk5u2vKC8S9ofQ .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 8051434084 ( 7.5 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L001_R2_001 . fastq . gz \u2019 SRR6470906_S1_L001_ 100 %[ ===================> ] 7.50 G 13.8 MB / s in 9 m 14 s 2019 - 12 - 12 16 : 59 : 19 ( 13.9 MB / s ) - \u2018 SRR6470906_S1_L001_R2_001 . fastq . gz \u2019 saved [ 8051434084/8051434084 ] -- 2019 - 12 - 12 16 : 59 : 21 -- https : // caltech . box . com / shared / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz [ following ] -- 2019 - 12 - 12 16 : 59 : 22 -- https : // caltech . box . com / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz [ following ] -- 2019 - 12 - 12 16 : 59 : 22 -- https : // caltech . app . box . com / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! GOJlDv0dHx7IF1T0A37vi_RMeDchTdIRIbmHryH43jHU4uSYmqsYBNq2UVYgHo4nHavUlf9BczDrOJo9v7aZ2ApTifBKTx0xE9QVSAf2jAhqtbFGufK9QhmNpu1yVhsEZdF1WqrxgI_FkGwLqQ3Bx8ZuFH2o4DAQc4MLS0HnUhHDiCGUoV6Z8C - kAb0f_2YEcQgSfjaVsBNTXBzrwnEYPjzqDs0eesG3fQN_99O - tTt6MKRSWZHkmHiCSEA8nToRCPoF3c72gmxAduzKpZvudzj_avmyH5EwdYjOOy63k61fr3eJVQdDivNaTm88_9NKbzj2 - HvlX9MV2a7FmFFAmkKtvZtoc - JdzIXXGb241Vs5ewwhOIQX3pikJxvHC_Wo1SUsWHyf0m35348Z0ef3VS_9rHDVGvTdtG - waRcSOfAqpWmxaRKs_Qg7IYVYEvAfJP3C6hFT3QglnrTSkXc2FHwy4uDq76RonZNi033xdhlPIbFUTXpEieUVUYjpS6YiwfxvSX1K9C3L5J71C02Vtt_3M3It4uTeKdzxzpsUhKdIMyAKRhE1ZLiLbEStihDg33gGEzz65ZP6tWUQPwUYomj2N9HL_wZ8 - 9 bD7CxDVlA8sQ6yc0HCO2P9UUTfaJuY_q9lFo2Iz - e4MxOLBT9SnRirzGAqmxi0lq4xArN5euZ4ltr - yA - VXiR3 - ai3hdxXl23sYz - 5 bz6k5629zb87fCDwb4MMIuMV0pw00_N7RvS6G9t6knEAZAiJZshI5p21Z0nogmPQcj9LodjnhGZXkpaUS_J0eP3LxK8UeUs55y9H07rYXdQlBZL27XBNP2vRhCChImZsoEzQAw5Yqq4vpR064mSj00Luulo - tF62ihTToc4icGQmqNPfagFkOxkq6YvjudgQybkL7dI - l7nXzcQ2rld_jU6svLY5e3v - kB_oRMIxdPwCd3lwNr6D7I0M21jTngGVFhkQb132dsjb9zSge50uekCYSOKb77Rw1JztzQxurG3LH - t85dnfA - 26 xeHV - EL7Oi3350GwNlqV74yGN540ZeLKYaFCdieR_tpoJFz0NyxFsaAQE2I2BMoyeVqKIiEP4_eCn0U2ihA7WG01bfXMCYHhtLw4DAoOtCJzUfweCQw9m2VZLaiMXtY9ymTFVthvahyBWVH4njLCNVKwLZEk52aqdsXsv7yU2KpaE4Mg7MtEJPDatPjxIHoZLXEuNSSRMygmrC0GTsSAvKfk1zJVZYh_tHsHk_yBaXi6TIZDj9b4CcQSwiF3j6kS7 -- 6 WDivkAFx_Sut55iOQoEWoJAvrChKSOtp2F3d0_YBbKlc9M_5Y1L4Yg9tGRVtTop6cCyysoNbJB5EKVKX9MtcxJdfl9aA_14uz_ - 59 i22FiOYpHTFAUw4iYWNmpk5sWu6Uu_HoKag498Y5xaMvmG5fm9n - g .. / download [ following ] -- 2019 - 12 - 12 16 : 59 : 23 -- https : // public . boxcloud . com / d / 1 / b1 ! GOJlDv0dHx7IF1T0A37vi_RMeDchTdIRIbmHryH43jHU4uSYmqsYBNq2UVYgHo4nHavUlf9BczDrOJo9v7aZ2ApTifBKTx0xE9QVSAf2jAhqtbFGufK9QhmNpu1yVhsEZdF1WqrxgI_FkGwLqQ3Bx8ZuFH2o4DAQc4MLS0HnUhHDiCGUoV6Z8C - kAb0f_2YEcQgSfjaVsBNTXBzrwnEYPjzqDs0eesG3fQN_99O - tTt6MKRSWZHkmHiCSEA8nToRCPoF3c72gmxAduzKpZvudzj_avmyH5EwdYjOOy63k61fr3eJVQdDivNaTm88_9NKbzj2 - HvlX9MV2a7FmFFAmkKtvZtoc - JdzIXXGb241Vs5ewwhOIQX3pikJxvHC_Wo1SUsWHyf0m35348Z0ef3VS_9rHDVGvTdtG - waRcSOfAqpWmxaRKs_Qg7IYVYEvAfJP3C6hFT3QglnrTSkXc2FHwy4uDq76RonZNi033xdhlPIbFUTXpEieUVUYjpS6YiwfxvSX1K9C3L5J71C02Vtt_3M3It4uTeKdzxzpsUhKdIMyAKRhE1ZLiLbEStihDg33gGEzz65ZP6tWUQPwUYomj2N9HL_wZ8 - 9 bD7CxDVlA8sQ6yc0HCO2P9UUTfaJuY_q9lFo2Iz - e4MxOLBT9SnRirzGAqmxi0lq4xArN5euZ4ltr - yA - VXiR3 - ai3hdxXl23sYz - 5 bz6k5629zb87fCDwb4MMIuMV0pw00_N7RvS6G9t6knEAZAiJZshI5p21Z0nogmPQcj9LodjnhGZXkpaUS_J0eP3LxK8UeUs55y9H07rYXdQlBZL27XBNP2vRhCChImZsoEzQAw5Yqq4vpR064mSj00Luulo - tF62ihTToc4icGQmqNPfagFkOxkq6YvjudgQybkL7dI - l7nXzcQ2rld_jU6svLY5e3v - kB_oRMIxdPwCd3lwNr6D7I0M21jTngGVFhkQb132dsjb9zSge50uekCYSOKb77Rw1JztzQxurG3LH - t85dnfA - 26 xeHV - EL7Oi3350GwNlqV74yGN540ZeLKYaFCdieR_tpoJFz0NyxFsaAQE2I2BMoyeVqKIiEP4_eCn0U2ihA7WG01bfXMCYHhtLw4DAoOtCJzUfweCQw9m2VZLaiMXtY9ymTFVthvahyBWVH4njLCNVKwLZEk52aqdsXsv7yU2KpaE4Mg7MtEJPDatPjxIHoZLXEuNSSRMygmrC0GTsSAvKfk1zJVZYh_tHsHk_yBaXi6TIZDj9b4CcQSwiF3j6kS7 -- 6 WDivkAFx_Sut55iOQoEWoJAvrChKSOtp2F3d0_YBbKlc9M_5Y1L4Yg9tGRVtTop6cCyysoNbJB5EKVKX9MtcxJdfl9aA_14uz_ - 59 i22FiOYpHTFAUw4iYWNmpk5sWu6Uu_HoKag498Y5xaMvmG5fm9n - g .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 3473816553 ( 3.2 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L002_R1_001 . fastq . gz \u2019 SRR6470906_S1_L002_ 100 %[ ===================> ] 3.23 G 14.8 MB / s in 3 m 50 s 2019 - 12 - 12 17 : 03 : 13 ( 14.4 MB / s ) - \u2018 SRR6470906_S1_L002_R1_001 . fastq . gz \u2019 saved [ 3473816553/3473816553 ] -- 2019 - 12 - 12 17 : 03 : 16 -- https : // caltech . box . com / shared / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz [ following ] -- 2019 - 12 - 12 17 : 03 : 17 -- https : // caltech . box . com / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz [ following ] -- 2019 - 12 - 12 17 : 03 : 17 -- https : // caltech . app . box . com / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! R6y7a5bIJuqYMSWPoHnEy - l6dd72cFwhiG5GMUeOmCo3_B5BccUZA - SpS3dRR8Zekhj0VXOjdARtBlPqDNC8Y4ol4fYDVjJhh9XFkGLQ - 1 Jzjr3kSxEWbjPkbI_6gDfAmHJvxZifs5Dhuy7svYvomAgSezzR6cFIBwQounJ6mHB5S68EQy6Mh4xs_aTunCVHqDjaTn1GPZfoeDQ297sblMskuI2Aq3mdVCwkrg5suolP7FHHdz7YwoARSDx3mE3o1IdwntBZGueppadjfdydZR_icMVAywN3zE_AFCNKRAPEVqbEpEAe9uQrrO9VtmgC9hDEo6wzObx1yIpQ3YLerB6i8tVXubO9mWHj6D - ofNRaDNr0TCMkwBxtCD8smWDiDw3avJOKy1YcqOco5PgP0YnjYFuuPxQlNRD - jTuXZNmallPtZDteXuTv0kFCV2K0iWZwHgpyqZBmLoQk5OiFBjLOZ28pz0YenhK5k60bRxKksr6MD6PnTWNzpgIXGEfPrrtz0V2D7i_b - 4 xvNep23Ws0ExS6Yrb0gYDDNi8ewWvDgunmmvZxvW8UfqAKSFg4FNNu3_9wSgsutfidU - 2 Q5Qgd3Ozx9WU7czC8Cf_PJWlD6pJKnXVKGVrYulXQs2l6bYFOncJWYxGJiojwaL - rFDC45EupjnosxnacedbsdT1qmO3cY8hwYvceRzZ9_HZErKGPnELgPgUHijFcd2z7rvxmpztQePEocCwaucO3byUJ_zkjfeNWnsmHLn8s1oFF6gjA1 - cQKSOggR7hcqWwsFgtFdBbeOy9TAAnYpiMhtH2s_KnoRiA_aJDOJRT0huK3gB - YT - 4 U0EsBGLkYw6np7txv6OXT7TDti98EE4XvQGFeu9 - pSGFSvUirbt02uL0RJtQX77TEZH9 - _18bfH8YlatHgfuc1fqo - pDoOkccIBekbTTCz5LMT - zhBnb8_GgyVTJlBsxpeP46QgiaAqMyNCHC_sXzdYBPeaQQtVOOSp1TSdGIbcqKxzgn5ToELW6q623X5BgT1 - P - 0E2 Rqyn90o5EyCjtaiUOW6maWcr - jGiydXWMcypp4sE - 5 OyT8hWT4Ipu1UVVFi0U1QtAfKOZ_zQD5P1OY3RRTQdqVUGUksu42t4KPJneopa73QgMXTsSdXl2RnSG2yFuqbHxFQT3SwOrz1gPaq9JPGv0PFqMU - 7 QNThEwiWTo7UTNrR - FG - xEFPC8jbqNaSX7lkrstLXkFbGjy4sTHqgpn2RSVBfc340wKvMzRraWtoQSer990foD -- oyoCdm7bz8dWbKDCSN7_zmiu0CQShK6M4EWstjyfBZdN8F3BKojjcIba9EwBvclmH_u_MBb6TRbDfTnbCbljYi43vXzFwb_uPYLCdiVO6lbr3t6R1u_LEo5OuEAqWXAkTbqgEzBs27uhPS - IWvTruGP1FQ .. / download [ following ] -- 2019 - 12 - 12 17 : 03 : 18 -- https : // public . boxcloud . com / d / 1 / b1 ! R6y7a5bIJuqYMSWPoHnEy - l6dd72cFwhiG5GMUeOmCo3_B5BccUZA - SpS3dRR8Zekhj0VXOjdARtBlPqDNC8Y4ol4fYDVjJhh9XFkGLQ - 1 Jzjr3kSxEWbjPkbI_6gDfAmHJvxZifs5Dhuy7svYvomAgSezzR6cFIBwQounJ6mHB5S68EQy6Mh4xs_aTunCVHqDjaTn1GPZfoeDQ297sblMskuI2Aq3mdVCwkrg5suolP7FHHdz7YwoARSDx3mE3o1IdwntBZGueppadjfdydZR_icMVAywN3zE_AFCNKRAPEVqbEpEAe9uQrrO9VtmgC9hDEo6wzObx1yIpQ3YLerB6i8tVXubO9mWHj6D - ofNRaDNr0TCMkwBxtCD8smWDiDw3avJOKy1YcqOco5PgP0YnjYFuuPxQlNRD - jTuXZNmallPtZDteXuTv0kFCV2K0iWZwHgpyqZBmLoQk5OiFBjLOZ28pz0YenhK5k60bRxKksr6MD6PnTWNzpgIXGEfPrrtz0V2D7i_b - 4 xvNep23Ws0ExS6Yrb0gYDDNi8ewWvDgunmmvZxvW8UfqAKSFg4FNNu3_9wSgsutfidU - 2 Q5Qgd3Ozx9WU7czC8Cf_PJWlD6pJKnXVKGVrYulXQs2l6bYFOncJWYxGJiojwaL - rFDC45EupjnosxnacedbsdT1qmO3cY8hwYvceRzZ9_HZErKGPnELgPgUHijFcd2z7rvxmpztQePEocCwaucO3byUJ_zkjfeNWnsmHLn8s1oFF6gjA1 - cQKSOggR7hcqWwsFgtFdBbeOy9TAAnYpiMhtH2s_KnoRiA_aJDOJRT0huK3gB - YT - 4 U0EsBGLkYw6np7txv6OXT7TDti98EE4XvQGFeu9 - pSGFSvUirbt02uL0RJtQX77TEZH9 - _18bfH8YlatHgfuc1fqo - pDoOkccIBekbTTCz5LMT - zhBnb8_GgyVTJlBsxpeP46QgiaAqMyNCHC_sXzdYBPeaQQtVOOSp1TSdGIbcqKxzgn5ToELW6q623X5BgT1 - P - 0E2 Rqyn90o5EyCjtaiUOW6maWcr - jGiydXWMcypp4sE - 5 OyT8hWT4Ipu1UVVFi0U1QtAfKOZ_zQD5P1OY3RRTQdqVUGUksu42t4KPJneopa73QgMXTsSdXl2RnSG2yFuqbHxFQT3SwOrz1gPaq9JPGv0PFqMU - 7 QNThEwiWTo7UTNrR - FG - xEFPC8jbqNaSX7lkrstLXkFbGjy4sTHqgpn2RSVBfc340wKvMzRraWtoQSer990foD -- oyoCdm7bz8dWbKDCSN7_zmiu0CQShK6M4EWstjyfBZdN8F3BKojjcIba9EwBvclmH_u_MBb6TRbDfTnbCbljYi43vXzFwb_uPYLCdiVO6lbr3t6R1u_LEo5OuEAqWXAkTbqgEzBs27uhPS - IWvTruGP1FQ .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 6150590468 ( 5.7 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L002_R2_001 . fastq . gz \u2019 SRR6470906_S1_L002_ 100 %[ ===================> ] 5.73 G 16.0 MB / s in 6 m 17 s 2019 - 12 - 12 17 : 09 : 36 ( 15.6 MB / s ) - \u2018 SRR6470906_S1_L002_R2_001 . fastq . gz \u2019 saved [ 6150590468/6150590468 ] -- 2019 - 12 - 12 17 : 09 : 38 -- https : // caltech . box . com / shared / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz [ following ] -- 2019 - 12 - 12 17 : 09 : 38 -- https : // caltech . box . com / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz [ following ] -- 2019 - 12 - 12 17 : 09 : 39 -- https : // caltech . app . box . com / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! mEw7jD3SYx2JkfpPGUANWAkasmzfYG_4IsWs_1IIcIove2w1TUwrVVpSqlNM8xPs - NiiaFcTJOO191k11vZNt5UaleiAtPOJbdCvrwABOUgpE17vVBhKIsjOpp_DmmYeivZaVBJMh_GQGiVKzkhVwTkbzm5s - EZunbREKZsvTfjrzWTUv_xaHoT5deMNloKiCw -- jQoahlEPn4Ng3uOSpHTlGfjcx - LcwzZS9mxrkfsW7PJGpaTn3PiDw - u6PuI4RuN9BmviJz0fqJs2vLOdKuGHOUNnV3p3DgnHX - NxFtYxBXf2m_xC - iYN3hXPbQF1UvruvypWCzIKLMzkyJRGTlgMENXff9YtLB04B4bATBJw9xO8YLEA1UaQ - 2 DYdi4pRY5tSM_u_KwfYhTsBj0PzUOjSUe3plTIOPIeriZAB02SdU2mGMuQOQrzNy0FXgFYI3nMmUPdzTGYA4x5vt6dP99T9wwyRromJMLtfY - sjiK3j_WgUjxvP6Wpm7IM8vGzls5ZrJ85LktkQDyU7sOZLojFgjITbaPSNbJDtcaiI23iUNeJELerAM - opkV8CbgV4ohHWrgQIUyKm45mu0K8kbGjo6Ve40mgfDb1CdsX7zBWPEDfd9wwXLq3c3C1DUSuW0_9kvZSreQ6F - lNaGwLSD62Y4ruh7mRwZMHr90Y3nY0JnsXbaZMDXCpDLRuCMu_oTOR2LRY3fU2Ez6s0m4gtlgRFzsvwtqXAHCHO8Rj4kXq0HrpYljhxiF1c8q - PZqvEPcf5DmnT4zpEr9KG5gpqRlCwwfJWl1dJ - 3 U4SxvXATHQtwqM1LLLO2hDv8GmuQ05tERAlWHRrx0zOT9cmjSAs63b - 6 BfApttPjr55oxKp59ouozkWBbNllndr_qnML8faaoak3Yy4wq8NfWJeRIejfTEaNg_Gv5trktY99C4sPEcxHjeRcY6HWhR0Z1YhpIhcynayVMEAhgUGNRbtEhLF - hx6ZqJUKv8gBKmxmKwZoNjmoEJiOTDULD9tl3cp8Tlj9FjraA7Fl3BCVWo4o56fCCgqs8h9txsYaYbHcyLMtA9LdWwpgLf9EcOEObmSMsi9Dt - ORHTpkMa7jdiBOF1uuczrmK58fj_Mi46IdNjiLB3_595 - BK2ClzeWsu7Os - RznkS - BNc1gWFgB5T_1wsxOTpJ3X0RKG3LHRQHgd2yGpXqStAS_j7Z1ze0ooWMO1vFbwZdca05sq - DnIvNy6mtY4Jt4DKconl562MC5FEI4QKtW_FSZPFbWjC7Nioo9CTYJbRbPM6ADHvpjL4RrW2T0MumHF9V1TgF7wDLo79i9N - 3 BBxvWFruNTi - iMJ30zvvQ0k2Xd1wrbeSflfhS4mtZbvf6nOJZr5COaSsqcrT8BzViSwr09bocU54hRTB_5MFg0NilGApeu3eL20kBxNsf_zjehrVU . / download [ following ] -- 2019 - 12 - 12 17 : 09 : 39 -- https : // public . boxcloud . com / d / 1 / b1 ! mEw7jD3SYx2JkfpPGUANWAkasmzfYG_4IsWs_1IIcIove2w1TUwrVVpSqlNM8xPs - NiiaFcTJOO191k11vZNt5UaleiAtPOJbdCvrwABOUgpE17vVBhKIsjOpp_DmmYeivZaVBJMh_GQGiVKzkhVwTkbzm5s - EZunbREKZsvTfjrzWTUv_xaHoT5deMNloKiCw -- jQoahlEPn4Ng3uOSpHTlGfjcx - LcwzZS9mxrkfsW7PJGpaTn3PiDw - u6PuI4RuN9BmviJz0fqJs2vLOdKuGHOUNnV3p3DgnHX - NxFtYxBXf2m_xC - iYN3hXPbQF1UvruvypWCzIKLMzkyJRGTlgMENXff9YtLB04B4bATBJw9xO8YLEA1UaQ - 2 DYdi4pRY5tSM_u_KwfYhTsBj0PzUOjSUe3plTIOPIeriZAB02SdU2mGMuQOQrzNy0FXgFYI3nMmUPdzTGYA4x5vt6dP99T9wwyRromJMLtfY - sjiK3j_WgUjxvP6Wpm7IM8vGzls5ZrJ85LktkQDyU7sOZLojFgjITbaPSNbJDtcaiI23iUNeJELerAM - opkV8CbgV4ohHWrgQIUyKm45mu0K8kbGjo6Ve40mgfDb1CdsX7zBWPEDfd9wwXLq3c3C1DUSuW0_9kvZSreQ6F - lNaGwLSD62Y4ruh7mRwZMHr90Y3nY0JnsXbaZMDXCpDLRuCMu_oTOR2LRY3fU2Ez6s0m4gtlgRFzsvwtqXAHCHO8Rj4kXq0HrpYljhxiF1c8q - PZqvEPcf5DmnT4zpEr9KG5gpqRlCwwfJWl1dJ - 3 U4SxvXATHQtwqM1LLLO2hDv8GmuQ05tERAlWHRrx0zOT9cmjSAs63b - 6 BfApttPjr55oxKp59ouozkWBbNllndr_qnML8faaoak3Yy4wq8NfWJeRIejfTEaNg_Gv5trktY99C4sPEcxHjeRcY6HWhR0Z1YhpIhcynayVMEAhgUGNRbtEhLF - hx6ZqJUKv8gBKmxmKwZoNjmoEJiOTDULD9tl3cp8Tlj9FjraA7Fl3BCVWo4o56fCCgqs8h9txsYaYbHcyLMtA9LdWwpgLf9EcOEObmSMsi9Dt - ORHTpkMa7jdiBOF1uuczrmK58fj_Mi46IdNjiLB3_595 - BK2ClzeWsu7Os - RznkS - BNc1gWFgB5T_1wsxOTpJ3X0RKG3LHRQHgd2yGpXqStAS_j7Z1ze0ooWMO1vFbwZdca05sq - DnIvNy6mtY4Jt4DKconl562MC5FEI4QKtW_FSZPFbWjC7Nioo9CTYJbRbPM6ADHvpjL4RrW2T0MumHF9V1TgF7wDLo79i9N - 3 BBxvWFruNTi - iMJ30zvvQ0k2Xd1wrbeSflfhS4mtZbvf6nOJZr5COaSsqcrT8BzViSwr09bocU54hRTB_5MFg0NilGApeu3eL20kBxNsf_zjehrVU . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 3828633558 ( 3.6 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L001_R1_001 . fastq . gz \u2019 SRR6470907_S1_L001_ 100 %[ ===================> ] 3.57 G 15.7 MB / s in 3 m 58 s 2019 - 12 - 12 17 : 13 : 38 ( 15.4 MB / s ) - \u2018 SRR6470907_S1_L001_R1_001 . fastq . gz \u2019 saved [ 3828633558/3828633558 ] -- 2019 - 12 - 12 17 : 13 : 40 -- https : // caltech . box . com / shared / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz [ following ] -- 2019 - 12 - 12 17 : 13 : 40 -- https : // caltech . box . com / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz [ following ] -- 2019 - 12 - 12 17 : 13 : 40 -- https : // caltech . app . box . com / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! woL8LjzIjNqeJ9OSHk7 - Xn9zi3K2VdvRVvUbaVnaQJf_poiZY3cA1FkCz - mNcDiv8inLCBr9HxopHLD7qtCpM0ZI3CWVA3sYKKYP146oeDkFtwrnKSX53aUm65dPCv2m1Q3IEkxI5SwD10xXsCWO1TJ91FDo84VieVTyqg5LbREx06zlJcYWvhwayUrSoFehJj1rSSmB27EZC9CgsphjiYUnoyiNyXegv0hy63_3Kwr - G1SKgbA4AO5L5nYvv_murpqwxalzTQgtHpmzTGcCVVERxQA4FULICpd - VmCxERdwUjhvCr5Uiu6DV499heqeH7IEPs - D2VH5VrdQY8gjgQ9_nK3T6Z1UcHPjgcewfqyJpvFVl1NQjTDmsBMUOBdftfIzhgRwJ_Iny6mrwTRgal1kYhwUMrbq6dgUy5 - XhzodwXQrQItFDoYQeDKgLShOZMOs0P9hH_QJmEAEtuG5ax6KLfGpJzjoQJUs0SEhEzOeW9SltM3n0Mz09botMDcDYHWPYPybjAK95uFD0TdIefcMv_BVERwD2vG6GQLivK1mZ6ARg9xS6zbYF7KkffDE6kDUpeWkLkl_CKT0_0p9z5NMWPwGitM0NSOzvV8103q5LyUNboOBc18XKa - H8fXYFcAhZLeqsEkQ0rhbPKgYnB3lm98sSQBGFW8FlgFvTCGf2NYhazjsD4ZKi11duuGhHXrRYr7W1UBfdW7LTZObQqvnyvXQ0P9va2wAW6rkRbs8Oqbb8nlbnaJ9hQKzTRHR3hSl - 6 K98Ocw5k - B5d7RgzMRRLFsuRDEjZvSYf9EXY8bXzI_xjeSD7 - Bs1vbSf95gC9fnxb2hhdQQe_fZYeWYP3OCqstzAI67RDD8dVOLsQ122CpmJRfQ7Uvl0jci0XFiJK -- GqfjQ3LwboZfcfS30tNOsDmYFkmwi4wF3P9nrEFaN12Mh9J5IH2 - W44MPZx_vpS - LRDqRAES3VYtOHwR245hp2Hp27rZebkeEeKXh4uL0C38AAd - FaSXoMswUPyuXj963O5HY3F8dFkaBU2LsHhG5LMLlOMxmwFSWgBOsrvmnuCmDxar2fHqh - VDTRYtUI3aEBYX9zv6JGizpzqP51VdgOg2_3v75pkLW0z69Lkmm4rQVig9rlrvz - 5 WMS5Ess4di2M_PynKqgJRNCIi6ZX3HZNY9w3M - 0 GTvASRwVzfGv_FbTCkXZhbWGCSfqjPOWEgcDsjP3sJAZloat5NhJjGKZHE8gXiDwER1rKmP_xPWylu - DvPzVbnQxAUHlQNRwEn1HeCc0A5oLYihZswtgxj63nnRCiQC - J71hnhrR6RH8naR3GfcxQ66mSHcM6FvXw9OLevcTikF1Ryf_4s - V2HL8ODiShjroat2OzvLjrYmzazUrzZa_Bw - TEDqP - _eQG20t1Y9rnMKG5l4ayIa6CbduANyM . / download [ following ] -- 2019 - 12 - 12 17 : 13 : 41 -- https : // public . boxcloud . com / d / 1 / b1 ! woL8LjzIjNqeJ9OSHk7 - Xn9zi3K2VdvRVvUbaVnaQJf_poiZY3cA1FkCz - mNcDiv8inLCBr9HxopHLD7qtCpM0ZI3CWVA3sYKKYP146oeDkFtwrnKSX53aUm65dPCv2m1Q3IEkxI5SwD10xXsCWO1TJ91FDo84VieVTyqg5LbREx06zlJcYWvhwayUrSoFehJj1rSSmB27EZC9CgsphjiYUnoyiNyXegv0hy63_3Kwr - G1SKgbA4AO5L5nYvv_murpqwxalzTQgtHpmzTGcCVVERxQA4FULICpd - VmCxERdwUjhvCr5Uiu6DV499heqeH7IEPs - D2VH5VrdQY8gjgQ9_nK3T6Z1UcHPjgcewfqyJpvFVl1NQjTDmsBMUOBdftfIzhgRwJ_Iny6mrwTRgal1kYhwUMrbq6dgUy5 - XhzodwXQrQItFDoYQeDKgLShOZMOs0P9hH_QJmEAEtuG5ax6KLfGpJzjoQJUs0SEhEzOeW9SltM3n0Mz09botMDcDYHWPYPybjAK95uFD0TdIefcMv_BVERwD2vG6GQLivK1mZ6ARg9xS6zbYF7KkffDE6kDUpeWkLkl_CKT0_0p9z5NMWPwGitM0NSOzvV8103q5LyUNboOBc18XKa - H8fXYFcAhZLeqsEkQ0rhbPKgYnB3lm98sSQBGFW8FlgFvTCGf2NYhazjsD4ZKi11duuGhHXrRYr7W1UBfdW7LTZObQqvnyvXQ0P9va2wAW6rkRbs8Oqbb8nlbnaJ9hQKzTRHR3hSl - 6 K98Ocw5k - B5d7RgzMRRLFsuRDEjZvSYf9EXY8bXzI_xjeSD7 - Bs1vbSf95gC9fnxb2hhdQQe_fZYeWYP3OCqstzAI67RDD8dVOLsQ122CpmJRfQ7Uvl0jci0XFiJK -- GqfjQ3LwboZfcfS30tNOsDmYFkmwi4wF3P9nrEFaN12Mh9J5IH2 - W44MPZx_vpS - LRDqRAES3VYtOHwR245hp2Hp27rZebkeEeKXh4uL0C38AAd - FaSXoMswUPyuXj963O5HY3F8dFkaBU2LsHhG5LMLlOMxmwFSWgBOsrvmnuCmDxar2fHqh - VDTRYtUI3aEBYX9zv6JGizpzqP51VdgOg2_3v75pkLW0z69Lkmm4rQVig9rlrvz - 5 WMS5Ess4di2M_PynKqgJRNCIi6ZX3HZNY9w3M - 0 GTvASRwVzfGv_FbTCkXZhbWGCSfqjPOWEgcDsjP3sJAZloat5NhJjGKZHE8gXiDwER1rKmP_xPWylu - DvPzVbnQxAUHlQNRwEn1HeCc0A5oLYihZswtgxj63nnRCiQC - J71hnhrR6RH8naR3GfcxQ66mSHcM6FvXw9OLevcTikF1Ryf_4s - V2HL8ODiShjroat2OzvLjrYmzazUrzZa_Bw - TEDqP - _eQG20t1Y9rnMKG5l4ayIa6CbduANyM . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 6778713048 ( 6.3 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L001_R2_001 . fastq . gz \u2019 SRR6470907_S1_L001_ 100 %[ ===================> ] 6.31 G 14.5 MB / s in 7 m 25 s 2019 - 12 - 12 17 : 21 : 07 ( 14.5 MB / s ) - \u2018 SRR6470907_S1_L001_R2_001 . fastq . gz \u2019 saved [ 6778713048/6778713048 ] -- 2019 - 12 - 12 17 : 21 : 09 -- https : // caltech . box . com / shared / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz [ following ] -- 2019 - 12 - 12 17 : 21 : 10 -- https : // caltech . box . com / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz [ following ] -- 2019 - 12 - 12 17 : 21 : 10 -- https : // caltech . app . box . com / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! - CFZSuN_Qtpd3jFo3OMS6UdIb6n8hnhEU92hCLHKOzl5WL78fc6YEvnTsGBMC2gWBUaMdvkMq0UT3RkegIrKuohCJNeyRb6UXIzXAIPsuVVwmwkhcgPRIXn4KXm5Nub_VUGTAUtTEELuqbjlLurA1koY05AfijpRkdMrd6dq_e0L5SDjGIbn_d4LdtVY8Ty1Bs7m49XJDfc5xo74Myaomf - gm3EY02sfJ2JCJmcRMmZdDgoDaRUeAS8 - w - lPZw7gLmWGw24gHpv2x0EdrSp_3mNEfPrTmZTHNUFDzCOtvRU4T0C3V1FU0lvBenkIs8wBLT9D4geMEjj6L_qYkbr6ZVVsq215oLGKsaZPWvvDi0ruJ2xE1FvO0k3cxG8K1xOesQkyb2Q4HMaueLISFYwjYtYoaptLI3og6YP - mSEBEmX8AB0vG2wtQTn3tU1hrMhvaHLa7z64RRbpyfr6r95EvViGiKCndPz20jZLcboZQ91nKX3A6lLkMaKKLG1aLQp6YcU1NUvb0616_X37Ij2THCsqK5VKVVOvZUuQfwSGyk6AKunp4L2T4awbfui96dFNXi_exzuC6CJdmAkOBLZeGMEXWGLWKJSZHCMcHjNArMJH24xb7JX_Muw1PJMbY7p8xzaJZ8us9MC5vEfC6bOvEub6EuegKZcbLNJsVirxbw7lGV3NdTxhZv - lTw0PgxCCf0Z4Obvy3ZesMmwp8GhSKT34t3FCDHMJhDdmN3LzaafCRt32mNvVIPi8 - LZqdZI8U17nzAtqRvoax0b6nVX - 7 tLs8f6jlpfkWjCiUq6YaN5dl6cpFriTRRukWUkVCUbD7piKB9yFL0aIMvZcyjD_W - NAWUlsQxYWMeR - Yx_ZlBBRpmRR6Tu2xPQwQd9fbWUMeyB5C74o1V0lc4T_OGCU7MqE9Jo41btnvXbHgBSPPyGQ3zNHVGVYs_pCCVbedtjhaWmhHlztEcnRldao7h2z40gXeBuJAjK87MZ_ybBg_w_NIXr3E7iLG9HmkKiJngslzENTaFdR85PoqpPNroLt34YQQijizL1elyowlab3VnosScPMDKG5uvu6FYbiOQLIIK - znuzsMrej6M9RgNjv9HUW_aNv2 - EQWhaOARHBt20p1CHBWseSeBdYKzTZurPZbS2HLTuzbGws4CuhcPvbaNJLyV9BTMNAG_rJqGT4gsisBJBWRnlpEJX0OahbDf2QPOobrNAj8rVQIoOeLXqqJzstgOyzx0gkfHszPx2fIQmRyRC - a2x0wrmCMUQWJ3kwHTKKVTSaM03_MVDpM7s5flxshlFqOpjWZsps235p6dqkd0 - fKsL_4nNdym8sR4abwegEM1qIOTGDUO5cNw7UkKNFxuD3sZ39Si_5SEbZmpGgCgXfHlhYA9PV1g4qCLSDyVrpAh41Em_iTQouEb9JNcIwpmv11Tw . / download [ following ] -- 2019 - 12 - 12 17 : 21 : 11 -- https : // public . boxcloud . com / d / 1 / b1 ! - CFZSuN_Qtpd3jFo3OMS6UdIb6n8hnhEU92hCLHKOzl5WL78fc6YEvnTsGBMC2gWBUaMdvkMq0UT3RkegIrKuohCJNeyRb6UXIzXAIPsuVVwmwkhcgPRIXn4KXm5Nub_VUGTAUtTEELuqbjlLurA1koY05AfijpRkdMrd6dq_e0L5SDjGIbn_d4LdtVY8Ty1Bs7m49XJDfc5xo74Myaomf - gm3EY02sfJ2JCJmcRMmZdDgoDaRUeAS8 - w - lPZw7gLmWGw24gHpv2x0EdrSp_3mNEfPrTmZTHNUFDzCOtvRU4T0C3V1FU0lvBenkIs8wBLT9D4geMEjj6L_qYkbr6ZVVsq215oLGKsaZPWvvDi0ruJ2xE1FvO0k3cxG8K1xOesQkyb2Q4HMaueLISFYwjYtYoaptLI3og6YP - mSEBEmX8AB0vG2wtQTn3tU1hrMhvaHLa7z64RRbpyfr6r95EvViGiKCndPz20jZLcboZQ91nKX3A6lLkMaKKLG1aLQp6YcU1NUvb0616_X37Ij2THCsqK5VKVVOvZUuQfwSGyk6AKunp4L2T4awbfui96dFNXi_exzuC6CJdmAkOBLZeGMEXWGLWKJSZHCMcHjNArMJH24xb7JX_Muw1PJMbY7p8xzaJZ8us9MC5vEfC6bOvEub6EuegKZcbLNJsVirxbw7lGV3NdTxhZv - lTw0PgxCCf0Z4Obvy3ZesMmwp8GhSKT34t3FCDHMJhDdmN3LzaafCRt32mNvVIPi8 - LZqdZI8U17nzAtqRvoax0b6nVX - 7 tLs8f6jlpfkWjCiUq6YaN5dl6cpFriTRRukWUkVCUbD7piKB9yFL0aIMvZcyjD_W - NAWUlsQxYWMeR - Yx_ZlBBRpmRR6Tu2xPQwQd9fbWUMeyB5C74o1V0lc4T_OGCU7MqE9Jo41btnvXbHgBSPPyGQ3zNHVGVYs_pCCVbedtjhaWmhHlztEcnRldao7h2z40gXeBuJAjK87MZ_ybBg_w_NIXr3E7iLG9HmkKiJngslzENTaFdR85PoqpPNroLt34YQQijizL1elyowlab3VnosScPMDKG5uvu6FYbiOQLIIK - znuzsMrej6M9RgNjv9HUW_aNv2 - EQWhaOARHBt20p1CHBWseSeBdYKzTZurPZbS2HLTuzbGws4CuhcPvbaNJLyV9BTMNAG_rJqGT4gsisBJBWRnlpEJX0OahbDf2QPOobrNAj8rVQIoOeLXqqJzstgOyzx0gkfHszPx2fIQmRyRC - a2x0wrmCMUQWJ3kwHTKKVTSaM03_MVDpM7s5flxshlFqOpjWZsps235p6dqkd0 - fKsL_4nNdym8sR4abwegEM1qIOTGDUO5cNw7UkKNFxuD3sZ39Si_5SEbZmpGgCgXfHlhYA9PV1g4qCLSDyVrpAh41Em_iTQouEb9JNcIwpmv11Tw . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 4853988957 ( 4.5 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L002_R1_001 . fastq . gz \u2019 SRR6470907_S1_L002_ 100 %[ ===================> ] 4.52 G 14.3 MB / s in 5 m 28 s 2019 - 12 - 12 17 : 26 : 39 ( 14.1 MB / s ) - \u2018 SRR6470907_S1_L002_R1_001 . fastq . gz \u2019 saved [ 4853988957/4853988957 ] -- 2019 - 12 - 12 17 : 26 : 41 -- https : // caltech . box . com / shared / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz [ following ] -- 2019 - 12 - 12 17 : 26 : 41 -- https : // caltech . box . com / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz [ following ] -- 2019 - 12 - 12 17 : 26 : 41 -- https : // caltech . app . box . com / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! IVYOgKcGOzbilk9FlsGm88xV2io9D84Ow22xbB96OKsLZNYRxkZSs_jyMZQ8OC1FhBpCAB3dHUjCJCJ4NiaaUtOL8OwMjtQbMqL45 - TTdPw8PpbCH4Y1hf9G1XrG336NJLhY7hwQEir1hiLmBGIuf4t9TrjHSkXx6GCbMdK9XYSafYznfKjR4usiOwhGcxPSTD96PW3BGPM8YPM9wfqeDJtWQymNJOGOGUiWaa6 - gPrejYp1potoKKu - wWa6CMMxoO3aZ9pK2ZhLQzEpsbHmUkz2xB36RY5vqatTV1V58nxen06RjS1cExNfQ2HWxSS65IvfXmodDCiUEKeCUjHM08LmaPmvDdJfN6x9bIpGRyFWYqW845YcbvdWvvFA_TIfXcziixmBRiqc_kG4KqmIyV_A9hm40gANqeeb9UK - Oz41SX7kHRJp7Of_Th5SIctBrLN7NRdb - zqMmThHmnvCWJUk5eVSO0Xn5tOOJoiYLFl2PbiR3PYR0q - J6lkVUJvxU47 - GBGWwd2S3yj115w7bXVfm77Ow895bSC4g6HdF21w2fw2CFhf5 - XtDgp2W5TnxQjb_ZU0pNl7ZyJ8Vmf3b8eT1bPOfQT8UnMwZjGpcmXDsaRi7pxtzY7DP8nLVuY9HelV57_QIvEpOHK7hd810sfYu2r_kgVQRqrVaev9_LXZIh - aH2azE1YFjxUPrHwyETg4KLKVDpcQQC_Dj2NCWor2ThwUROC - O4_j5Zs4CYqMzPF6XiNBBOGu - zsjvDLTdOJ9ID8tqSGhsBo - Gkz5mWDz4st7A0kK4GjZ3jNnip02Q1Cf5s6AhDd8GdEi - 45 acxUTCB2rhcrxTTHV - XuCSTRQ7qQ0HNMMMFxk8CVNd6GNm_5_BaJqjd6NHpumIp61eBNfvdQIaU_ugiHNZiTnsVoCrTfk8Yn3ehSS0EZPHoSbvUwW9RFLP1sZk81836XQ3xHUiYjQ_owVntdqmBInhdq9lsxeB1acv5JLrpAPBpPSdOoAoKcSMFMEWMM36c5k9YNk7zj7Pi5h672oUzgP1mNj05hHyIgTQoXOjPtS9A6vcy8KDOOXSGQ7a9hXOeIw4nJ4U6ErlhZlvlRZ3RpJRsgavTXdAi6A5A - nrxoQVQvd3 - 1 uwNQeEZJ5zGPsspbs51GZJOFt - kGVF2nqQ3K_w4vgMggST_V6Lgtr2wX0z1gMwyObrrCpgN0WJzSz4881mI9WNJedPc33Xiq7U33y02yRC1NowEQuIqJhPZZprH98e1GPgPnbaRQ - 1 im -- XMpVaZQjWj71ptQvEvP_3b4JICWRIX9f4L_5PdEmfVkjrS4Khxd6HYekoiitQbm6d8auOdEp7PseYO - 0 yh0cwy1RCGVLKvrAp -- bKhen4j4aVD5repULhU86R30xg5qJQWqp3Fvidw03bdao3tmtV7Pm9j9AIO3BaE . / download [ following ] -- 2019 - 12 - 12 17 : 26 : 42 -- https : // public . boxcloud . com / d / 1 / b1 ! IVYOgKcGOzbilk9FlsGm88xV2io9D84Ow22xbB96OKsLZNYRxkZSs_jyMZQ8OC1FhBpCAB3dHUjCJCJ4NiaaUtOL8OwMjtQbMqL45 - TTdPw8PpbCH4Y1hf9G1XrG336NJLhY7hwQEir1hiLmBGIuf4t9TrjHSkXx6GCbMdK9XYSafYznfKjR4usiOwhGcxPSTD96PW3BGPM8YPM9wfqeDJtWQymNJOGOGUiWaa6 - gPrejYp1potoKKu - wWa6CMMxoO3aZ9pK2ZhLQzEpsbHmUkz2xB36RY5vqatTV1V58nxen06RjS1cExNfQ2HWxSS65IvfXmodDCiUEKeCUjHM08LmaPmvDdJfN6x9bIpGRyFWYqW845YcbvdWvvFA_TIfXcziixmBRiqc_kG4KqmIyV_A9hm40gANqeeb9UK - Oz41SX7kHRJp7Of_Th5SIctBrLN7NRdb - zqMmThHmnvCWJUk5eVSO0Xn5tOOJoiYLFl2PbiR3PYR0q - J6lkVUJvxU47 - GBGWwd2S3yj115w7bXVfm77Ow895bSC4g6HdF21w2fw2CFhf5 - XtDgp2W5TnxQjb_ZU0pNl7ZyJ8Vmf3b8eT1bPOfQT8UnMwZjGpcmXDsaRi7pxtzY7DP8nLVuY9HelV57_QIvEpOHK7hd810sfYu2r_kgVQRqrVaev9_LXZIh - aH2azE1YFjxUPrHwyETg4KLKVDpcQQC_Dj2NCWor2ThwUROC - O4_j5Zs4CYqMzPF6XiNBBOGu - zsjvDLTdOJ9ID8tqSGhsBo - Gkz5mWDz4st7A0kK4GjZ3jNnip02Q1Cf5s6AhDd8GdEi - 45 acxUTCB2rhcrxTTHV - XuCSTRQ7qQ0HNMMMFxk8CVNd6GNm_5_BaJqjd6NHpumIp61eBNfvdQIaU_ugiHNZiTnsVoCrTfk8Yn3ehSS0EZPHoSbvUwW9RFLP1sZk81836XQ3xHUiYjQ_owVntdqmBInhdq9lsxeB1acv5JLrpAPBpPSdOoAoKcSMFMEWMM36c5k9YNk7zj7Pi5h672oUzgP1mNj05hHyIgTQoXOjPtS9A6vcy8KDOOXSGQ7a9hXOeIw4nJ4U6ErlhZlvlRZ3RpJRsgavTXdAi6A5A - nrxoQVQvd3 - 1 uwNQeEZJ5zGPsspbs51GZJOFt - kGVF2nqQ3K_w4vgMggST_V6Lgtr2wX0z1gMwyObrrCpgN0WJzSz4881mI9WNJedPc33Xiq7U33y02yRC1NowEQuIqJhPZZprH98e1GPgPnbaRQ - 1 im -- XMpVaZQjWj71ptQvEvP_3b4JICWRIX9f4L_5PdEmfVkjrS4Khxd6HYekoiitQbm6d8auOdEp7PseYO - 0 yh0cwy1RCGVLKvrAp -- bKhen4j4aVD5repULhU86R30xg5qJQWqp3Fvidw03bdao3tmtV7Pm9j9AIO3BaE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 8621336299 ( 8.0 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L002_R2_001 . fastq . gz \u2019 SRR6470907_S1_L002_ 100 %[ ===================> ] 8.03 G 15.3 MB / s in 9 m 1 s 2019 - 12 - 12 17 : 35 : 44 ( 15.2 MB / s ) - \u2018 SRR6470907_S1_L002_R2_001 . fastq . gz \u2019 saved [ 8621336299/8621336299 ] CPU times : user 17.6 s , sys : 3.11 s , total : 20.7 s Wall time : 50 min 28 s Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing SRR6470906_S1_L001_R1_001.fastq.gz: OK SRR6470906_S1_L001_R2_001.fastq.gz: OK SRR6470906_S1_L002_R1_001.fastq.gz: OK SRR6470906_S1_L002_R2_001.fastq.gz: OK SRR6470907_S1_L001_R1_001.fastq.gz: OK SRR6470907_S1_L001_R2_001.fastq.gz: OK SRR6470907_S1_L002_R1_001.fastq.gz: OK SRR6470907_S1_L002_R2_001.fastq.gz: OK Install kb \u00b6 Install kb for running the kallisto|bustools workflow. 1 !pip install kb-python Collecting kb - python \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 62 / c9 / 2e5 b8fa2cd873a23ae1aeb128b33165d6a9387a2f56ea1fafec1d6d32477 / kb_python - 0.24 . 4 - py3 - none - any . whl ( 35.4 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 35.4 MB 93.0 MB / s \u001b [ ? 25 hCollecting loompy >= 3.0 . 6 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 36 / 52 / 74 ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9 / loompy - 3.0 . 6. tar . gz ( 41 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 8.3 MB / s \u001b [ ? 25 hCollecting anndata >= 0.6 . 22. post1 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 2 b / 72 / 87196 c15f68d9865c31a43a10cf7c50bcbcedd5607d09f9aada0b3963103 / anndata - 0.6 . 22. post1 - py3 - none - any . whl ( 47 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 8.2 MB / s \u001b [ ? 25 hRequirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 2.8 . 0 ) Requirement already satisfied : numpy in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 1.17 . 4 ) Requirement already satisfied : scipy in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 1.3 . 3 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 42.0 . 2 ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 0.40 . 1 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 7.0 ) Collecting numpy - groupies \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 96 / 7 a / 2196465530e72084 c6bb97cd49bf8ccdc83919cc94755727aa148effbc0f / numpy_groupies - 0.9 . 9. tar . gz ( 43 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 7.3 MB / s \u001b [ ? 25 hRequirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python ) ( 0.25 . 3 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python ) ( 5.5 . 0 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> loompy >= 3.0 . 6 -> kb - python ) ( 1.12 . 0 ) Requirement already satisfied : llvmlite >= 0.25 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python ) ( 0.30 . 0 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python ) ( 2.6 . 1 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python ) ( 2018.9 ) Building wheels for collected packages : loompy , numpy - groupies Building wheel for loompy ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for loompy : filename = loompy - 3.0 . 6 - cp36 - none - any . whl size = 47896 sha256 = 59 c25a4deb5ede0f81a8e517a49472995f8e78dfba775923ecd967c87fe50386 Stored in directory : / root /. cache / pip / wheels / f9 / a4 / 90 / 5 a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9 Building wheel for numpy - groupies ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for numpy - groupies : filename = numpy_groupies - 0 + unknown - cp36 - none - any . whl size = 27879 sha256 = 87270 c8976a5752b0f7ea76542caffdf0070a3f736e8220c086a16e2343863ec Stored in directory : / root /. cache / pip / wheels / 6 c / fb / 3 d / 5 c43eb691bd92a3ddd0ebeb6e7e78ceaf3ae1cb8d54b89a7fb Successfully built loompy numpy - groupies Installing collected packages : numpy - groupies , loompy , anndata , kb - python Successfully installed anndata - 0.6 . 22. post1 kb - python - 0.24 . 4 loompy - 3.0 . 6 numpy - groupies - 0 + unknown Download a pre-built human RNA velocity index \u00b6 kb provides a pre-built human RNA velocity index, which is suitable for 10x data only. See this notebook to understand how the index was generated: https://github.com/linnarsson-lab/loompy/blob/master/notebooks/build_index.ipynb Because this is a velocity index, we need to provide the -c1 and -c2 options when downloading to indicate what we want to name our transcripts-to-capture lists. These lists contain transcript IDs that correspond to spliced and unspliced variants of genes, the sequences of which were used to generate the index.idx file. Note: See this notebook for a tutorial on how to build custom transcriptome or RNA velocity indices. 1 2 %%time !kb ref -d linnarsson -i index.idx -g t2g.txt -c1 spliced_t2c.txt -c2 unspliced_t2c.txt [ 2019 - 12 - 12 17 : 40 : 34 , 599 ] INFO Downloading files for linnarsson from https : // caltech . box . com / shared / static / kyf7ai5s8y2l0vycl5yxunrappvrf0yx . gz to tmp / kyf7ai5s8y2l0vycl5yxunrappvrf0yx . gz [ 2019 - 12 - 12 17 : 45 : 54 , 084 ] INFO Extracting files from tmp / kyf7ai5s8y2l0vycl5yxunrappvrf0yx . gz CPU times : user 1.32 s , sys : 174 ms , total : 1.5 s Wall time : 6 min 30 s Generate RNA velocity count matrices \u00b6 The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively, as well as the transcripts-to-capture lists to the -c1 and -c2 arguments. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . The --filter flag is used to filter out barcodes with low UMI counts. This will generate two matrices, one in the counts_unfiltered directory and another in the counts_filtered directory. Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags. SRR6470906 \u00b6 1 2 3 4 5 6 7 8 9 10 %%time # Uncomment the following two lines if you want to use checkpoint files # !wget https://caltech.box.com/shared/static/wt1xo5ro9v7qo4fi4dl52kbbcg0omlve.gz -O SRR64070906.tar.gz # !tar -xzvf SRR64070906.tar.gz !kb count --h5ad -i index.idx -g t2g.txt -x 10xv2 -o SRR6470906 \\ -c1 spliced_t2c.txt -c2 unspliced_t2c.txt --lamanno --filter bustools -t 2 \\ SRR6470906_S1_L001_R1_001.fastq.gz \\ SRR6470906_S1_L001_R2_001.fastq.gz \\ SRR6470906_S1_L002_R1_001.fastq.gz \\ SRR6470906_S1_L002_R2_001.fastq.gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO Generating BUS file from [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L001_R1_001 . fastq . gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L001_R2_001 . fastq . gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L002_R1_001 . fastq . gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L002_R2_001 . fastq . gz [ 2019 - 12 - 12 18 : 29 : 18 , 309 ] INFO Sorting BUS file SRR6470906 / output . bus to tmp / output . s . bus [ 2019 - 12 - 12 18 : 30 : 52 , 034 ] INFO Whitelist not provided [ 2019 - 12 - 12 18 : 30 : 52 , 034 ] INFO Copying pre - packaged 10 XV2 whitelist to SRR6470906 [ 2019 - 12 - 12 18 : 30 : 52 , 217 ] INFO Inspecting BUS file tmp / output . s . bus [ 2019 - 12 - 12 18 : 31 : 19 , 945 ] INFO Correcting BUS records in tmp / output . s . bus to tmp / output . s . c . bus with whitelist SRR6470906 / 10 xv2_whitelist . txt [ 2019 - 12 - 12 18 : 31 : 44 , 539 ] INFO Sorting BUS file tmp / output . s . c . bus to SRR6470906 / output . unfiltered . bus [ 2019 - 12 - 12 18 : 32 : 15 , 671 ] INFO Capturing records from BUS file SRR6470906 / output . unfiltered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 18 : 32 : 55 , 811 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470906 / spliced . unfiltered . bus [ 2019 - 12 - 12 18 : 33 : 18 , 574 ] INFO Generating count matrix SRR6470906 / counts_unfiltered / spliced from BUS file SRR6470906 / spliced . unfiltered . bus [ 2019 - 12 - 12 18 : 33 : 47 , 704 ] INFO Capturing records from BUS file SRR6470906 / output . unfiltered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 18 : 34 : 19 , 695 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470906 / unspliced . unfiltered . bus [ 2019 - 12 - 12 18 : 34 : 30 , 651 ] INFO Generating count matrix SRR6470906 / counts_unfiltered / unspliced from BUS file SRR6470906 / unspliced . unfiltered . bus [ 2019 - 12 - 12 18 : 35 : 28 , 217 ] INFO Writing matrices to h5ad SRR6470906 / counts_unfiltered / adata . h5ad [ 2019 - 12 - 12 18 : 35 : 28 , 762 ] INFO Filtering with bustools [ 2019 - 12 - 12 18 : 35 : 28 , 763 ] INFO Generating whitelist SRR6470906 / filter_barcodes . txt from BUS file SRR6470906 / output . unfiltered . bus [ 2019 - 12 - 12 18 : 35 : 29 , 383 ] INFO Capturing records from BUS file SRR6470906 / output . unfiltered . bus to tmp / output . filtered . bus with capture list SRR6470906 / filter_barcodes . txt [ 2019 - 12 - 12 18 : 35 : 37 , 452 ] INFO Sorting BUS file tmp / output . filtered . bus to SRR6470906 / output . filtered . bus [ 2019 - 12 - 12 18 : 36 : 01 , 835 ] INFO Capturing records from BUS file SRR6470906 / output . filtered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 18 : 36 : 38 , 648 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470906 / spliced . filtered . bus [ 2019 - 12 - 12 18 : 36 : 57 , 294 ] INFO Generating count matrix SRR6470906 / counts_filtered / spliced from BUS file SRR6470906 / spliced . filtered . bus [ 2019 - 12 - 12 18 : 37 : 23 , 234 ] INFO Capturing records from BUS file SRR6470906 / output . filtered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 18 : 37 : 54 , 444 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470906 / unspliced . filtered . bus [ 2019 - 12 - 12 18 : 38 : 04 , 159 ] INFO Generating count matrix SRR6470906 / counts_filtered / unspliced from BUS file SRR6470906 / unspliced . filtered . bus [ 2019 - 12 - 12 18 : 38 : 51 , 739 ] INFO Writing matrices to h5ad SRR6470906 / counts_filtered / adata . h5ad CPU times : user 8.86 s , sys : 1.1 s , total : 9.97 s Wall time : 39 min 20 s SRR6470907 \u00b6 1 2 3 4 5 6 7 8 9 10 %%time # Uncomment the following two lines if you want to use checkpoint files # !wget https://caltech.box.com/shared/static/bulmquvaflr18v0nqb8c3ataf9di55r8.gz -O SRR64070907.tar.gz # !tar -xzvf SRR64070907.tar.gz !kb count --h5ad -i index.idx -g t2g.txt -x 10xv2 -o SRR6470907 \\ -c1 spliced_t2c.txt -c2 unspliced_t2c.txt --lamanno --filter bustools \\ SRR6470907_S1_L001_R1_001.fastq.gz \\ SRR6470907_S1_L001_R2_001.fastq.gz \\ SRR6470907_S1_L002_R1_001.fastq.gz \\ SRR6470907_S1_L002_R2_001.fastq.gz [ 2019 - 12 - 12 18 : 38 : 55 , 843 ] INFO Generating BUS file from [ 2019 - 12 - 12 18 : 38 : 55 , 843 ] INFO SRR6470907_S1_L001_R1_001 . fastq . gz [ 2019 - 12 - 12 18 : 38 : 55 , 844 ] INFO SRR6470907_S1_L001_R2_001 . fastq . gz [ 2019 - 12 - 12 18 : 38 : 55 , 844 ] INFO SRR6470907_S1_L002_R1_001 . fastq . gz [ 2019 - 12 - 12 18 : 38 : 55 , 844 ] INFO SRR6470907_S1_L002_R2_001 . fastq . gz [ 2019 - 12 - 12 19 : 10 : 35 , 733 ] INFO Sorting BUS file SRR6470907 / output . bus to tmp / output . s . bus [ 2019 - 12 - 12 19 : 12 : 20 , 479 ] INFO Whitelist not provided [ 2019 - 12 - 12 19 : 12 : 20 , 479 ] INFO Copying pre - packaged 10 XV2 whitelist to SRR6470907 [ 2019 - 12 - 12 19 : 12 : 20 , 592 ] INFO Inspecting BUS file tmp / output . s . bus [ 2019 - 12 - 12 19 : 12 : 54 , 911 ] INFO Correcting BUS records in tmp / output . s . bus to tmp / output . s . c . bus with whitelist SRR6470907 / 10 xv2_whitelist . txt [ 2019 - 12 - 12 19 : 13 : 22 , 556 ] INFO Sorting BUS file tmp / output . s . c . bus to SRR6470907 / output . unfiltered . bus [ 2019 - 12 - 12 19 : 14 : 04 , 585 ] INFO Capturing records from BUS file SRR6470907 / output . unfiltered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 19 : 14 : 52 , 037 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470907 / spliced . unfiltered . bus [ 2019 - 12 - 12 19 : 15 : 19 , 416 ] INFO Generating count matrix SRR6470907 / counts_unfiltered / spliced from BUS file SRR6470907 / spliced . unfiltered . bus [ 2019 - 12 - 12 19 : 15 : 51 , 857 ] INFO Capturing records from BUS file SRR6470907 / output . unfiltered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 19 : 16 : 30 , 927 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470907 / unspliced . unfiltered . bus [ 2019 - 12 - 12 19 : 16 : 46 , 008 ] INFO Generating count matrix SRR6470907 / counts_unfiltered / unspliced from BUS file SRR6470907 / unspliced . unfiltered . bus [ 2019 - 12 - 12 19 : 17 : 57 , 444 ] INFO Writing matrices to h5ad SRR6470907 / counts_unfiltered / adata . h5ad [ 2019 - 12 - 12 19 : 17 : 58 , 086 ] INFO Filtering with bustools [ 2019 - 12 - 12 19 : 17 : 58 , 086 ] INFO Generating whitelist SRR6470907 / filter_barcodes . txt from BUS file SRR6470907 / output . unfiltered . bus [ 2019 - 12 - 12 19 : 17 : 58 , 897 ] INFO Capturing records from BUS file SRR6470907 / output . unfiltered . bus to tmp / output . filtered . bus with capture list SRR6470907 / filter_barcodes . txt [ 2019 - 12 - 12 19 : 18 : 08 , 972 ] INFO Sorting BUS file tmp / output . filtered . bus to SRR6470907 / output . filtered . bus [ 2019 - 12 - 12 19 : 18 : 42 , 842 ] INFO Capturing records from BUS file SRR6470907 / output . filtered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 19 : 19 : 26 , 502 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470907 / spliced . filtered . bus [ 2019 - 12 - 12 19 : 19 : 50 , 027 ] INFO Generating count matrix SRR6470907 / counts_filtered / spliced from BUS file SRR6470907 / spliced . filtered . bus [ 2019 - 12 - 12 19 : 20 : 19 , 058 ] INFO Capturing records from BUS file SRR6470907 / output . filtered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 19 : 20 : 56 , 254 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470907 / unspliced . filtered . bus [ 2019 - 12 - 12 19 : 21 : 08 , 867 ] INFO Generating count matrix SRR6470907 / counts_filtered / unspliced from BUS file SRR6470907 / unspliced . filtered . bus [ 2019 - 12 - 12 19 : 22 : 11 , 325 ] INFO Writing matrices to h5ad SRR6470907 / counts_filtered / adata . h5ad CPU times : user 9.69 s , sys : 1.25 s , total : 10.9 s Wall time : 43 min 24 s Analysis \u00b6 In this part of the tutorial, we will load the RNA count matrix generated by kb count into Python and cluster the cells with Louvain. Install packages \u00b6 Google Colab does not come with scanpy , python-igraph , or louvain (but comes with matplotlib , numpy , pandas , and scipy ). 1 !pip install scanpy loompy scvelo anndata velocyto python-igraph louvain Collecting scanpy \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / c9 / df / e0957422a85e924501afbff2f9283e02d93cefcb04aa8319ade7af68d266 / scanpy - 1.4 . 4. post1 - py3 - none - any . whl ( 1.9 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1.9 MB 2.7 MB / s \u001b [ ? 25 hRequirement already satisfied : loompy in / usr / local / lib / python3 . 6 / dist - packages ( 3.0 . 6 ) Collecting scvelo \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 62 / da / 0 b40b56a7a7c2b01fb3d978b7225c3f33558092a8c7a8374d67285f04c4b / scvelo - 0.1 . 24 - py3 - none - any . whl ( 168 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 174 kB 71.2 MB / s \u001b [ ? 25 hRequirement already satisfied : anndata in / usr / local / lib / python3 . 6 / dist - packages ( 0.6 . 22. post1 ) Collecting velocyto \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 81 / 66 / e8fff9d3b824fd99c0f678c47c740fec058ce2d9a0cfdf11b114ea8889f2 / velocyto - 0.17 . 17. tar . gz ( 198 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 204 kB 70.5 MB / s \u001b [ ? 25 hRequirement already satisfied : scikit - learn != 0.21 . 0 , != 0.21 . 1 , >= 0.19 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.21 . 3 ) Requirement already satisfied : scipy >= 1.3 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 1.3 . 3 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 5.5 . 0 ) Requirement already satisfied : pandas >= 0.21 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.25 . 3 ) Requirement already satisfied : statsmodels >= 0.10 . 0 rc2 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.10 . 2 ) Requirement already satisfied : seaborn in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.9 . 0 ) Requirement already satisfied : patsy in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.5 . 1 ) Collecting matplotlib == 3.0 .* \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / e9 / 69 / f5e05f578585ed9935247be3788b374f90701296a70c8871bcd6d21edb00 / matplotlib - 3.0 . 3 - cp36 - cp36m - manylinux1_x86_64 . whl ( 13.0 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13.0 MB 47.2 MB / s \u001b [ ? 25 hRequirement already satisfied : networkx in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 2.4 ) Requirement already satisfied : tqdm in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 4.28 . 1 ) Requirement already satisfied : joblib in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.14 . 0 ) Collecting numba >= 0.41 . 0 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 53 / 34 / 22 b6c2ded558976b5367be01b851ae679a0d1ba994de002d54afe84187b5 / numba - 0.46 . 0 - cp36 - cp36m - manylinux1_x86_64 . whl ( 3.6 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3.6 MB 47.5 MB / s \u001b [ ? 25 hRequirement already satisfied : umap - learn >= 0.3 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.3 . 10 ) Requirement already satisfied : importlib - metadata >= 0.7 ; python_version < \"3.8\" in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 1.2 . 0 ) Requirement already satisfied : tables in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 3.4 . 4 ) Requirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 2.8 . 0 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 42.0 . 2 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 7.0 ) Requirement already satisfied : numpy - groupies in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 0 + unknown ) Requirement already satisfied : numpy in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 1.17 . 4 ) Requirement already satisfied : cython in / usr / local / lib / python3 . 6 / dist - packages ( from velocyto ) ( 0.29 . 14 ) Collecting pysam \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 15 / e7 / 2 dab8bb0ac739555e69586f1492f0ff6bc4a1f8312992a83001d3deb77ac / pysam - 0.15 . 3. tar . gz ( 3.2 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3.2 MB 39.3 MB / s \u001b [ ? 25 hRequirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.21 -> scanpy ) ( 2018.9 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.21 -> scanpy ) ( 2.6 . 1 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from patsy -> scanpy ) ( 1.12 . 0 ) Requirement already satisfied : pyparsing != 2.0 . 4 , != 2.1 . 2 , != 2.1 . 6 , >= 2.0 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from matplotlib == 3.0 .*-> scanpy ) ( 2.4 . 5 ) Requirement already satisfied : cycler >= 0.10 in / usr / local / lib / python3 . 6 / dist - packages ( from matplotlib == 3.0 .*-> scanpy ) ( 0.10 . 0 ) Requirement already satisfied : kiwisolver >= 1.0 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from matplotlib == 3.0 .*-> scanpy ) ( 1.1 . 0 ) Requirement already satisfied : decorator >= 4.3 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from networkx -> scanpy ) ( 4.4 . 1 ) Requirement already satisfied : llvmlite >= 0.30 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba >= 0.41 . 0 -> scanpy ) ( 0.30 . 0 ) Requirement already satisfied : zipp >= 0.5 in / usr / local / lib / python3 . 6 / dist - packages ( from importlib - metadata >= 0.7 ; python_version < \"3.8\" -> scanpy ) ( 0.6 . 0 ) Requirement already satisfied : numexpr >= 2.5 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from tables -> scanpy ) ( 2.7 . 0 ) Requirement already satisfied : more - itertools in / usr / local / lib / python3 . 6 / dist - packages ( from zipp >= 0.5 -> importlib - metadata >= 0.7 ; python_version < \"3.8\" -> scanpy ) ( 8.0 . 0 ) Building wheels for collected packages : velocyto , pysam Building wheel for velocyto ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for velocyto : filename = velocyto - 0.17 . 17 - cp36 - cp36m - linux_x86_64 . whl size = 367926 sha256 = 32 f44ce715f59ffb9f36c324fc2cd0472dcd7507754fb1f8ef8868bf8c8b38c6 Stored in directory : / root /. cache / pip / wheels / e0 / 10 / 47 / 5 a2aa6a7179b17b50a19cdba1df71798ade77e7d9ce98c5300 Building wheel for pysam ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for pysam : filename = pysam - 0.15 . 3 - cp36 - cp36m - linux_x86_64 . whl size = 8790482 sha256 = 3 abfe873fccbf84384bed55c40e200be7425d00cfaa6c5877eddc1ca248add6b Stored in directory : / root /. cache / pip / wheels / 85 / ab / 84 / 86 ca6dda37a6fc85687b67be7345b735cd82f6584bea56f327 Successfully built velocyto pysam \u001b [ 31 mERROR : albumentations 0.1 . 12 has requirement imgaug < 0.2 . 7 , >= 0.2 . 5 , but you 'll have imgaug 0.2.9 which is incompatible.\u001b[0m Installing collected packages : matplotlib , numba , scanpy , scvelo , pysam , velocyto Found existing installation : matplotlib 3.1 . 2 Uninstalling matplotlib - 3.1 . 2 : Successfully uninstalled matplotlib - 3.1 . 2 Found existing installation : numba 0.40 . 1 Uninstalling numba - 0.40 . 1 : Successfully uninstalled numba - 0.40 . 1 Successfully installed matplotlib - 3.0 . 3 numba - 0.46 . 0 pysam - 0.15 . 3 scanpy - 1.4 . 4. post1 scvelo - 0.1 . 24 velocyto - 0.17 . 17 We also install an R package called princurve , which is used to fit a principal curve. Note: Google Colab does not official support R as of writing this tutorial, so this process may change with the official release. At the moment, we need to \"hack\" Google Colab to install R dependencies. 1 !Rscript -e \"install.packages('princurve')\" Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) trying URL 'https://cran.rstudio.com/src/contrib/princurve_2.1.4.tar.gz' Content type 'application/x-gzip' length 42249 bytes ( 41 KB ) ================================================== downloaded 41 KB * installing * source * package \u2018 princurve \u2019 ... ** package \u2018 princurve \u2019 successfully unpacked and MD5 sums checked ** using staged installation ** libs g ++ - std = gnu ++ 11 - I \"/usr/share/R/include\" - DNDEBUG - I \"/usr/lib/R/site-library/Rcpp/include\" - fpic - g - O2 - fdebug - prefix - map =/ build / r - base - uuRxut / r - base - 3.6 . 1 =. - fstack - protector - strong - Wformat - Werror = format - security - Wdate - time - D_FORTIFY_SOURCE = 2 - g - c RcppExports . cpp - o RcppExports . o g ++ - std = gnu ++ 11 - I \"/usr/share/R/include\" - DNDEBUG - I \"/usr/lib/R/site-library/Rcpp/include\" - fpic - g - O2 - fdebug - prefix - map =/ build / r - base - uuRxut / r - base - 3.6 . 1 =. - fstack - protector - strong - Wformat - Werror = format - security - Wdate - time - D_FORTIFY_SOURCE = 2 - g - c project_to_curve . cpp - o project_to_curve . o g ++ - std = gnu ++ 11 - shared - L / usr / lib / R / lib - Wl , - Bsymbolic - functions - Wl , - z , relro - o princurve . so RcppExports . o project_to_curve . o - L / usr / lib / R / lib - lR installing to / usr / local / lib / R / site - library / 00 LOCK - princurve / 00 new / princurve / libs ** R ** inst ** byte - compile and prepare package for lazy loading ** help *** installing help indices *** copying figures ** building package indices ** testing if installed package can be loaded from temporary location ** checking absolute paths in shared objects and dynamic libraries ** testing if installed package can be loaded from final location ** testing if installed package keeps a record of temporary installation path * DONE ( princurve ) The downloaded source packages are in \u2018 / tmp / RtmpNrrQA5 / downloaded_packages \u2019 Import packages \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import anndata import igraph import matplotlib import matplotlib.pyplot as plt import numpy as np import rpy2.robjects as robj import scanpy as sc import scipy import scipy.optimize import scvelo as scv import sklearn import velocyto as vcy from collections import Counter from IPython.core.display import display, HTML from numpy_groupies import aggregate, aggregate_np from rpy2.robjects.packages import importr from sklearn.decomposition import PCA from sklearn.neighbors import NearestNeighbors from scipy.spatial.distance import pdist, squareform matplotlib.rcParams.update({'font.size': 12}) %config InlineBackend.figure_format = 'retina' Import H5AD-formatted Anndata matrices \u00b6 1 2 adata_06 = anndata.read('SRR6470906/counts_unfiltered/adata.h5ad') adata_07 = anndata.read('SRR6470907/counts_unfiltered/adata.h5ad') Combine both matrices into a single Anndata object \u00b6 1 2 3 4 5 6 7 8 9 10 # Before we do, we need to make sure we can trace each row back to its # original anndata object. adata_06.obs['run'] = '06' adata_07.obs['run'] = '07' adata_06.obs['bcs'] = adata_06.obs.index adata_07.obs['bcs'] = adata_07.obs.index adata_06.obs.index = adata_06.obs['bcs'] + '.' + adata_06.obs['run'] adata_07.obs.index = adata_07.obs['bcs'] + '.' + adata_07.obs['run'] adata = adata_06.concatenate(adata_07, batch_key='batch') Let's remove the -0 prefixes from the obs index. 1 adata.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } batch bcs run AAACCTGAGAAACCGC.06-0 0 AAACCTGAGAAACCGC 06 AAACCTGAGAAGGACA.06-0 0 AAACCTGAGAAGGACA 06 AAACCTGAGAAGGCCT.06-0 0 AAACCTGAGAAGGCCT 06 AAACCTGAGAAGGGTA.06-0 0 AAACCTGAGAAGGGTA 06 AAACCTGAGAAGGTTT.06-0 0 AAACCTGAGAAGGTTT 06 1 2 adata.obs.index = adata.obs.index.str.split('-').str[0] adata.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } batch bcs run AAACCTGAGAAACCGC.06 0 AAACCTGAGAAACCGC 06 AAACCTGAGAAGGACA.06 0 AAACCTGAGAAGGACA 06 AAACCTGAGAAGGCCT.06 0 AAACCTGAGAAGGCCT 06 AAACCTGAGAAGGGTA.06 0 AAACCTGAGAAGGGTA 06 AAACCTGAGAAGGTTT.06 0 AAACCTGAGAAGGTTT 06 Let's also remove the gene versions from the var index. 1 adata.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } ENSG00000277400.1 ENSG00000274847.1 ENSG00000276256.1 ENSG00000278198.1 ENSG00000273496.1 1 2 adata.var.index = adata.var.index.str.split('.').str[0] adata.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } ENSG00000277400 ENSG00000274847 ENSG00000276256 ENSG00000278198 ENSG00000273496 1 adata AnnData object with n_obs \u00d7 n_vars = 374814 \u00d7 58367 obs : 'batch' , 'bcs' , 'run' layers : 'spliced' , 'unspliced' Select the right barcodes and genes \u00b6 Our Anndata matrix so far contains all genes and barcodes. Here, we will take the genes and barcodes present in our matrix and the matrix published with this dataset. Download the matrix \u00b6 1 2 them = scv.read('data/hgForebrainGlut.loom', cleanup=True, sparse=True, cache=True, backup_url='http://pklab.med.harvard.edu/velocyto/hgForebrainGlut/hgForebrainGlut.loom') them.var_names_make_unique() HBox ( children = ( IntProgress ( value = 1 , bar_style = 'info' , description = 'hgForebrainGlut.loom' , max = 1 , style = Progres \u2026 Variable names are not unique . To make them unique , call ` . var_names_make_unique ` . ... storing 'Chromosome' as categorical ... storing 'Strand' as categorical Clean it up so that we can compare it to ours 1 2 3 4 them.obs[\"bcs\"] = them.obs.index.str.slice(11,-1) them.obs[\"bid\"] = them.obs.index.str.slice(8,10) them.obs[\"run\"] = them.obs.bid.map(lambda x: \"06\" if x==\"29\" else \"07\") them.obs.index = them.obs.bcs.values + \".\"+ them.obs[\"run\"] Take the intersection \u00b6 1 2 final = adata[adata.obs.index.isin(them.obs.index),:] final = final[:,final.var.index.isin(them.var.Accession)] 1 final View of AnnData object with n_obs \u00d7 n_vars = 1720 \u00d7 31029 obs : 'batch' , 'bcs' , 'run' layers : 'spliced' , 'unspliced' We also add an additional ambiguous layer, CellID and Clusters obs and Accession var, all of which are required by Velocyto . 1 2 3 4 final.layers[\"ambiguous\"] = scipy.sparse.csr_matrix(np.zeros(final.X.shape)) final.obs[\"CellID\"] = final.obs.index final.obs[\"Clusters\"] = final.obs.index.map(them.obs[\"Clusters\"]) final.var[\"Accession\"] = final.var.index 1 2 scv.pp.show_proportions(final) print(final) Abundance of [ 'spliced' , 'unspliced' ]: [ 0.61 0.39 ] AnnData object with n_obs \u00d7 n_vars = 1720 \u00d7 31029 obs : 'batch' , 'bcs' , 'run' , 'CellID' , 'Clusters' var : 'Accession' layers : 'spliced' , 'unspliced' Save the final Anndata as a Loom file \u00b6 1 final.write_loom('final.loom') CPU times: user 4.74 s, sys: 237 ms, total: 4.98 s Wall time: 4.98 s Run the Velocyto python pipeline \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 # Some helper functions def array_to_rmatrix(X): nr, nc = X.shape xvec = robj.FloatVector(X.transpose().reshape((X.size))) xr = robj.r.matrix(xvec, nrow=nr, ncol=nc) return xr def principal_curve(X, pca=True): \"\"\" input : numpy.array returns: Result::Object Methods: projections - the matrix of the projectiond ixsort - the order ot the points (as in argsort) arclength - the lenght of the arc from the beginning to the point \"\"\" # convert array to R matrix xr = array_to_rmatrix(X) if pca: #perform pca t = robj.r.prcomp(xr) #determine dimensionality reduction usedcomp = max( sum( np.array(t[t.names.index('sdev')]) > 1.1) , 4) usedcomp = min([usedcomp, sum( np.array(t[t.names.index('sdev')]) > 0.25), X.shape[0]]) Xpc = np.array(t[t.names.index('x')])[:,:usedcomp] # convert array to R matrix xr = array_to_rmatrix(Xpc) #import the correct namespace princurve = importr(\"princurve\", on_conflict=\"warn\") #call the function fit1 = princurve.principal_curve(xr) #extract the outputs class Results: pass results = Results() results.projections = np.array( fit1[0] ) results.ixsort = np.array( fit1[1] ) - 1 # R is 1 indexed results.arclength = np.array( fit1[2] ) results.dist = np.array( fit1[3] ) if pca: results.PCs = np.array(xr) #only the used components return results Read the saved Loom file with Velocyto \u00b6 1 vlm = vcy.VelocytoLoom(\"final.loom\") The rest of the notebook comes from the following notebook: https://github.com/velocyto-team/velocyto-notebooks/blob/master/python/hgForebrainGlutamatergic.ipynb 1 2 3 4 5 6 7 # Load an initial clustering (Louvein) labels = vlm.ca[\"Clusters\"] manual_annotation = {str(i):[i] for i in labels} annotation_dict = {v:k for k, values in manual_annotation.items() for v in values } clusters = np.array([annotation_dict[i] for i in labels]) colors20 = np.vstack((plt.cm.tab20b(np.linspace(0., 1, 20))[::2], plt.cm.tab20c(np.linspace(0, 1, 20))[1::2])) vlm.set_clusters(clusters, cluster_colors_dict={k:colors20[v[0] % 20,:] for k,v in manual_annotation.items()}) 1 2 3 # just to find the initial cell size vlm.normalize(\"S\", size=True, log=False) vlm.normalize(\"U\", size=True, log=False) 1 2 3 vlm.score_detection_levels(min_expr_counts=30, min_cells_express=20, min_expr_counts_U=0, min_cells_express_U=0) vlm.filter_genes(by_detection_levels=True) 1 2 vlm.score_cv_vs_mean(2000, plot=True, max_expr_avg=50, winsorize=True, winsor_perc=(1,99.8), svr_gamma=0.01, min_expr_cells=50) vlm.filter_genes(by_cv_vs_mean=True) 1 2 3 4 5 6 vlm.score_detection_levels(min_expr_counts=0, min_cells_express=0, min_expr_counts_U=25, min_cells_express_U=20) vlm.score_cluster_expression(min_avg_U=0.007, min_avg_S=0.06) vlm.filter_genes(by_detection_levels=True, by_cluster_expression=True) vlm.normalize_by_total(min_perc_U=0.5) vlm.adjust_totS_totU(normalize_total=True, fit_with_low_U=False, svr_C=1, svr_gamma=1e-04) 1 2 3 4 vlm.perform_PCA() plt.plot(np.cumsum(vlm.pca.explained_variance_ratio_)[:100]) n_comps = np.where(np.diff(np.diff(np.cumsum(vlm.pca.explained_variance_ratio_))>0.0055))[0][0] vlm.pcs[:,1] *= -1 # flip for consistency with previous version 1 2 3 4 5 6 7 nn = NearestNeighbors(50) nn.fit(vlm.pcs[:,:4]) knn_pca = nn.kneighbors_graph(mode='distance') knn_pca = knn_pca.tocoo() G = igraph.Graph(list(zip(knn_pca.row, knn_pca.col)), directed=False, edge_attrs={'weight': knn_pca.data}) VxCl = G.community_multilevel(return_levels=False, weights=\"weight\") labels = np.array(VxCl.membership) 1 2 3 pc_obj = principal_curve(vlm.pcs[:,:4], False) pc_obj.arclength = np.max(pc_obj.arclength) - pc_obj.arclength labels = np.argsort(np.argsort(aggregate_np(labels, pc_obj.arclength, func=np.median)))[labels] 1 2 3 4 5 manual_annotation = {str(i):[i] for i in labels} annotation_dict = {v:k for k, values in manual_annotation.items() for v in values } clusters = np.array([annotation_dict[i] for i in labels]) colors20 = np.vstack((plt.cm.tab20b(np.linspace(0., 1, 20))[::2], plt.cm.tab20c(np.linspace(0, 1, 20))[1::2])) vlm.set_clusters(clusters, cluster_colors_dict={k:colors20[v[0] % 20,:] for k,v in manual_annotation.items()}) 1 2 k = 550 vlm.knn_imputation(n_pca_dims=n_comps, k=k) 1 2 vlm.normalize_median() vlm.fit_gammas(maxmin_perc=[2,95], limit_gamma=True) 1 2 vlm.normalize(which=\"imputed\", size=False, log=True) vlm.Pcs = np.array(vlm.pcs[:,:2], order=\"C\") 1 2 3 4 vlm.predict_U() vlm.calculate_velocity() vlm.calculate_shift() vlm.extrapolate_cell_at_t(delta_t=1) 1 2 vlm.estimate_transition_prob(hidim=\"Sx_sz\", embed=\"Pcs\", transform=\"log\", psc=1, n_neighbors=150, knn_random=True, sampled_fraction=1) WARNING : root : Nans encountered in corrcoef and corrected to 1 s . If not identical cells were present it is probably a small isolated cluster converging after imputation . WARNING : root : Nans encountered in corrcoef_random and corrected to 1 s . If not identical cells were present it is probably a small isolated cluster converging after imputation . 1 vlm.calculate_embedding_shift(sigma_corr = 0.05, expression_scaling=False) 1 vlm.calculate_grid_arrows(smooth=0.9, steps=(25, 25), n_neighbors=200) 1 2 3 4 5 6 7 8 9 10 plt.figure(None,(9,9)) vlm.plot_grid_arrows(scatter_kwargs_dict={\"alpha\":0.7, \"lw\":0.7, \"edgecolor\":\"0.4\", \"s\":70, \"rasterized\":True}, min_mass=2.9, angles='xy', scale_units='xy', headaxislength=2.75, headlength=5, headwidth=4.8, quiver_scale=0.35, scale_type=\"absolute\") #plt.plot(pc_obj.projections[pc_obj.ixsort,0], pc_obj.projections[pc_obj.ixsort,1], c=\"w\", lw=6, zorder=1000000) #plt.plot(pc_obj.projections[pc_obj.ixsort,0], pc_obj.projections[pc_obj.ixsort,1], c=\"k\", lw=3, zorder=2000000) plt.gca().invert_xaxis() plt.axis(\"off\") plt.axis(\"equal\"); #plt.savefig(\"kallisto_velocity_forebrain_glut.pdf\") WARNING : root : The arrow scale was set to be 'absolute' make sure you know how to properly interpret the plots","title":"Python"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#pre-processing-and-rna-velocity-analysis-of-single-cell-rna-seq-data-with-kallistobustools","text":"In this notebook, we will perform pre-processing and RNA velocity analysis of human week 10 fetal forebrain dataset ( SRR6470906 and SRR6470907 ) from La Manno et al., 2018 using the kallisto | bustools workflow, implemented with a wrapper called kb . It was developed by Kyung Hoi (Joseph) Min and A. Sina Booeshaghi. Note: The human RNA velocity index used in this tutorial requires at least 16GB of RAM, which means you need to be on a GPU runtime on Google Colab. To change your runtime to a GPU instance, go to Runtime > Change runtime type > select GPU from the Hardware accelerator dropdown. Downloading and processing the data takes a while (> 2 hours). If you would like to use checkpoint files, which reduce this to ~30 minutes, follow these steps: 1. Skip the Download the data step. 2. Follow through the pre-processing steps. Stop before Generate RNA velocity count matrices . 3. Uncomment the commented commands in the cells that run kb count . 4. Continue through the tutorial. 1 !date Thu Dec 12 20:34:50 UTC 2019","title":"Pre-processing and RNA velocity analysis of single-cell RNA-seq data with kallisto|bustools."},{"location":"tutorials/kb_velocity/python/kb_velocity.html#pre-processing","text":"","title":"Pre-processing"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#download-the-data","text":"Note: We use the -O option for wget to rename the files to easily identify them. 1 2 3 4 5 6 7 8 9 10 11 12 %%time !wget https://caltech.box.com/shared/static/8w79k2ydhqigkb4cfhosc6k32zycizdq.txt -O checksums.txt # SRR6470907 !wget https://caltech.box.com/shared/static/nvzqphhklk1yx938l6omursw7sr68y43.gz -O SRR6470906_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/63fh2xa5t82x7s74rqa0e2u2ur59y5ox.gz -O SRR6470906_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/zqi3durukillaw1pbns1kd1lowyfg5qk.gz -O SRR6470906_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/i56qojfz41ns1kw9z86sla0vawsch96t.gz -O SRR6470906_S1_L002_R2_001.fastq.gz # SRR6470907 !wget https://caltech.box.com/shared/static/vrditbbk38tw3f61fwpg504vcc5x09ci.gz -O SRR6470907_S1_L001_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/8ud3otwztjeqlmjctbu1fw7hg3k56ejr.gz -O SRR6470907_S1_L001_R2_001.fastq.gz !wget https://caltech.box.com/shared/static/ln14jjd4tz3hvgxf8zj2kmokof7f1nrf.gz -O SRR6470907_S1_L002_R1_001.fastq.gz !wget https://caltech.box.com/shared/static/o5bwf9u2g7egi02by3e3hbvov8fgwbb3.gz -O SRR6470907_S1_L002_R2_001.fastq.gz -- 2019 - 12 - 12 16 : 45 : 17 -- https : // caltech . box . com / shared / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt [ following ] -- 2019 - 12 - 12 16 : 45 : 17 -- https : // caltech . box . com / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt [ following ] -- 2019 - 12 - 12 16 : 45 : 18 -- https : // caltech . app . box . com / public / static / 8 w79k2ydhqigkb4cfhosc6k32zycizdq . txt Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! HROZcLQR4SR8wMrrjExg1KUpkObpwaMUNr5KN5DXu3Zn3FrctuyWJpB8m11X3wFIGVNxY8WZqjNGudP - Nw - ajzZIz - 1 kTO7dtxXAzVUs_8gVstlxRn0dh7tofcn9SEpe0L9Bjohw_8kCgdAEJCWUmqOqODDDO0MJ48xbHi8Xs8a_R6WfralHUXnJvZaj1JAOEuvr1U8Vtsl2y2AzzKIuUspRnN0vK1_lro9z34Ydrjhp7_6O71TKRtbNnREVwJUrj6P3PQ7IQBUmOr9t49TI9I8wLHpTGajKNDc5bweuFCjggl_gfDfTqGjeVk8YtGM3j8sl8qzblSahy8lWAhOLwCiGgwcsw1W - cPKMZssb2Ij5Bq5WCagQM_K5xRhWLPYd_ - rn90p6kVHAX323pRRFcYyotJPAZ8UXNmmQYa6_CMOhcH5agYtE4jEb6vKNQUUezYHEGkv8ghoM9LFjd6Wzc30c66blugFTD0hpVQcPQdLiA4gquc_BrpKLsfQ8B6MPfndlhEIE2uZpXHtE2HIEsiBpLWbUTOXV2vK6xtUVsVFPeq9xQyGGe3_5TFarqqNzGIwO68uGfZ8RneCScuQVbnDym7zzZTCja7jcrHVP5Lj3gOcG2SeK8l4srpLZsfyBBIPrZkHaZ4Zmlan9PK7YEFVssJU5Ul - _k8whB67050b1 - dS6aLZ2v9_rnH1h2sk_ymTKI_8a - PKAvECCvNy8AxABvk6UD4A_FEWjLYhonYYogAc73_2EvNT8gq9dSKIr3n5q2kj2vizM0frtoEHHSa1e89pLYsyGWOp5oeX9gGXMW9o0iyiqXVdSgEOrYL - PX4rETSJs4UCpupzHGanKhkIvBwmzyEPblYc3jykdp5z8wDP72Z0cCRTh7KPeo8yRe7D2Qpz_KUgPxh2uHqUdQ2F7HLfN1PIVoO9BK7bPYx7BKEmqahEy2ji7jGl1CBjFrg6SBQQmqr5mxiouiiCSLTecUT - w2s9XxDj1arBeGA0xX0T6gZn9zueU8HaYa8IV_l6PFjNZVe7Cd6kr9DRG4zRJ_n4K2tqNQouUvTCAvEc461DX39godP_dEP1XjS535ZYi8UmnFMAhsqDFXEJ9Ib9QEs1aoew7pDPhPRqwgPKnMm5TkNrzHXMt2Ng0HsoLcixfLWXG_oxzfDrZ - C9WlmN47Z0IoNrt9Wmd0iYDo_AU4KTfV_LXG7vdULCXMMpE9hulQBNNrmJCR5bC00RXm62Sw - D_oe1PcTfpWehBmlHMj6AWfo36pfHyeI43Dcxlu3Ryvc8JLCM5DpDla0DzjZMgVnr_sBUMvT7_QYXh1SNUyt - PDeKEqiXYV8pc6meDDWXSGTHEdxpkFvOqYV82A3C6BYcU1RO2aJY4rpxQO - y6 / download [ following ] -- 2019 - 12 - 12 16 : 45 : 19 -- https : // public . boxcloud . com / d / 1 / b1 ! HROZcLQR4SR8wMrrjExg1KUpkObpwaMUNr5KN5DXu3Zn3FrctuyWJpB8m11X3wFIGVNxY8WZqjNGudP - Nw - ajzZIz - 1 kTO7dtxXAzVUs_8gVstlxRn0dh7tofcn9SEpe0L9Bjohw_8kCgdAEJCWUmqOqODDDO0MJ48xbHi8Xs8a_R6WfralHUXnJvZaj1JAOEuvr1U8Vtsl2y2AzzKIuUspRnN0vK1_lro9z34Ydrjhp7_6O71TKRtbNnREVwJUrj6P3PQ7IQBUmOr9t49TI9I8wLHpTGajKNDc5bweuFCjggl_gfDfTqGjeVk8YtGM3j8sl8qzblSahy8lWAhOLwCiGgwcsw1W - cPKMZssb2Ij5Bq5WCagQM_K5xRhWLPYd_ - rn90p6kVHAX323pRRFcYyotJPAZ8UXNmmQYa6_CMOhcH5agYtE4jEb6vKNQUUezYHEGkv8ghoM9LFjd6Wzc30c66blugFTD0hpVQcPQdLiA4gquc_BrpKLsfQ8B6MPfndlhEIE2uZpXHtE2HIEsiBpLWbUTOXV2vK6xtUVsVFPeq9xQyGGe3_5TFarqqNzGIwO68uGfZ8RneCScuQVbnDym7zzZTCja7jcrHVP5Lj3gOcG2SeK8l4srpLZsfyBBIPrZkHaZ4Zmlan9PK7YEFVssJU5Ul - _k8whB67050b1 - dS6aLZ2v9_rnH1h2sk_ymTKI_8a - PKAvECCvNy8AxABvk6UD4A_FEWjLYhonYYogAc73_2EvNT8gq9dSKIr3n5q2kj2vizM0frtoEHHSa1e89pLYsyGWOp5oeX9gGXMW9o0iyiqXVdSgEOrYL - PX4rETSJs4UCpupzHGanKhkIvBwmzyEPblYc3jykdp5z8wDP72Z0cCRTh7KPeo8yRe7D2Qpz_KUgPxh2uHqUdQ2F7HLfN1PIVoO9BK7bPYx7BKEmqahEy2ji7jGl1CBjFrg6SBQQmqr5mxiouiiCSLTecUT - w2s9XxDj1arBeGA0xX0T6gZn9zueU8HaYa8IV_l6PFjNZVe7Cd6kr9DRG4zRJ_n4K2tqNQouUvTCAvEc461DX39godP_dEP1XjS535ZYi8UmnFMAhsqDFXEJ9Ib9QEs1aoew7pDPhPRqwgPKnMm5TkNrzHXMt2Ng0HsoLcixfLWXG_oxzfDrZ - C9WlmN47Z0IoNrt9Wmd0iYDo_AU4KTfV_LXG7vdULCXMMpE9hulQBNNrmJCR5bC00RXm62Sw - D_oe1PcTfpWehBmlHMj6AWfo36pfHyeI43Dcxlu3Ryvc8JLCM5DpDla0DzjZMgVnr_sBUMvT7_QYXh1SNUyt - PDeKEqiXYV8pc6meDDWXSGTHEdxpkFvOqYV82A3C6BYcU1RO2aJY4rpxQO - y6 / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 552 [ text/plain ] Saving to : \u2018 checksums . txt \u2019 checksums . txt 100 %[ ===================> ] 552 -- . - KB / s in 0 s 2019 - 12 - 12 16 : 45 : 19 ( 146 MB / s ) - \u2018 checksums . txt \u2019 saved [ 552/552 ] -- 2019 - 12 - 12 16 : 45 : 21 -- https : // caltech . box . com / shared / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz [ following ] -- 2019 - 12 - 12 16 : 45 : 21 -- https : // caltech . box . com / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz [ following ] -- 2019 - 12 - 12 16 : 45 : 21 -- https : // caltech . app . box . com / public / static / nvzqphhklk1yx938l6omursw7sr68y43 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! jD0baoEwhAs7CayO95UyhSNszeFfA_EqNIM7jM - ZixrgAG6UaRFMLlmYPaJ8YVAXdFfxrrHnQc0CJHNUY_6RT3QrlkhFFuq92WCeuhmH1Ltvb75ni - GO - K2Ltbni0HMOij3IAWXLEz4IqZLNeMjY1Ln2JyW8cLN_63RoCKDAkqv8okgYR_sB92M6_v2_Cuj3UvfzH4u8H6DKzeFch8_SfF7gubKOAFFmgzG1X4z6tXQBAgf6ezIfkS - K20C3Uw5PK - wxFvUVLIHi_xm9W4FaubPBkxbVlBUqB0WFhMLOlKty3KcLKptS67fy8xMpYQGVmhAUCUzkmOK33rKOBSdePbM9XeicLsreHA1xq41eYCmE_S_3 - 7 YOMFMoS - 3 wjEjsatR - yL_wlHR7Xop2I4Qr9 - 1 JEpBye_C8TtUjLeC7OPzvxvnZJ4r4nWtY1qH9dTJODRf2B9twvXLoE8HE - MR3noULJvEArKEn5d2dIDk1wSpNnHPkKhOhNTp1RP8fjTQXBtUs8vbymUAhDX2lhq0pR4mjbR9Rwphvvom0hpeeuBFEI1R - Wn4M7GnAzdf0cqNwTf2OwuMIq5spmd2DAVRe7QHSSiHEkpd4BDlXg2JTuKIhX4l4c1naAM_3g1zD9EdBWN3pdHamjn3G5Gtk3KuIoMKuOy_fnvIo - nKnrO3DE4J0bgim - GdTQHRbsxBGu2MRU9AVVfgw_yaf2c6Hd_NkAd0GFFJgyEelWVfLYu214F0njqpRY6n3hqDRC_XRSRPbEH7 - Xv0hEBYZzZqH31DKc3jb2sTPsG - jaF4Sv7WR8qOtjD2Xk6uv - 1 MWXefO - pw9GsLmgNGhWX85gmEbAHIxqKA_oJq9pSi3bFNbpWrimvxFGIEcr42b6Utg1oUP35pL5_T8_04SkIhxDihD9gxe6EoYmhpM2kzbcUyViEnG_RUBIFCj7kDaQb71ODQFYPxTXMyb3c_PipXe_GGm_JtZCp_xJeOOZZAs4QGbRXNaznpTzzyA3r66sSycCpbl18rkQQybOoHo8XNhkdzCt - cB3Dw_dkN_YJQ8_BkUIiiij3yETRPEO - NTvHNX_pqWWMRgxNb__RGzoMiANsGyqFlFZmQZnS03gEx6zwa7LhPsTxI6797c1ichD8uXRIw0lOR9HlolEEkVJFHEL14lEWMcBWzrfLnLIa - fL2Gyun2kj0C2J8uk2m_bXr0_D5jsiCrjxaiG5_DojxujNx75YVTjUeypD - xp0UATFQqc6VNjzckSGxZsA178jaS8 - g6OZXglcWCl9EzS3AMxN6f39CbVsdHgKGgTUHSozqJLwyBCKLJfcznPEtxwVsUcn4KvdOtK6sJcmC4ibWF0S2O3gRVMXo9dUeLqFBzUtQMjcNH_EeSfxEGFiuR30C1ZM70v9T6GUD1N0PHhug__2F - DsN57m2ozwjTihQ .. / download [ following ] -- 2019 - 12 - 12 16 : 45 : 22 -- https : // public . boxcloud . com / d / 1 / b1 ! jD0baoEwhAs7CayO95UyhSNszeFfA_EqNIM7jM - ZixrgAG6UaRFMLlmYPaJ8YVAXdFfxrrHnQc0CJHNUY_6RT3QrlkhFFuq92WCeuhmH1Ltvb75ni - GO - K2Ltbni0HMOij3IAWXLEz4IqZLNeMjY1Ln2JyW8cLN_63RoCKDAkqv8okgYR_sB92M6_v2_Cuj3UvfzH4u8H6DKzeFch8_SfF7gubKOAFFmgzG1X4z6tXQBAgf6ezIfkS - K20C3Uw5PK - wxFvUVLIHi_xm9W4FaubPBkxbVlBUqB0WFhMLOlKty3KcLKptS67fy8xMpYQGVmhAUCUzkmOK33rKOBSdePbM9XeicLsreHA1xq41eYCmE_S_3 - 7 YOMFMoS - 3 wjEjsatR - yL_wlHR7Xop2I4Qr9 - 1 JEpBye_C8TtUjLeC7OPzvxvnZJ4r4nWtY1qH9dTJODRf2B9twvXLoE8HE - MR3noULJvEArKEn5d2dIDk1wSpNnHPkKhOhNTp1RP8fjTQXBtUs8vbymUAhDX2lhq0pR4mjbR9Rwphvvom0hpeeuBFEI1R - Wn4M7GnAzdf0cqNwTf2OwuMIq5spmd2DAVRe7QHSSiHEkpd4BDlXg2JTuKIhX4l4c1naAM_3g1zD9EdBWN3pdHamjn3G5Gtk3KuIoMKuOy_fnvIo - nKnrO3DE4J0bgim - GdTQHRbsxBGu2MRU9AVVfgw_yaf2c6Hd_NkAd0GFFJgyEelWVfLYu214F0njqpRY6n3hqDRC_XRSRPbEH7 - Xv0hEBYZzZqH31DKc3jb2sTPsG - jaF4Sv7WR8qOtjD2Xk6uv - 1 MWXefO - pw9GsLmgNGhWX85gmEbAHIxqKA_oJq9pSi3bFNbpWrimvxFGIEcr42b6Utg1oUP35pL5_T8_04SkIhxDihD9gxe6EoYmhpM2kzbcUyViEnG_RUBIFCj7kDaQb71ODQFYPxTXMyb3c_PipXe_GGm_JtZCp_xJeOOZZAs4QGbRXNaznpTzzyA3r66sSycCpbl18rkQQybOoHo8XNhkdzCt - cB3Dw_dkN_YJQ8_BkUIiiij3yETRPEO - NTvHNX_pqWWMRgxNb__RGzoMiANsGyqFlFZmQZnS03gEx6zwa7LhPsTxI6797c1ichD8uXRIw0lOR9HlolEEkVJFHEL14lEWMcBWzrfLnLIa - fL2Gyun2kj0C2J8uk2m_bXr0_D5jsiCrjxaiG5_DojxujNx75YVTjUeypD - xp0UATFQqc6VNjzckSGxZsA178jaS8 - g6OZXglcWCl9EzS3AMxN6f39CbVsdHgKGgTUHSozqJLwyBCKLJfcznPEtxwVsUcn4KvdOtK6sJcmC4ibWF0S2O3gRVMXo9dUeLqFBzUtQMjcNH_EeSfxEGFiuR30C1ZM70v9T6GUD1N0PHhug__2F - DsN57m2ozwjTihQ .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 4547896018 ( 4.2 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L001_R1_001 . fastq . gz \u2019 SRR6470906_S1_L001_ 100 %[ ===================> ] 4.24 G 15.9 MB / s in 4 m 38 s 2019 - 12 - 12 16 : 50 : 01 ( 15.6 MB / s ) - \u2018 SRR6470906_S1_L001_R1_001 . fastq . gz \u2019 saved [ 4547896018/4547896018 ] -- 2019 - 12 - 12 16 : 50 : 03 -- https : // caltech . box . com / shared / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz [ following ] -- 2019 - 12 - 12 16 : 50 : 03 -- https : // caltech . box . com / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz [ following ] -- 2019 - 12 - 12 16 : 50 : 04 -- https : // caltech . app . box . com / public / static / 63 fh2xa5t82x7s74rqa0e2u2ur59y5ox . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! IQRKpPtIYqhfyougjfYK79FUEIhKonLIzymhygPMsLCU9NejeJmaqCEIpnArmK_HhcOkAKi9KfMn8QjoRS1oz9JgPvc4dIP1jmr6XH6yHNoPtUOu - zH7QjxeAfr_aSbUESOQMljUQ - QwuQtkB - 2 ZuE24H58iNYURr0L1OAB6Wd_7DPeoqPQcuY9xlI4YESc8jmZZFcVKen7vSyx5p9vJY2SuzWrbt8JTiJ5By7APStib5HVw6vFbitaxU - ibdN4uowrGgfzDRSLmyIA6CwaePNehpPCHjfQfF0rieN19M3pxAUG8vEgsvG2VrMUCJ1aZMs1sTr9c6y9m1AOIDAUJheqfqLvfhbs5tsGskwVQvEbOn3cj8oTz2sxSOr01axHwofC7jepknJHS - quJVGFUgp0DfAYIbvTYQ5uQfC0iXxcn4bnPLkYBRHh29tPSPGN2unBDD2TAludj6xhXeeX47LNGa62JkuUru6DdlpLdZuJPpnt3VoowVE8OBpStlyt2p7rEdZUfPPAt9_AW16DZYScA7e3DR7daODJrN9n85lQTKT279M2XeeomRn7s84ZfqxUXshh9kHBx06NqmTM - IOlsFfN7epF27AwfQGAu1tAwCkNrVDhEKWZnllMCjUAMhamqDn_CkGdlrlSIT0gYeGFwttAywRbXbXv - FOlOx6sWhnUWSSxQy6FeG8dgsbfGyLeB0MAC - I2o_sj_2bLgD0gb3b9zatzPcuIm4CjvYPzEdYbI5m - AfGMfhRfTWJchurBxbadhrEG77NRjILyQsmcm4J7VlrUrf1nv8vUADLRbHYsclkbYKKuvLz6o34J9bspPNatCrum06h750_YyDsCEC2D27iap1k9r_aPkzAba1yDlWAu - oq6yPMN5ROtoCqnGTJD2Pl7xzrxFUjMaVF31lHqodRQXHem9VctLmeZthACgi8GNZJr5Jvil9zXtCTHX39xcJF0uBOvrC7O5 - 4 dDj5qB0jSl0DsAWPLhHG1v0s1YdzuySAvt - DSyfrqeuRD9S9V1eUxiC_wiP2IUNGJIi3Ve3aiHA4t8D4iC4eSzkkwKSAEtL60I6KNg4lZdrFd - i2oVuvkfZC0IlV7zVaCP3cgIu851WRyDx7gYy4CXcOdjvfgbHmKXoHNroLF1dIbV5Edht3MN5cfRO7T8TVBPv15Fq4TPxBnJa5zEtIF_UoyqczbQvFQH0sTbDyAHeW - N0Y5 - LkA - jAdO0oE - B3vaPq7KIZK - 6 w09pFXiQ_5Sq - 9 WUy_yGEfOGCDoRwybfzbtWniQcVTpoQatU1GGlyk2EOmPF8iU6WDdDIPL5WpOdba8w - 48 w6_L2D - SSNYFFmLkN6LhvZ12_1Dt__azAM85EBahsFiVUIWSrn7OIPwWBiuLXc_XqEB0e6IbF7FZM57YeArhrukqmuK_yk5u2vKC8S9ofQ .. / download [ following ] -- 2019 - 12 - 12 16 : 50 : 04 -- https : // public . boxcloud . com / d / 1 / b1 ! IQRKpPtIYqhfyougjfYK79FUEIhKonLIzymhygPMsLCU9NejeJmaqCEIpnArmK_HhcOkAKi9KfMn8QjoRS1oz9JgPvc4dIP1jmr6XH6yHNoPtUOu - zH7QjxeAfr_aSbUESOQMljUQ - QwuQtkB - 2 ZuE24H58iNYURr0L1OAB6Wd_7DPeoqPQcuY9xlI4YESc8jmZZFcVKen7vSyx5p9vJY2SuzWrbt8JTiJ5By7APStib5HVw6vFbitaxU - ibdN4uowrGgfzDRSLmyIA6CwaePNehpPCHjfQfF0rieN19M3pxAUG8vEgsvG2VrMUCJ1aZMs1sTr9c6y9m1AOIDAUJheqfqLvfhbs5tsGskwVQvEbOn3cj8oTz2sxSOr01axHwofC7jepknJHS - quJVGFUgp0DfAYIbvTYQ5uQfC0iXxcn4bnPLkYBRHh29tPSPGN2unBDD2TAludj6xhXeeX47LNGa62JkuUru6DdlpLdZuJPpnt3VoowVE8OBpStlyt2p7rEdZUfPPAt9_AW16DZYScA7e3DR7daODJrN9n85lQTKT279M2XeeomRn7s84ZfqxUXshh9kHBx06NqmTM - IOlsFfN7epF27AwfQGAu1tAwCkNrVDhEKWZnllMCjUAMhamqDn_CkGdlrlSIT0gYeGFwttAywRbXbXv - FOlOx6sWhnUWSSxQy6FeG8dgsbfGyLeB0MAC - I2o_sj_2bLgD0gb3b9zatzPcuIm4CjvYPzEdYbI5m - AfGMfhRfTWJchurBxbadhrEG77NRjILyQsmcm4J7VlrUrf1nv8vUADLRbHYsclkbYKKuvLz6o34J9bspPNatCrum06h750_YyDsCEC2D27iap1k9r_aPkzAba1yDlWAu - oq6yPMN5ROtoCqnGTJD2Pl7xzrxFUjMaVF31lHqodRQXHem9VctLmeZthACgi8GNZJr5Jvil9zXtCTHX39xcJF0uBOvrC7O5 - 4 dDj5qB0jSl0DsAWPLhHG1v0s1YdzuySAvt - DSyfrqeuRD9S9V1eUxiC_wiP2IUNGJIi3Ve3aiHA4t8D4iC4eSzkkwKSAEtL60I6KNg4lZdrFd - i2oVuvkfZC0IlV7zVaCP3cgIu851WRyDx7gYy4CXcOdjvfgbHmKXoHNroLF1dIbV5Edht3MN5cfRO7T8TVBPv15Fq4TPxBnJa5zEtIF_UoyqczbQvFQH0sTbDyAHeW - N0Y5 - LkA - jAdO0oE - B3vaPq7KIZK - 6 w09pFXiQ_5Sq - 9 WUy_yGEfOGCDoRwybfzbtWniQcVTpoQatU1GGlyk2EOmPF8iU6WDdDIPL5WpOdba8w - 48 w6_L2D - SSNYFFmLkN6LhvZ12_1Dt__azAM85EBahsFiVUIWSrn7OIPwWBiuLXc_XqEB0e6IbF7FZM57YeArhrukqmuK_yk5u2vKC8S9ofQ .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 8051434084 ( 7.5 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L001_R2_001 . fastq . gz \u2019 SRR6470906_S1_L001_ 100 %[ ===================> ] 7.50 G 13.8 MB / s in 9 m 14 s 2019 - 12 - 12 16 : 59 : 19 ( 13.9 MB / s ) - \u2018 SRR6470906_S1_L001_R2_001 . fastq . gz \u2019 saved [ 8051434084/8051434084 ] -- 2019 - 12 - 12 16 : 59 : 21 -- https : // caltech . box . com / shared / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz [ following ] -- 2019 - 12 - 12 16 : 59 : 22 -- https : // caltech . box . com / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz [ following ] -- 2019 - 12 - 12 16 : 59 : 22 -- https : // caltech . app . box . com / public / static / zqi3durukillaw1pbns1kd1lowyfg5qk . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! GOJlDv0dHx7IF1T0A37vi_RMeDchTdIRIbmHryH43jHU4uSYmqsYBNq2UVYgHo4nHavUlf9BczDrOJo9v7aZ2ApTifBKTx0xE9QVSAf2jAhqtbFGufK9QhmNpu1yVhsEZdF1WqrxgI_FkGwLqQ3Bx8ZuFH2o4DAQc4MLS0HnUhHDiCGUoV6Z8C - kAb0f_2YEcQgSfjaVsBNTXBzrwnEYPjzqDs0eesG3fQN_99O - tTt6MKRSWZHkmHiCSEA8nToRCPoF3c72gmxAduzKpZvudzj_avmyH5EwdYjOOy63k61fr3eJVQdDivNaTm88_9NKbzj2 - HvlX9MV2a7FmFFAmkKtvZtoc - JdzIXXGb241Vs5ewwhOIQX3pikJxvHC_Wo1SUsWHyf0m35348Z0ef3VS_9rHDVGvTdtG - waRcSOfAqpWmxaRKs_Qg7IYVYEvAfJP3C6hFT3QglnrTSkXc2FHwy4uDq76RonZNi033xdhlPIbFUTXpEieUVUYjpS6YiwfxvSX1K9C3L5J71C02Vtt_3M3It4uTeKdzxzpsUhKdIMyAKRhE1ZLiLbEStihDg33gGEzz65ZP6tWUQPwUYomj2N9HL_wZ8 - 9 bD7CxDVlA8sQ6yc0HCO2P9UUTfaJuY_q9lFo2Iz - e4MxOLBT9SnRirzGAqmxi0lq4xArN5euZ4ltr - yA - VXiR3 - ai3hdxXl23sYz - 5 bz6k5629zb87fCDwb4MMIuMV0pw00_N7RvS6G9t6knEAZAiJZshI5p21Z0nogmPQcj9LodjnhGZXkpaUS_J0eP3LxK8UeUs55y9H07rYXdQlBZL27XBNP2vRhCChImZsoEzQAw5Yqq4vpR064mSj00Luulo - tF62ihTToc4icGQmqNPfagFkOxkq6YvjudgQybkL7dI - l7nXzcQ2rld_jU6svLY5e3v - kB_oRMIxdPwCd3lwNr6D7I0M21jTngGVFhkQb132dsjb9zSge50uekCYSOKb77Rw1JztzQxurG3LH - t85dnfA - 26 xeHV - EL7Oi3350GwNlqV74yGN540ZeLKYaFCdieR_tpoJFz0NyxFsaAQE2I2BMoyeVqKIiEP4_eCn0U2ihA7WG01bfXMCYHhtLw4DAoOtCJzUfweCQw9m2VZLaiMXtY9ymTFVthvahyBWVH4njLCNVKwLZEk52aqdsXsv7yU2KpaE4Mg7MtEJPDatPjxIHoZLXEuNSSRMygmrC0GTsSAvKfk1zJVZYh_tHsHk_yBaXi6TIZDj9b4CcQSwiF3j6kS7 -- 6 WDivkAFx_Sut55iOQoEWoJAvrChKSOtp2F3d0_YBbKlc9M_5Y1L4Yg9tGRVtTop6cCyysoNbJB5EKVKX9MtcxJdfl9aA_14uz_ - 59 i22FiOYpHTFAUw4iYWNmpk5sWu6Uu_HoKag498Y5xaMvmG5fm9n - g .. / download [ following ] -- 2019 - 12 - 12 16 : 59 : 23 -- https : // public . boxcloud . com / d / 1 / b1 ! GOJlDv0dHx7IF1T0A37vi_RMeDchTdIRIbmHryH43jHU4uSYmqsYBNq2UVYgHo4nHavUlf9BczDrOJo9v7aZ2ApTifBKTx0xE9QVSAf2jAhqtbFGufK9QhmNpu1yVhsEZdF1WqrxgI_FkGwLqQ3Bx8ZuFH2o4DAQc4MLS0HnUhHDiCGUoV6Z8C - kAb0f_2YEcQgSfjaVsBNTXBzrwnEYPjzqDs0eesG3fQN_99O - tTt6MKRSWZHkmHiCSEA8nToRCPoF3c72gmxAduzKpZvudzj_avmyH5EwdYjOOy63k61fr3eJVQdDivNaTm88_9NKbzj2 - HvlX9MV2a7FmFFAmkKtvZtoc - JdzIXXGb241Vs5ewwhOIQX3pikJxvHC_Wo1SUsWHyf0m35348Z0ef3VS_9rHDVGvTdtG - waRcSOfAqpWmxaRKs_Qg7IYVYEvAfJP3C6hFT3QglnrTSkXc2FHwy4uDq76RonZNi033xdhlPIbFUTXpEieUVUYjpS6YiwfxvSX1K9C3L5J71C02Vtt_3M3It4uTeKdzxzpsUhKdIMyAKRhE1ZLiLbEStihDg33gGEzz65ZP6tWUQPwUYomj2N9HL_wZ8 - 9 bD7CxDVlA8sQ6yc0HCO2P9UUTfaJuY_q9lFo2Iz - e4MxOLBT9SnRirzGAqmxi0lq4xArN5euZ4ltr - yA - VXiR3 - ai3hdxXl23sYz - 5 bz6k5629zb87fCDwb4MMIuMV0pw00_N7RvS6G9t6knEAZAiJZshI5p21Z0nogmPQcj9LodjnhGZXkpaUS_J0eP3LxK8UeUs55y9H07rYXdQlBZL27XBNP2vRhCChImZsoEzQAw5Yqq4vpR064mSj00Luulo - tF62ihTToc4icGQmqNPfagFkOxkq6YvjudgQybkL7dI - l7nXzcQ2rld_jU6svLY5e3v - kB_oRMIxdPwCd3lwNr6D7I0M21jTngGVFhkQb132dsjb9zSge50uekCYSOKb77Rw1JztzQxurG3LH - t85dnfA - 26 xeHV - EL7Oi3350GwNlqV74yGN540ZeLKYaFCdieR_tpoJFz0NyxFsaAQE2I2BMoyeVqKIiEP4_eCn0U2ihA7WG01bfXMCYHhtLw4DAoOtCJzUfweCQw9m2VZLaiMXtY9ymTFVthvahyBWVH4njLCNVKwLZEk52aqdsXsv7yU2KpaE4Mg7MtEJPDatPjxIHoZLXEuNSSRMygmrC0GTsSAvKfk1zJVZYh_tHsHk_yBaXi6TIZDj9b4CcQSwiF3j6kS7 -- 6 WDivkAFx_Sut55iOQoEWoJAvrChKSOtp2F3d0_YBbKlc9M_5Y1L4Yg9tGRVtTop6cCyysoNbJB5EKVKX9MtcxJdfl9aA_14uz_ - 59 i22FiOYpHTFAUw4iYWNmpk5sWu6Uu_HoKag498Y5xaMvmG5fm9n - g .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 3473816553 ( 3.2 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L002_R1_001 . fastq . gz \u2019 SRR6470906_S1_L002_ 100 %[ ===================> ] 3.23 G 14.8 MB / s in 3 m 50 s 2019 - 12 - 12 17 : 03 : 13 ( 14.4 MB / s ) - \u2018 SRR6470906_S1_L002_R1_001 . fastq . gz \u2019 saved [ 3473816553/3473816553 ] -- 2019 - 12 - 12 17 : 03 : 16 -- https : // caltech . box . com / shared / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz [ following ] -- 2019 - 12 - 12 17 : 03 : 17 -- https : // caltech . box . com / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz [ following ] -- 2019 - 12 - 12 17 : 03 : 17 -- https : // caltech . app . box . com / public / static / i56qojfz41ns1kw9z86sla0vawsch96t . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! R6y7a5bIJuqYMSWPoHnEy - l6dd72cFwhiG5GMUeOmCo3_B5BccUZA - SpS3dRR8Zekhj0VXOjdARtBlPqDNC8Y4ol4fYDVjJhh9XFkGLQ - 1 Jzjr3kSxEWbjPkbI_6gDfAmHJvxZifs5Dhuy7svYvomAgSezzR6cFIBwQounJ6mHB5S68EQy6Mh4xs_aTunCVHqDjaTn1GPZfoeDQ297sblMskuI2Aq3mdVCwkrg5suolP7FHHdz7YwoARSDx3mE3o1IdwntBZGueppadjfdydZR_icMVAywN3zE_AFCNKRAPEVqbEpEAe9uQrrO9VtmgC9hDEo6wzObx1yIpQ3YLerB6i8tVXubO9mWHj6D - ofNRaDNr0TCMkwBxtCD8smWDiDw3avJOKy1YcqOco5PgP0YnjYFuuPxQlNRD - jTuXZNmallPtZDteXuTv0kFCV2K0iWZwHgpyqZBmLoQk5OiFBjLOZ28pz0YenhK5k60bRxKksr6MD6PnTWNzpgIXGEfPrrtz0V2D7i_b - 4 xvNep23Ws0ExS6Yrb0gYDDNi8ewWvDgunmmvZxvW8UfqAKSFg4FNNu3_9wSgsutfidU - 2 Q5Qgd3Ozx9WU7czC8Cf_PJWlD6pJKnXVKGVrYulXQs2l6bYFOncJWYxGJiojwaL - rFDC45EupjnosxnacedbsdT1qmO3cY8hwYvceRzZ9_HZErKGPnELgPgUHijFcd2z7rvxmpztQePEocCwaucO3byUJ_zkjfeNWnsmHLn8s1oFF6gjA1 - cQKSOggR7hcqWwsFgtFdBbeOy9TAAnYpiMhtH2s_KnoRiA_aJDOJRT0huK3gB - YT - 4 U0EsBGLkYw6np7txv6OXT7TDti98EE4XvQGFeu9 - pSGFSvUirbt02uL0RJtQX77TEZH9 - _18bfH8YlatHgfuc1fqo - pDoOkccIBekbTTCz5LMT - zhBnb8_GgyVTJlBsxpeP46QgiaAqMyNCHC_sXzdYBPeaQQtVOOSp1TSdGIbcqKxzgn5ToELW6q623X5BgT1 - P - 0E2 Rqyn90o5EyCjtaiUOW6maWcr - jGiydXWMcypp4sE - 5 OyT8hWT4Ipu1UVVFi0U1QtAfKOZ_zQD5P1OY3RRTQdqVUGUksu42t4KPJneopa73QgMXTsSdXl2RnSG2yFuqbHxFQT3SwOrz1gPaq9JPGv0PFqMU - 7 QNThEwiWTo7UTNrR - FG - xEFPC8jbqNaSX7lkrstLXkFbGjy4sTHqgpn2RSVBfc340wKvMzRraWtoQSer990foD -- oyoCdm7bz8dWbKDCSN7_zmiu0CQShK6M4EWstjyfBZdN8F3BKojjcIba9EwBvclmH_u_MBb6TRbDfTnbCbljYi43vXzFwb_uPYLCdiVO6lbr3t6R1u_LEo5OuEAqWXAkTbqgEzBs27uhPS - IWvTruGP1FQ .. / download [ following ] -- 2019 - 12 - 12 17 : 03 : 18 -- https : // public . boxcloud . com / d / 1 / b1 ! R6y7a5bIJuqYMSWPoHnEy - l6dd72cFwhiG5GMUeOmCo3_B5BccUZA - SpS3dRR8Zekhj0VXOjdARtBlPqDNC8Y4ol4fYDVjJhh9XFkGLQ - 1 Jzjr3kSxEWbjPkbI_6gDfAmHJvxZifs5Dhuy7svYvomAgSezzR6cFIBwQounJ6mHB5S68EQy6Mh4xs_aTunCVHqDjaTn1GPZfoeDQ297sblMskuI2Aq3mdVCwkrg5suolP7FHHdz7YwoARSDx3mE3o1IdwntBZGueppadjfdydZR_icMVAywN3zE_AFCNKRAPEVqbEpEAe9uQrrO9VtmgC9hDEo6wzObx1yIpQ3YLerB6i8tVXubO9mWHj6D - ofNRaDNr0TCMkwBxtCD8smWDiDw3avJOKy1YcqOco5PgP0YnjYFuuPxQlNRD - jTuXZNmallPtZDteXuTv0kFCV2K0iWZwHgpyqZBmLoQk5OiFBjLOZ28pz0YenhK5k60bRxKksr6MD6PnTWNzpgIXGEfPrrtz0V2D7i_b - 4 xvNep23Ws0ExS6Yrb0gYDDNi8ewWvDgunmmvZxvW8UfqAKSFg4FNNu3_9wSgsutfidU - 2 Q5Qgd3Ozx9WU7czC8Cf_PJWlD6pJKnXVKGVrYulXQs2l6bYFOncJWYxGJiojwaL - rFDC45EupjnosxnacedbsdT1qmO3cY8hwYvceRzZ9_HZErKGPnELgPgUHijFcd2z7rvxmpztQePEocCwaucO3byUJ_zkjfeNWnsmHLn8s1oFF6gjA1 - cQKSOggR7hcqWwsFgtFdBbeOy9TAAnYpiMhtH2s_KnoRiA_aJDOJRT0huK3gB - YT - 4 U0EsBGLkYw6np7txv6OXT7TDti98EE4XvQGFeu9 - pSGFSvUirbt02uL0RJtQX77TEZH9 - _18bfH8YlatHgfuc1fqo - pDoOkccIBekbTTCz5LMT - zhBnb8_GgyVTJlBsxpeP46QgiaAqMyNCHC_sXzdYBPeaQQtVOOSp1TSdGIbcqKxzgn5ToELW6q623X5BgT1 - P - 0E2 Rqyn90o5EyCjtaiUOW6maWcr - jGiydXWMcypp4sE - 5 OyT8hWT4Ipu1UVVFi0U1QtAfKOZ_zQD5P1OY3RRTQdqVUGUksu42t4KPJneopa73QgMXTsSdXl2RnSG2yFuqbHxFQT3SwOrz1gPaq9JPGv0PFqMU - 7 QNThEwiWTo7UTNrR - FG - xEFPC8jbqNaSX7lkrstLXkFbGjy4sTHqgpn2RSVBfc340wKvMzRraWtoQSer990foD -- oyoCdm7bz8dWbKDCSN7_zmiu0CQShK6M4EWstjyfBZdN8F3BKojjcIba9EwBvclmH_u_MBb6TRbDfTnbCbljYi43vXzFwb_uPYLCdiVO6lbr3t6R1u_LEo5OuEAqWXAkTbqgEzBs27uhPS - IWvTruGP1FQ .. / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 6150590468 ( 5.7 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470906_S1_L002_R2_001 . fastq . gz \u2019 SRR6470906_S1_L002_ 100 %[ ===================> ] 5.73 G 16.0 MB / s in 6 m 17 s 2019 - 12 - 12 17 : 09 : 36 ( 15.6 MB / s ) - \u2018 SRR6470906_S1_L002_R2_001 . fastq . gz \u2019 saved [ 6150590468/6150590468 ] -- 2019 - 12 - 12 17 : 09 : 38 -- https : // caltech . box . com / shared / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz [ following ] -- 2019 - 12 - 12 17 : 09 : 38 -- https : // caltech . box . com / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz [ following ] -- 2019 - 12 - 12 17 : 09 : 39 -- https : // caltech . app . box . com / public / static / vrditbbk38tw3f61fwpg504vcc5x09ci . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! mEw7jD3SYx2JkfpPGUANWAkasmzfYG_4IsWs_1IIcIove2w1TUwrVVpSqlNM8xPs - NiiaFcTJOO191k11vZNt5UaleiAtPOJbdCvrwABOUgpE17vVBhKIsjOpp_DmmYeivZaVBJMh_GQGiVKzkhVwTkbzm5s - EZunbREKZsvTfjrzWTUv_xaHoT5deMNloKiCw -- jQoahlEPn4Ng3uOSpHTlGfjcx - LcwzZS9mxrkfsW7PJGpaTn3PiDw - u6PuI4RuN9BmviJz0fqJs2vLOdKuGHOUNnV3p3DgnHX - NxFtYxBXf2m_xC - iYN3hXPbQF1UvruvypWCzIKLMzkyJRGTlgMENXff9YtLB04B4bATBJw9xO8YLEA1UaQ - 2 DYdi4pRY5tSM_u_KwfYhTsBj0PzUOjSUe3plTIOPIeriZAB02SdU2mGMuQOQrzNy0FXgFYI3nMmUPdzTGYA4x5vt6dP99T9wwyRromJMLtfY - sjiK3j_WgUjxvP6Wpm7IM8vGzls5ZrJ85LktkQDyU7sOZLojFgjITbaPSNbJDtcaiI23iUNeJELerAM - opkV8CbgV4ohHWrgQIUyKm45mu0K8kbGjo6Ve40mgfDb1CdsX7zBWPEDfd9wwXLq3c3C1DUSuW0_9kvZSreQ6F - lNaGwLSD62Y4ruh7mRwZMHr90Y3nY0JnsXbaZMDXCpDLRuCMu_oTOR2LRY3fU2Ez6s0m4gtlgRFzsvwtqXAHCHO8Rj4kXq0HrpYljhxiF1c8q - PZqvEPcf5DmnT4zpEr9KG5gpqRlCwwfJWl1dJ - 3 U4SxvXATHQtwqM1LLLO2hDv8GmuQ05tERAlWHRrx0zOT9cmjSAs63b - 6 BfApttPjr55oxKp59ouozkWBbNllndr_qnML8faaoak3Yy4wq8NfWJeRIejfTEaNg_Gv5trktY99C4sPEcxHjeRcY6HWhR0Z1YhpIhcynayVMEAhgUGNRbtEhLF - hx6ZqJUKv8gBKmxmKwZoNjmoEJiOTDULD9tl3cp8Tlj9FjraA7Fl3BCVWo4o56fCCgqs8h9txsYaYbHcyLMtA9LdWwpgLf9EcOEObmSMsi9Dt - ORHTpkMa7jdiBOF1uuczrmK58fj_Mi46IdNjiLB3_595 - BK2ClzeWsu7Os - RznkS - BNc1gWFgB5T_1wsxOTpJ3X0RKG3LHRQHgd2yGpXqStAS_j7Z1ze0ooWMO1vFbwZdca05sq - DnIvNy6mtY4Jt4DKconl562MC5FEI4QKtW_FSZPFbWjC7Nioo9CTYJbRbPM6ADHvpjL4RrW2T0MumHF9V1TgF7wDLo79i9N - 3 BBxvWFruNTi - iMJ30zvvQ0k2Xd1wrbeSflfhS4mtZbvf6nOJZr5COaSsqcrT8BzViSwr09bocU54hRTB_5MFg0NilGApeu3eL20kBxNsf_zjehrVU . / download [ following ] -- 2019 - 12 - 12 17 : 09 : 39 -- https : // public . boxcloud . com / d / 1 / b1 ! mEw7jD3SYx2JkfpPGUANWAkasmzfYG_4IsWs_1IIcIove2w1TUwrVVpSqlNM8xPs - NiiaFcTJOO191k11vZNt5UaleiAtPOJbdCvrwABOUgpE17vVBhKIsjOpp_DmmYeivZaVBJMh_GQGiVKzkhVwTkbzm5s - EZunbREKZsvTfjrzWTUv_xaHoT5deMNloKiCw -- jQoahlEPn4Ng3uOSpHTlGfjcx - LcwzZS9mxrkfsW7PJGpaTn3PiDw - u6PuI4RuN9BmviJz0fqJs2vLOdKuGHOUNnV3p3DgnHX - NxFtYxBXf2m_xC - iYN3hXPbQF1UvruvypWCzIKLMzkyJRGTlgMENXff9YtLB04B4bATBJw9xO8YLEA1UaQ - 2 DYdi4pRY5tSM_u_KwfYhTsBj0PzUOjSUe3plTIOPIeriZAB02SdU2mGMuQOQrzNy0FXgFYI3nMmUPdzTGYA4x5vt6dP99T9wwyRromJMLtfY - sjiK3j_WgUjxvP6Wpm7IM8vGzls5ZrJ85LktkQDyU7sOZLojFgjITbaPSNbJDtcaiI23iUNeJELerAM - opkV8CbgV4ohHWrgQIUyKm45mu0K8kbGjo6Ve40mgfDb1CdsX7zBWPEDfd9wwXLq3c3C1DUSuW0_9kvZSreQ6F - lNaGwLSD62Y4ruh7mRwZMHr90Y3nY0JnsXbaZMDXCpDLRuCMu_oTOR2LRY3fU2Ez6s0m4gtlgRFzsvwtqXAHCHO8Rj4kXq0HrpYljhxiF1c8q - PZqvEPcf5DmnT4zpEr9KG5gpqRlCwwfJWl1dJ - 3 U4SxvXATHQtwqM1LLLO2hDv8GmuQ05tERAlWHRrx0zOT9cmjSAs63b - 6 BfApttPjr55oxKp59ouozkWBbNllndr_qnML8faaoak3Yy4wq8NfWJeRIejfTEaNg_Gv5trktY99C4sPEcxHjeRcY6HWhR0Z1YhpIhcynayVMEAhgUGNRbtEhLF - hx6ZqJUKv8gBKmxmKwZoNjmoEJiOTDULD9tl3cp8Tlj9FjraA7Fl3BCVWo4o56fCCgqs8h9txsYaYbHcyLMtA9LdWwpgLf9EcOEObmSMsi9Dt - ORHTpkMa7jdiBOF1uuczrmK58fj_Mi46IdNjiLB3_595 - BK2ClzeWsu7Os - RznkS - BNc1gWFgB5T_1wsxOTpJ3X0RKG3LHRQHgd2yGpXqStAS_j7Z1ze0ooWMO1vFbwZdca05sq - DnIvNy6mtY4Jt4DKconl562MC5FEI4QKtW_FSZPFbWjC7Nioo9CTYJbRbPM6ADHvpjL4RrW2T0MumHF9V1TgF7wDLo79i9N - 3 BBxvWFruNTi - iMJ30zvvQ0k2Xd1wrbeSflfhS4mtZbvf6nOJZr5COaSsqcrT8BzViSwr09bocU54hRTB_5MFg0NilGApeu3eL20kBxNsf_zjehrVU . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 3828633558 ( 3.6 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L001_R1_001 . fastq . gz \u2019 SRR6470907_S1_L001_ 100 %[ ===================> ] 3.57 G 15.7 MB / s in 3 m 58 s 2019 - 12 - 12 17 : 13 : 38 ( 15.4 MB / s ) - \u2018 SRR6470907_S1_L001_R1_001 . fastq . gz \u2019 saved [ 3828633558/3828633558 ] -- 2019 - 12 - 12 17 : 13 : 40 -- https : // caltech . box . com / shared / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz [ following ] -- 2019 - 12 - 12 17 : 13 : 40 -- https : // caltech . box . com / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz [ following ] -- 2019 - 12 - 12 17 : 13 : 40 -- https : // caltech . app . box . com / public / static / 8 ud3otwztjeqlmjctbu1fw7hg3k56ejr . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! woL8LjzIjNqeJ9OSHk7 - Xn9zi3K2VdvRVvUbaVnaQJf_poiZY3cA1FkCz - mNcDiv8inLCBr9HxopHLD7qtCpM0ZI3CWVA3sYKKYP146oeDkFtwrnKSX53aUm65dPCv2m1Q3IEkxI5SwD10xXsCWO1TJ91FDo84VieVTyqg5LbREx06zlJcYWvhwayUrSoFehJj1rSSmB27EZC9CgsphjiYUnoyiNyXegv0hy63_3Kwr - G1SKgbA4AO5L5nYvv_murpqwxalzTQgtHpmzTGcCVVERxQA4FULICpd - VmCxERdwUjhvCr5Uiu6DV499heqeH7IEPs - D2VH5VrdQY8gjgQ9_nK3T6Z1UcHPjgcewfqyJpvFVl1NQjTDmsBMUOBdftfIzhgRwJ_Iny6mrwTRgal1kYhwUMrbq6dgUy5 - XhzodwXQrQItFDoYQeDKgLShOZMOs0P9hH_QJmEAEtuG5ax6KLfGpJzjoQJUs0SEhEzOeW9SltM3n0Mz09botMDcDYHWPYPybjAK95uFD0TdIefcMv_BVERwD2vG6GQLivK1mZ6ARg9xS6zbYF7KkffDE6kDUpeWkLkl_CKT0_0p9z5NMWPwGitM0NSOzvV8103q5LyUNboOBc18XKa - H8fXYFcAhZLeqsEkQ0rhbPKgYnB3lm98sSQBGFW8FlgFvTCGf2NYhazjsD4ZKi11duuGhHXrRYr7W1UBfdW7LTZObQqvnyvXQ0P9va2wAW6rkRbs8Oqbb8nlbnaJ9hQKzTRHR3hSl - 6 K98Ocw5k - B5d7RgzMRRLFsuRDEjZvSYf9EXY8bXzI_xjeSD7 - Bs1vbSf95gC9fnxb2hhdQQe_fZYeWYP3OCqstzAI67RDD8dVOLsQ122CpmJRfQ7Uvl0jci0XFiJK -- GqfjQ3LwboZfcfS30tNOsDmYFkmwi4wF3P9nrEFaN12Mh9J5IH2 - W44MPZx_vpS - LRDqRAES3VYtOHwR245hp2Hp27rZebkeEeKXh4uL0C38AAd - FaSXoMswUPyuXj963O5HY3F8dFkaBU2LsHhG5LMLlOMxmwFSWgBOsrvmnuCmDxar2fHqh - VDTRYtUI3aEBYX9zv6JGizpzqP51VdgOg2_3v75pkLW0z69Lkmm4rQVig9rlrvz - 5 WMS5Ess4di2M_PynKqgJRNCIi6ZX3HZNY9w3M - 0 GTvASRwVzfGv_FbTCkXZhbWGCSfqjPOWEgcDsjP3sJAZloat5NhJjGKZHE8gXiDwER1rKmP_xPWylu - DvPzVbnQxAUHlQNRwEn1HeCc0A5oLYihZswtgxj63nnRCiQC - J71hnhrR6RH8naR3GfcxQ66mSHcM6FvXw9OLevcTikF1Ryf_4s - V2HL8ODiShjroat2OzvLjrYmzazUrzZa_Bw - TEDqP - _eQG20t1Y9rnMKG5l4ayIa6CbduANyM . / download [ following ] -- 2019 - 12 - 12 17 : 13 : 41 -- https : // public . boxcloud . com / d / 1 / b1 ! woL8LjzIjNqeJ9OSHk7 - Xn9zi3K2VdvRVvUbaVnaQJf_poiZY3cA1FkCz - mNcDiv8inLCBr9HxopHLD7qtCpM0ZI3CWVA3sYKKYP146oeDkFtwrnKSX53aUm65dPCv2m1Q3IEkxI5SwD10xXsCWO1TJ91FDo84VieVTyqg5LbREx06zlJcYWvhwayUrSoFehJj1rSSmB27EZC9CgsphjiYUnoyiNyXegv0hy63_3Kwr - G1SKgbA4AO5L5nYvv_murpqwxalzTQgtHpmzTGcCVVERxQA4FULICpd - VmCxERdwUjhvCr5Uiu6DV499heqeH7IEPs - D2VH5VrdQY8gjgQ9_nK3T6Z1UcHPjgcewfqyJpvFVl1NQjTDmsBMUOBdftfIzhgRwJ_Iny6mrwTRgal1kYhwUMrbq6dgUy5 - XhzodwXQrQItFDoYQeDKgLShOZMOs0P9hH_QJmEAEtuG5ax6KLfGpJzjoQJUs0SEhEzOeW9SltM3n0Mz09botMDcDYHWPYPybjAK95uFD0TdIefcMv_BVERwD2vG6GQLivK1mZ6ARg9xS6zbYF7KkffDE6kDUpeWkLkl_CKT0_0p9z5NMWPwGitM0NSOzvV8103q5LyUNboOBc18XKa - H8fXYFcAhZLeqsEkQ0rhbPKgYnB3lm98sSQBGFW8FlgFvTCGf2NYhazjsD4ZKi11duuGhHXrRYr7W1UBfdW7LTZObQqvnyvXQ0P9va2wAW6rkRbs8Oqbb8nlbnaJ9hQKzTRHR3hSl - 6 K98Ocw5k - B5d7RgzMRRLFsuRDEjZvSYf9EXY8bXzI_xjeSD7 - Bs1vbSf95gC9fnxb2hhdQQe_fZYeWYP3OCqstzAI67RDD8dVOLsQ122CpmJRfQ7Uvl0jci0XFiJK -- GqfjQ3LwboZfcfS30tNOsDmYFkmwi4wF3P9nrEFaN12Mh9J5IH2 - W44MPZx_vpS - LRDqRAES3VYtOHwR245hp2Hp27rZebkeEeKXh4uL0C38AAd - FaSXoMswUPyuXj963O5HY3F8dFkaBU2LsHhG5LMLlOMxmwFSWgBOsrvmnuCmDxar2fHqh - VDTRYtUI3aEBYX9zv6JGizpzqP51VdgOg2_3v75pkLW0z69Lkmm4rQVig9rlrvz - 5 WMS5Ess4di2M_PynKqgJRNCIi6ZX3HZNY9w3M - 0 GTvASRwVzfGv_FbTCkXZhbWGCSfqjPOWEgcDsjP3sJAZloat5NhJjGKZHE8gXiDwER1rKmP_xPWylu - DvPzVbnQxAUHlQNRwEn1HeCc0A5oLYihZswtgxj63nnRCiQC - J71hnhrR6RH8naR3GfcxQ66mSHcM6FvXw9OLevcTikF1Ryf_4s - V2HL8ODiShjroat2OzvLjrYmzazUrzZa_Bw - TEDqP - _eQG20t1Y9rnMKG5l4ayIa6CbduANyM . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 6778713048 ( 6.3 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L001_R2_001 . fastq . gz \u2019 SRR6470907_S1_L001_ 100 %[ ===================> ] 6.31 G 14.5 MB / s in 7 m 25 s 2019 - 12 - 12 17 : 21 : 07 ( 14.5 MB / s ) - \u2018 SRR6470907_S1_L001_R2_001 . fastq . gz \u2019 saved [ 6778713048/6778713048 ] -- 2019 - 12 - 12 17 : 21 : 09 -- https : // caltech . box . com / shared / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz [ following ] -- 2019 - 12 - 12 17 : 21 : 10 -- https : // caltech . box . com / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz [ following ] -- 2019 - 12 - 12 17 : 21 : 10 -- https : // caltech . app . box . com / public / static / ln14jjd4tz3hvgxf8zj2kmokof7f1nrf . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! - CFZSuN_Qtpd3jFo3OMS6UdIb6n8hnhEU92hCLHKOzl5WL78fc6YEvnTsGBMC2gWBUaMdvkMq0UT3RkegIrKuohCJNeyRb6UXIzXAIPsuVVwmwkhcgPRIXn4KXm5Nub_VUGTAUtTEELuqbjlLurA1koY05AfijpRkdMrd6dq_e0L5SDjGIbn_d4LdtVY8Ty1Bs7m49XJDfc5xo74Myaomf - gm3EY02sfJ2JCJmcRMmZdDgoDaRUeAS8 - w - lPZw7gLmWGw24gHpv2x0EdrSp_3mNEfPrTmZTHNUFDzCOtvRU4T0C3V1FU0lvBenkIs8wBLT9D4geMEjj6L_qYkbr6ZVVsq215oLGKsaZPWvvDi0ruJ2xE1FvO0k3cxG8K1xOesQkyb2Q4HMaueLISFYwjYtYoaptLI3og6YP - mSEBEmX8AB0vG2wtQTn3tU1hrMhvaHLa7z64RRbpyfr6r95EvViGiKCndPz20jZLcboZQ91nKX3A6lLkMaKKLG1aLQp6YcU1NUvb0616_X37Ij2THCsqK5VKVVOvZUuQfwSGyk6AKunp4L2T4awbfui96dFNXi_exzuC6CJdmAkOBLZeGMEXWGLWKJSZHCMcHjNArMJH24xb7JX_Muw1PJMbY7p8xzaJZ8us9MC5vEfC6bOvEub6EuegKZcbLNJsVirxbw7lGV3NdTxhZv - lTw0PgxCCf0Z4Obvy3ZesMmwp8GhSKT34t3FCDHMJhDdmN3LzaafCRt32mNvVIPi8 - LZqdZI8U17nzAtqRvoax0b6nVX - 7 tLs8f6jlpfkWjCiUq6YaN5dl6cpFriTRRukWUkVCUbD7piKB9yFL0aIMvZcyjD_W - NAWUlsQxYWMeR - Yx_ZlBBRpmRR6Tu2xPQwQd9fbWUMeyB5C74o1V0lc4T_OGCU7MqE9Jo41btnvXbHgBSPPyGQ3zNHVGVYs_pCCVbedtjhaWmhHlztEcnRldao7h2z40gXeBuJAjK87MZ_ybBg_w_NIXr3E7iLG9HmkKiJngslzENTaFdR85PoqpPNroLt34YQQijizL1elyowlab3VnosScPMDKG5uvu6FYbiOQLIIK - znuzsMrej6M9RgNjv9HUW_aNv2 - EQWhaOARHBt20p1CHBWseSeBdYKzTZurPZbS2HLTuzbGws4CuhcPvbaNJLyV9BTMNAG_rJqGT4gsisBJBWRnlpEJX0OahbDf2QPOobrNAj8rVQIoOeLXqqJzstgOyzx0gkfHszPx2fIQmRyRC - a2x0wrmCMUQWJ3kwHTKKVTSaM03_MVDpM7s5flxshlFqOpjWZsps235p6dqkd0 - fKsL_4nNdym8sR4abwegEM1qIOTGDUO5cNw7UkKNFxuD3sZ39Si_5SEbZmpGgCgXfHlhYA9PV1g4qCLSDyVrpAh41Em_iTQouEb9JNcIwpmv11Tw . / download [ following ] -- 2019 - 12 - 12 17 : 21 : 11 -- https : // public . boxcloud . com / d / 1 / b1 ! - CFZSuN_Qtpd3jFo3OMS6UdIb6n8hnhEU92hCLHKOzl5WL78fc6YEvnTsGBMC2gWBUaMdvkMq0UT3RkegIrKuohCJNeyRb6UXIzXAIPsuVVwmwkhcgPRIXn4KXm5Nub_VUGTAUtTEELuqbjlLurA1koY05AfijpRkdMrd6dq_e0L5SDjGIbn_d4LdtVY8Ty1Bs7m49XJDfc5xo74Myaomf - gm3EY02sfJ2JCJmcRMmZdDgoDaRUeAS8 - w - lPZw7gLmWGw24gHpv2x0EdrSp_3mNEfPrTmZTHNUFDzCOtvRU4T0C3V1FU0lvBenkIs8wBLT9D4geMEjj6L_qYkbr6ZVVsq215oLGKsaZPWvvDi0ruJ2xE1FvO0k3cxG8K1xOesQkyb2Q4HMaueLISFYwjYtYoaptLI3og6YP - mSEBEmX8AB0vG2wtQTn3tU1hrMhvaHLa7z64RRbpyfr6r95EvViGiKCndPz20jZLcboZQ91nKX3A6lLkMaKKLG1aLQp6YcU1NUvb0616_X37Ij2THCsqK5VKVVOvZUuQfwSGyk6AKunp4L2T4awbfui96dFNXi_exzuC6CJdmAkOBLZeGMEXWGLWKJSZHCMcHjNArMJH24xb7JX_Muw1PJMbY7p8xzaJZ8us9MC5vEfC6bOvEub6EuegKZcbLNJsVirxbw7lGV3NdTxhZv - lTw0PgxCCf0Z4Obvy3ZesMmwp8GhSKT34t3FCDHMJhDdmN3LzaafCRt32mNvVIPi8 - LZqdZI8U17nzAtqRvoax0b6nVX - 7 tLs8f6jlpfkWjCiUq6YaN5dl6cpFriTRRukWUkVCUbD7piKB9yFL0aIMvZcyjD_W - NAWUlsQxYWMeR - Yx_ZlBBRpmRR6Tu2xPQwQd9fbWUMeyB5C74o1V0lc4T_OGCU7MqE9Jo41btnvXbHgBSPPyGQ3zNHVGVYs_pCCVbedtjhaWmhHlztEcnRldao7h2z40gXeBuJAjK87MZ_ybBg_w_NIXr3E7iLG9HmkKiJngslzENTaFdR85PoqpPNroLt34YQQijizL1elyowlab3VnosScPMDKG5uvu6FYbiOQLIIK - znuzsMrej6M9RgNjv9HUW_aNv2 - EQWhaOARHBt20p1CHBWseSeBdYKzTZurPZbS2HLTuzbGws4CuhcPvbaNJLyV9BTMNAG_rJqGT4gsisBJBWRnlpEJX0OahbDf2QPOobrNAj8rVQIoOeLXqqJzstgOyzx0gkfHszPx2fIQmRyRC - a2x0wrmCMUQWJ3kwHTKKVTSaM03_MVDpM7s5flxshlFqOpjWZsps235p6dqkd0 - fKsL_4nNdym8sR4abwegEM1qIOTGDUO5cNw7UkKNFxuD3sZ39Si_5SEbZmpGgCgXfHlhYA9PV1g4qCLSDyVrpAh41Em_iTQouEb9JNcIwpmv11Tw . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 4853988957 ( 4.5 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L002_R1_001 . fastq . gz \u2019 SRR6470907_S1_L002_ 100 %[ ===================> ] 4.52 G 14.3 MB / s in 5 m 28 s 2019 - 12 - 12 17 : 26 : 39 ( 14.1 MB / s ) - \u2018 SRR6470907_S1_L002_R1_001 . fastq . gz \u2019 saved [ 4853988957/4853988957 ] -- 2019 - 12 - 12 17 : 26 : 41 -- https : // caltech . box . com / shared / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz Resolving caltech . box . com ( caltech . box . com )... 103.116.4.197 Connecting to caltech . box . com ( caltech . box . com ) | 103.116.4.197 | : 443. .. connected . HTTP request sent , awaiting response ... 301 Moved Permanently Location : / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz [ following ] -- 2019 - 12 - 12 17 : 26 : 41 -- https : // caltech . box . com / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz Reusing existing connection to caltech . box . com : 443. HTTP request sent , awaiting response ... 301 Moved Permanently Location : https : // caltech . app . box . com / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz [ following ] -- 2019 - 12 - 12 17 : 26 : 41 -- https : // caltech . app . box . com / public / static / o5bwf9u2g7egi02by3e3hbvov8fgwbb3 . gz Resolving caltech . app . box . com ( caltech . app . box . com )... 103.116.4.199 Connecting to caltech . app . box . com ( caltech . app . box . com ) | 103.116.4.199 | : 443. .. connected . HTTP request sent , awaiting response ... 302 Found Location : https : // public . boxcloud . com / d / 1 / b1 ! IVYOgKcGOzbilk9FlsGm88xV2io9D84Ow22xbB96OKsLZNYRxkZSs_jyMZQ8OC1FhBpCAB3dHUjCJCJ4NiaaUtOL8OwMjtQbMqL45 - TTdPw8PpbCH4Y1hf9G1XrG336NJLhY7hwQEir1hiLmBGIuf4t9TrjHSkXx6GCbMdK9XYSafYznfKjR4usiOwhGcxPSTD96PW3BGPM8YPM9wfqeDJtWQymNJOGOGUiWaa6 - gPrejYp1potoKKu - wWa6CMMxoO3aZ9pK2ZhLQzEpsbHmUkz2xB36RY5vqatTV1V58nxen06RjS1cExNfQ2HWxSS65IvfXmodDCiUEKeCUjHM08LmaPmvDdJfN6x9bIpGRyFWYqW845YcbvdWvvFA_TIfXcziixmBRiqc_kG4KqmIyV_A9hm40gANqeeb9UK - Oz41SX7kHRJp7Of_Th5SIctBrLN7NRdb - zqMmThHmnvCWJUk5eVSO0Xn5tOOJoiYLFl2PbiR3PYR0q - J6lkVUJvxU47 - GBGWwd2S3yj115w7bXVfm77Ow895bSC4g6HdF21w2fw2CFhf5 - XtDgp2W5TnxQjb_ZU0pNl7ZyJ8Vmf3b8eT1bPOfQT8UnMwZjGpcmXDsaRi7pxtzY7DP8nLVuY9HelV57_QIvEpOHK7hd810sfYu2r_kgVQRqrVaev9_LXZIh - aH2azE1YFjxUPrHwyETg4KLKVDpcQQC_Dj2NCWor2ThwUROC - O4_j5Zs4CYqMzPF6XiNBBOGu - zsjvDLTdOJ9ID8tqSGhsBo - Gkz5mWDz4st7A0kK4GjZ3jNnip02Q1Cf5s6AhDd8GdEi - 45 acxUTCB2rhcrxTTHV - XuCSTRQ7qQ0HNMMMFxk8CVNd6GNm_5_BaJqjd6NHpumIp61eBNfvdQIaU_ugiHNZiTnsVoCrTfk8Yn3ehSS0EZPHoSbvUwW9RFLP1sZk81836XQ3xHUiYjQ_owVntdqmBInhdq9lsxeB1acv5JLrpAPBpPSdOoAoKcSMFMEWMM36c5k9YNk7zj7Pi5h672oUzgP1mNj05hHyIgTQoXOjPtS9A6vcy8KDOOXSGQ7a9hXOeIw4nJ4U6ErlhZlvlRZ3RpJRsgavTXdAi6A5A - nrxoQVQvd3 - 1 uwNQeEZJ5zGPsspbs51GZJOFt - kGVF2nqQ3K_w4vgMggST_V6Lgtr2wX0z1gMwyObrrCpgN0WJzSz4881mI9WNJedPc33Xiq7U33y02yRC1NowEQuIqJhPZZprH98e1GPgPnbaRQ - 1 im -- XMpVaZQjWj71ptQvEvP_3b4JICWRIX9f4L_5PdEmfVkjrS4Khxd6HYekoiitQbm6d8auOdEp7PseYO - 0 yh0cwy1RCGVLKvrAp -- bKhen4j4aVD5repULhU86R30xg5qJQWqp3Fvidw03bdao3tmtV7Pm9j9AIO3BaE . / download [ following ] -- 2019 - 12 - 12 17 : 26 : 42 -- https : // public . boxcloud . com / d / 1 / b1 ! IVYOgKcGOzbilk9FlsGm88xV2io9D84Ow22xbB96OKsLZNYRxkZSs_jyMZQ8OC1FhBpCAB3dHUjCJCJ4NiaaUtOL8OwMjtQbMqL45 - TTdPw8PpbCH4Y1hf9G1XrG336NJLhY7hwQEir1hiLmBGIuf4t9TrjHSkXx6GCbMdK9XYSafYznfKjR4usiOwhGcxPSTD96PW3BGPM8YPM9wfqeDJtWQymNJOGOGUiWaa6 - gPrejYp1potoKKu - wWa6CMMxoO3aZ9pK2ZhLQzEpsbHmUkz2xB36RY5vqatTV1V58nxen06RjS1cExNfQ2HWxSS65IvfXmodDCiUEKeCUjHM08LmaPmvDdJfN6x9bIpGRyFWYqW845YcbvdWvvFA_TIfXcziixmBRiqc_kG4KqmIyV_A9hm40gANqeeb9UK - Oz41SX7kHRJp7Of_Th5SIctBrLN7NRdb - zqMmThHmnvCWJUk5eVSO0Xn5tOOJoiYLFl2PbiR3PYR0q - J6lkVUJvxU47 - GBGWwd2S3yj115w7bXVfm77Ow895bSC4g6HdF21w2fw2CFhf5 - XtDgp2W5TnxQjb_ZU0pNl7ZyJ8Vmf3b8eT1bPOfQT8UnMwZjGpcmXDsaRi7pxtzY7DP8nLVuY9HelV57_QIvEpOHK7hd810sfYu2r_kgVQRqrVaev9_LXZIh - aH2azE1YFjxUPrHwyETg4KLKVDpcQQC_Dj2NCWor2ThwUROC - O4_j5Zs4CYqMzPF6XiNBBOGu - zsjvDLTdOJ9ID8tqSGhsBo - Gkz5mWDz4st7A0kK4GjZ3jNnip02Q1Cf5s6AhDd8GdEi - 45 acxUTCB2rhcrxTTHV - XuCSTRQ7qQ0HNMMMFxk8CVNd6GNm_5_BaJqjd6NHpumIp61eBNfvdQIaU_ugiHNZiTnsVoCrTfk8Yn3ehSS0EZPHoSbvUwW9RFLP1sZk81836XQ3xHUiYjQ_owVntdqmBInhdq9lsxeB1acv5JLrpAPBpPSdOoAoKcSMFMEWMM36c5k9YNk7zj7Pi5h672oUzgP1mNj05hHyIgTQoXOjPtS9A6vcy8KDOOXSGQ7a9hXOeIw4nJ4U6ErlhZlvlRZ3RpJRsgavTXdAi6A5A - nrxoQVQvd3 - 1 uwNQeEZJ5zGPsspbs51GZJOFt - kGVF2nqQ3K_w4vgMggST_V6Lgtr2wX0z1gMwyObrrCpgN0WJzSz4881mI9WNJedPc33Xiq7U33y02yRC1NowEQuIqJhPZZprH98e1GPgPnbaRQ - 1 im -- XMpVaZQjWj71ptQvEvP_3b4JICWRIX9f4L_5PdEmfVkjrS4Khxd6HYekoiitQbm6d8auOdEp7PseYO - 0 yh0cwy1RCGVLKvrAp -- bKhen4j4aVD5repULhU86R30xg5qJQWqp3Fvidw03bdao3tmtV7Pm9j9AIO3BaE . / download Resolving public . boxcloud . com ( public . boxcloud . com )... 103.116.4.200 Connecting to public . boxcloud . com ( public . boxcloud . com ) | 103.116.4.200 | : 443. .. connected . HTTP request sent , awaiting response ... 200 OK Length : 8621336299 ( 8.0 G ) [ application/octet-stream ] Saving to : \u2018 SRR6470907_S1_L002_R2_001 . fastq . gz \u2019 SRR6470907_S1_L002_ 100 %[ ===================> ] 8.03 G 15.3 MB / s in 9 m 1 s 2019 - 12 - 12 17 : 35 : 44 ( 15.2 MB / s ) - \u2018 SRR6470907_S1_L002_R2_001 . fastq . gz \u2019 saved [ 8621336299/8621336299 ] CPU times : user 17.6 s , sys : 3.11 s , total : 20.7 s Wall time : 50 min 28 s Then, we verify the integrity of the files we downloaded to make sure they were not corrupted during the download. 1 !md5sum -c checksums.txt --ignore-missing SRR6470906_S1_L001_R1_001.fastq.gz: OK SRR6470906_S1_L001_R2_001.fastq.gz: OK SRR6470906_S1_L002_R1_001.fastq.gz: OK SRR6470906_S1_L002_R2_001.fastq.gz: OK SRR6470907_S1_L001_R1_001.fastq.gz: OK SRR6470907_S1_L001_R2_001.fastq.gz: OK SRR6470907_S1_L002_R1_001.fastq.gz: OK SRR6470907_S1_L002_R2_001.fastq.gz: OK","title":"Download the data"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#install-kb","text":"Install kb for running the kallisto|bustools workflow. 1 !pip install kb-python Collecting kb - python \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 62 / c9 / 2e5 b8fa2cd873a23ae1aeb128b33165d6a9387a2f56ea1fafec1d6d32477 / kb_python - 0.24 . 4 - py3 - none - any . whl ( 35.4 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 35.4 MB 93.0 MB / s \u001b [ ? 25 hCollecting loompy >= 3.0 . 6 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 36 / 52 / 74 ed37ae5988522fbf87b856c67c4f80700e6452410b4cd80498c5f416f9 / loompy - 3.0 . 6. tar . gz ( 41 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 8.3 MB / s \u001b [ ? 25 hCollecting anndata >= 0.6 . 22. post1 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 2 b / 72 / 87196 c15f68d9865c31a43a10cf7c50bcbcedd5607d09f9aada0b3963103 / anndata - 0.6 . 22. post1 - py3 - none - any . whl ( 47 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 8.2 MB / s \u001b [ ? 25 hRequirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 2.8 . 0 ) Requirement already satisfied : numpy in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 1.17 . 4 ) Requirement already satisfied : scipy in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 1.3 . 3 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 42.0 . 2 ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 0.40 . 1 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python ) ( 7.0 ) Collecting numpy - groupies \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 96 / 7 a / 2196465530e72084 c6bb97cd49bf8ccdc83919cc94755727aa148effbc0f / numpy_groupies - 0.9 . 9. tar . gz ( 43 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 51 kB 7.3 MB / s \u001b [ ? 25 hRequirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python ) ( 0.25 . 3 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python ) ( 5.5 . 0 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> loompy >= 3.0 . 6 -> kb - python ) ( 1.12 . 0 ) Requirement already satisfied : llvmlite >= 0.25 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python ) ( 0.30 . 0 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python ) ( 2.6 . 1 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python ) ( 2018.9 ) Building wheels for collected packages : loompy , numpy - groupies Building wheel for loompy ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for loompy : filename = loompy - 3.0 . 6 - cp36 - none - any . whl size = 47896 sha256 = 59 c25a4deb5ede0f81a8e517a49472995f8e78dfba775923ecd967c87fe50386 Stored in directory : / root /. cache / pip / wheels / f9 / a4 / 90 / 5 a98ad83419732b0fba533b81a2a52ba3dbe230a936ca4cdc9 Building wheel for numpy - groupies ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for numpy - groupies : filename = numpy_groupies - 0 + unknown - cp36 - none - any . whl size = 27879 sha256 = 87270 c8976a5752b0f7ea76542caffdf0070a3f736e8220c086a16e2343863ec Stored in directory : / root /. cache / pip / wheels / 6 c / fb / 3 d / 5 c43eb691bd92a3ddd0ebeb6e7e78ceaf3ae1cb8d54b89a7fb Successfully built loompy numpy - groupies Installing collected packages : numpy - groupies , loompy , anndata , kb - python Successfully installed anndata - 0.6 . 22. post1 kb - python - 0.24 . 4 loompy - 3.0 . 6 numpy - groupies - 0 + unknown","title":"Install kb"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#download-a-pre-built-human-rna-velocity-index","text":"kb provides a pre-built human RNA velocity index, which is suitable for 10x data only. See this notebook to understand how the index was generated: https://github.com/linnarsson-lab/loompy/blob/master/notebooks/build_index.ipynb Because this is a velocity index, we need to provide the -c1 and -c2 options when downloading to indicate what we want to name our transcripts-to-capture lists. These lists contain transcript IDs that correspond to spliced and unspliced variants of genes, the sequences of which were used to generate the index.idx file. Note: See this notebook for a tutorial on how to build custom transcriptome or RNA velocity indices. 1 2 %%time !kb ref -d linnarsson -i index.idx -g t2g.txt -c1 spliced_t2c.txt -c2 unspliced_t2c.txt [ 2019 - 12 - 12 17 : 40 : 34 , 599 ] INFO Downloading files for linnarsson from https : // caltech . box . com / shared / static / kyf7ai5s8y2l0vycl5yxunrappvrf0yx . gz to tmp / kyf7ai5s8y2l0vycl5yxunrappvrf0yx . gz [ 2019 - 12 - 12 17 : 45 : 54 , 084 ] INFO Extracting files from tmp / kyf7ai5s8y2l0vycl5yxunrappvrf0yx . gz CPU times : user 1.32 s , sys : 174 ms , total : 1.5 s Wall time : 6 min 30 s","title":"Download a pre-built human RNA velocity index"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#generate-rna-velocity-count-matrices","text":"The following command will generate an RNA count matrix of cells (rows) by genes (columns) in H5AD format, which is a binary format used to store Anndata objects. Notice we are providing the index and transcript-to-gene mapping we downloaded in the previous step to the -i and -g arguments respectively, as well as the transcripts-to-capture lists to the -c1 and -c2 arguments. Also, these reads were generated with the 10x Genomics Chromium Single Cell v2 Chemistry, hence the -x 10xv2 argument. To view other supported technologies, run kb --list . The --filter flag is used to filter out barcodes with low UMI counts. This will generate two matrices, one in the counts_unfiltered directory and another in the counts_filtered directory. Note: If you would like a Loom file instead, replace the --h5ad flag with --loom . If you want to use the raw matrix output by kb instead of their H5AD or Loom converted files, omit these flags.","title":"Generate RNA velocity count matrices"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#srr6470906","text":"1 2 3 4 5 6 7 8 9 10 %%time # Uncomment the following two lines if you want to use checkpoint files # !wget https://caltech.box.com/shared/static/wt1xo5ro9v7qo4fi4dl52kbbcg0omlve.gz -O SRR64070906.tar.gz # !tar -xzvf SRR64070906.tar.gz !kb count --h5ad -i index.idx -g t2g.txt -x 10xv2 -o SRR6470906 \\ -c1 spliced_t2c.txt -c2 unspliced_t2c.txt --lamanno --filter bustools -t 2 \\ SRR6470906_S1_L001_R1_001.fastq.gz \\ SRR6470906_S1_L001_R2_001.fastq.gz \\ SRR6470906_S1_L002_R1_001.fastq.gz \\ SRR6470906_S1_L002_R2_001.fastq.gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO Generating BUS file from [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L001_R1_001 . fastq . gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L001_R2_001 . fastq . gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L002_R1_001 . fastq . gz [ 2019 - 12 - 12 17 : 59 : 33 , 838 ] INFO SRR6470906_S1_L002_R2_001 . fastq . gz [ 2019 - 12 - 12 18 : 29 : 18 , 309 ] INFO Sorting BUS file SRR6470906 / output . bus to tmp / output . s . bus [ 2019 - 12 - 12 18 : 30 : 52 , 034 ] INFO Whitelist not provided [ 2019 - 12 - 12 18 : 30 : 52 , 034 ] INFO Copying pre - packaged 10 XV2 whitelist to SRR6470906 [ 2019 - 12 - 12 18 : 30 : 52 , 217 ] INFO Inspecting BUS file tmp / output . s . bus [ 2019 - 12 - 12 18 : 31 : 19 , 945 ] INFO Correcting BUS records in tmp / output . s . bus to tmp / output . s . c . bus with whitelist SRR6470906 / 10 xv2_whitelist . txt [ 2019 - 12 - 12 18 : 31 : 44 , 539 ] INFO Sorting BUS file tmp / output . s . c . bus to SRR6470906 / output . unfiltered . bus [ 2019 - 12 - 12 18 : 32 : 15 , 671 ] INFO Capturing records from BUS file SRR6470906 / output . unfiltered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 18 : 32 : 55 , 811 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470906 / spliced . unfiltered . bus [ 2019 - 12 - 12 18 : 33 : 18 , 574 ] INFO Generating count matrix SRR6470906 / counts_unfiltered / spliced from BUS file SRR6470906 / spliced . unfiltered . bus [ 2019 - 12 - 12 18 : 33 : 47 , 704 ] INFO Capturing records from BUS file SRR6470906 / output . unfiltered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 18 : 34 : 19 , 695 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470906 / unspliced . unfiltered . bus [ 2019 - 12 - 12 18 : 34 : 30 , 651 ] INFO Generating count matrix SRR6470906 / counts_unfiltered / unspliced from BUS file SRR6470906 / unspliced . unfiltered . bus [ 2019 - 12 - 12 18 : 35 : 28 , 217 ] INFO Writing matrices to h5ad SRR6470906 / counts_unfiltered / adata . h5ad [ 2019 - 12 - 12 18 : 35 : 28 , 762 ] INFO Filtering with bustools [ 2019 - 12 - 12 18 : 35 : 28 , 763 ] INFO Generating whitelist SRR6470906 / filter_barcodes . txt from BUS file SRR6470906 / output . unfiltered . bus [ 2019 - 12 - 12 18 : 35 : 29 , 383 ] INFO Capturing records from BUS file SRR6470906 / output . unfiltered . bus to tmp / output . filtered . bus with capture list SRR6470906 / filter_barcodes . txt [ 2019 - 12 - 12 18 : 35 : 37 , 452 ] INFO Sorting BUS file tmp / output . filtered . bus to SRR6470906 / output . filtered . bus [ 2019 - 12 - 12 18 : 36 : 01 , 835 ] INFO Capturing records from BUS file SRR6470906 / output . filtered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 18 : 36 : 38 , 648 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470906 / spliced . filtered . bus [ 2019 - 12 - 12 18 : 36 : 57 , 294 ] INFO Generating count matrix SRR6470906 / counts_filtered / spliced from BUS file SRR6470906 / spliced . filtered . bus [ 2019 - 12 - 12 18 : 37 : 23 , 234 ] INFO Capturing records from BUS file SRR6470906 / output . filtered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 18 : 37 : 54 , 444 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470906 / unspliced . filtered . bus [ 2019 - 12 - 12 18 : 38 : 04 , 159 ] INFO Generating count matrix SRR6470906 / counts_filtered / unspliced from BUS file SRR6470906 / unspliced . filtered . bus [ 2019 - 12 - 12 18 : 38 : 51 , 739 ] INFO Writing matrices to h5ad SRR6470906 / counts_filtered / adata . h5ad CPU times : user 8.86 s , sys : 1.1 s , total : 9.97 s Wall time : 39 min 20 s","title":"SRR6470906"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#srr6470907","text":"1 2 3 4 5 6 7 8 9 10 %%time # Uncomment the following two lines if you want to use checkpoint files # !wget https://caltech.box.com/shared/static/bulmquvaflr18v0nqb8c3ataf9di55r8.gz -O SRR64070907.tar.gz # !tar -xzvf SRR64070907.tar.gz !kb count --h5ad -i index.idx -g t2g.txt -x 10xv2 -o SRR6470907 \\ -c1 spliced_t2c.txt -c2 unspliced_t2c.txt --lamanno --filter bustools \\ SRR6470907_S1_L001_R1_001.fastq.gz \\ SRR6470907_S1_L001_R2_001.fastq.gz \\ SRR6470907_S1_L002_R1_001.fastq.gz \\ SRR6470907_S1_L002_R2_001.fastq.gz [ 2019 - 12 - 12 18 : 38 : 55 , 843 ] INFO Generating BUS file from [ 2019 - 12 - 12 18 : 38 : 55 , 843 ] INFO SRR6470907_S1_L001_R1_001 . fastq . gz [ 2019 - 12 - 12 18 : 38 : 55 , 844 ] INFO SRR6470907_S1_L001_R2_001 . fastq . gz [ 2019 - 12 - 12 18 : 38 : 55 , 844 ] INFO SRR6470907_S1_L002_R1_001 . fastq . gz [ 2019 - 12 - 12 18 : 38 : 55 , 844 ] INFO SRR6470907_S1_L002_R2_001 . fastq . gz [ 2019 - 12 - 12 19 : 10 : 35 , 733 ] INFO Sorting BUS file SRR6470907 / output . bus to tmp / output . s . bus [ 2019 - 12 - 12 19 : 12 : 20 , 479 ] INFO Whitelist not provided [ 2019 - 12 - 12 19 : 12 : 20 , 479 ] INFO Copying pre - packaged 10 XV2 whitelist to SRR6470907 [ 2019 - 12 - 12 19 : 12 : 20 , 592 ] INFO Inspecting BUS file tmp / output . s . bus [ 2019 - 12 - 12 19 : 12 : 54 , 911 ] INFO Correcting BUS records in tmp / output . s . bus to tmp / output . s . c . bus with whitelist SRR6470907 / 10 xv2_whitelist . txt [ 2019 - 12 - 12 19 : 13 : 22 , 556 ] INFO Sorting BUS file tmp / output . s . c . bus to SRR6470907 / output . unfiltered . bus [ 2019 - 12 - 12 19 : 14 : 04 , 585 ] INFO Capturing records from BUS file SRR6470907 / output . unfiltered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 19 : 14 : 52 , 037 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470907 / spliced . unfiltered . bus [ 2019 - 12 - 12 19 : 15 : 19 , 416 ] INFO Generating count matrix SRR6470907 / counts_unfiltered / spliced from BUS file SRR6470907 / spliced . unfiltered . bus [ 2019 - 12 - 12 19 : 15 : 51 , 857 ] INFO Capturing records from BUS file SRR6470907 / output . unfiltered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 19 : 16 : 30 , 927 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470907 / unspliced . unfiltered . bus [ 2019 - 12 - 12 19 : 16 : 46 , 008 ] INFO Generating count matrix SRR6470907 / counts_unfiltered / unspliced from BUS file SRR6470907 / unspliced . unfiltered . bus [ 2019 - 12 - 12 19 : 17 : 57 , 444 ] INFO Writing matrices to h5ad SRR6470907 / counts_unfiltered / adata . h5ad [ 2019 - 12 - 12 19 : 17 : 58 , 086 ] INFO Filtering with bustools [ 2019 - 12 - 12 19 : 17 : 58 , 086 ] INFO Generating whitelist SRR6470907 / filter_barcodes . txt from BUS file SRR6470907 / output . unfiltered . bus [ 2019 - 12 - 12 19 : 17 : 58 , 897 ] INFO Capturing records from BUS file SRR6470907 / output . unfiltered . bus to tmp / output . filtered . bus with capture list SRR6470907 / filter_barcodes . txt [ 2019 - 12 - 12 19 : 18 : 08 , 972 ] INFO Sorting BUS file tmp / output . filtered . bus to SRR6470907 / output . filtered . bus [ 2019 - 12 - 12 19 : 18 : 42 , 842 ] INFO Capturing records from BUS file SRR6470907 / output . filtered . bus to tmp / spliced . bus with capture list spliced_t2c . txt [ 2019 - 12 - 12 19 : 19 : 26 , 502 ] INFO Sorting BUS file tmp / spliced . bus to SRR6470907 / spliced . filtered . bus [ 2019 - 12 - 12 19 : 19 : 50 , 027 ] INFO Generating count matrix SRR6470907 / counts_filtered / spliced from BUS file SRR6470907 / spliced . filtered . bus [ 2019 - 12 - 12 19 : 20 : 19 , 058 ] INFO Capturing records from BUS file SRR6470907 / output . filtered . bus to tmp / unspliced . bus with capture list unspliced_t2c . txt [ 2019 - 12 - 12 19 : 20 : 56 , 254 ] INFO Sorting BUS file tmp / unspliced . bus to SRR6470907 / unspliced . filtered . bus [ 2019 - 12 - 12 19 : 21 : 08 , 867 ] INFO Generating count matrix SRR6470907 / counts_filtered / unspliced from BUS file SRR6470907 / unspliced . filtered . bus [ 2019 - 12 - 12 19 : 22 : 11 , 325 ] INFO Writing matrices to h5ad SRR6470907 / counts_filtered / adata . h5ad CPU times : user 9.69 s , sys : 1.25 s , total : 10.9 s Wall time : 43 min 24 s","title":"SRR6470907"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#analysis","text":"In this part of the tutorial, we will load the RNA count matrix generated by kb count into Python and cluster the cells with Louvain.","title":"Analysis"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#install-packages","text":"Google Colab does not come with scanpy , python-igraph , or louvain (but comes with matplotlib , numpy , pandas , and scipy ). 1 !pip install scanpy loompy scvelo anndata velocyto python-igraph louvain Collecting scanpy \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / c9 / df / e0957422a85e924501afbff2f9283e02d93cefcb04aa8319ade7af68d266 / scanpy - 1.4 . 4. post1 - py3 - none - any . whl ( 1.9 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 1.9 MB 2.7 MB / s \u001b [ ? 25 hRequirement already satisfied : loompy in / usr / local / lib / python3 . 6 / dist - packages ( 3.0 . 6 ) Collecting scvelo \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 62 / da / 0 b40b56a7a7c2b01fb3d978b7225c3f33558092a8c7a8374d67285f04c4b / scvelo - 0.1 . 24 - py3 - none - any . whl ( 168 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 174 kB 71.2 MB / s \u001b [ ? 25 hRequirement already satisfied : anndata in / usr / local / lib / python3 . 6 / dist - packages ( 0.6 . 22. post1 ) Collecting velocyto \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 81 / 66 / e8fff9d3b824fd99c0f678c47c740fec058ce2d9a0cfdf11b114ea8889f2 / velocyto - 0.17 . 17. tar . gz ( 198 kB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 204 kB 70.5 MB / s \u001b [ ? 25 hRequirement already satisfied : scikit - learn != 0.21 . 0 , != 0.21 . 1 , >= 0.19 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.21 . 3 ) Requirement already satisfied : scipy >= 1.3 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 1.3 . 3 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 5.5 . 0 ) Requirement already satisfied : pandas >= 0.21 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.25 . 3 ) Requirement already satisfied : statsmodels >= 0.10 . 0 rc2 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.10 . 2 ) Requirement already satisfied : seaborn in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.9 . 0 ) Requirement already satisfied : patsy in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.5 . 1 ) Collecting matplotlib == 3.0 .* \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / e9 / 69 / f5e05f578585ed9935247be3788b374f90701296a70c8871bcd6d21edb00 / matplotlib - 3.0 . 3 - cp36 - cp36m - manylinux1_x86_64 . whl ( 13.0 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 13.0 MB 47.2 MB / s \u001b [ ? 25 hRequirement already satisfied : networkx in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 2.4 ) Requirement already satisfied : tqdm in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 4.28 . 1 ) Requirement already satisfied : joblib in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.14 . 0 ) Collecting numba >= 0.41 . 0 \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 53 / 34 / 22 b6c2ded558976b5367be01b851ae679a0d1ba994de002d54afe84187b5 / numba - 0.46 . 0 - cp36 - cp36m - manylinux1_x86_64 . whl ( 3.6 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3.6 MB 47.5 MB / s \u001b [ ? 25 hRequirement already satisfied : umap - learn >= 0.3 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 0.3 . 10 ) Requirement already satisfied : importlib - metadata >= 0.7 ; python_version < \"3.8\" in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 1.2 . 0 ) Requirement already satisfied : tables in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 3.4 . 4 ) Requirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from scanpy ) ( 2.8 . 0 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 42.0 . 2 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 7.0 ) Requirement already satisfied : numpy - groupies in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 0 + unknown ) Requirement already satisfied : numpy in / usr / local / lib / python3 . 6 / dist - packages ( from loompy ) ( 1.17 . 4 ) Requirement already satisfied : cython in / usr / local / lib / python3 . 6 / dist - packages ( from velocyto ) ( 0.29 . 14 ) Collecting pysam \u001b [ ? 25 l Downloading https : // files . pythonhosted . org / packages / 15 / e7 / 2 dab8bb0ac739555e69586f1492f0ff6bc4a1f8312992a83001d3deb77ac / pysam - 0.15 . 3. tar . gz ( 3.2 MB ) \u001b [ K | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 3.2 MB 39.3 MB / s \u001b [ ? 25 hRequirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.21 -> scanpy ) ( 2018.9 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.21 -> scanpy ) ( 2.6 . 1 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from patsy -> scanpy ) ( 1.12 . 0 ) Requirement already satisfied : pyparsing != 2.0 . 4 , != 2.1 . 2 , != 2.1 . 6 , >= 2.0 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from matplotlib == 3.0 .*-> scanpy ) ( 2.4 . 5 ) Requirement already satisfied : cycler >= 0.10 in / usr / local / lib / python3 . 6 / dist - packages ( from matplotlib == 3.0 .*-> scanpy ) ( 0.10 . 0 ) Requirement already satisfied : kiwisolver >= 1.0 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from matplotlib == 3.0 .*-> scanpy ) ( 1.1 . 0 ) Requirement already satisfied : decorator >= 4.3 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from networkx -> scanpy ) ( 4.4 . 1 ) Requirement already satisfied : llvmlite >= 0.30 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba >= 0.41 . 0 -> scanpy ) ( 0.30 . 0 ) Requirement already satisfied : zipp >= 0.5 in / usr / local / lib / python3 . 6 / dist - packages ( from importlib - metadata >= 0.7 ; python_version < \"3.8\" -> scanpy ) ( 0.6 . 0 ) Requirement already satisfied : numexpr >= 2.5 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from tables -> scanpy ) ( 2.7 . 0 ) Requirement already satisfied : more - itertools in / usr / local / lib / python3 . 6 / dist - packages ( from zipp >= 0.5 -> importlib - metadata >= 0.7 ; python_version < \"3.8\" -> scanpy ) ( 8.0 . 0 ) Building wheels for collected packages : velocyto , pysam Building wheel for velocyto ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for velocyto : filename = velocyto - 0.17 . 17 - cp36 - cp36m - linux_x86_64 . whl size = 367926 sha256 = 32 f44ce715f59ffb9f36c324fc2cd0472dcd7507754fb1f8ef8868bf8c8b38c6 Stored in directory : / root /. cache / pip / wheels / e0 / 10 / 47 / 5 a2aa6a7179b17b50a19cdba1df71798ade77e7d9ce98c5300 Building wheel for pysam ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for pysam : filename = pysam - 0.15 . 3 - cp36 - cp36m - linux_x86_64 . whl size = 8790482 sha256 = 3 abfe873fccbf84384bed55c40e200be7425d00cfaa6c5877eddc1ca248add6b Stored in directory : / root /. cache / pip / wheels / 85 / ab / 84 / 86 ca6dda37a6fc85687b67be7345b735cd82f6584bea56f327 Successfully built velocyto pysam \u001b [ 31 mERROR : albumentations 0.1 . 12 has requirement imgaug < 0.2 . 7 , >= 0.2 . 5 , but you 'll have imgaug 0.2.9 which is incompatible.\u001b[0m Installing collected packages : matplotlib , numba , scanpy , scvelo , pysam , velocyto Found existing installation : matplotlib 3.1 . 2 Uninstalling matplotlib - 3.1 . 2 : Successfully uninstalled matplotlib - 3.1 . 2 Found existing installation : numba 0.40 . 1 Uninstalling numba - 0.40 . 1 : Successfully uninstalled numba - 0.40 . 1 Successfully installed matplotlib - 3.0 . 3 numba - 0.46 . 0 pysam - 0.15 . 3 scanpy - 1.4 . 4. post1 scvelo - 0.1 . 24 velocyto - 0.17 . 17 We also install an R package called princurve , which is used to fit a principal curve. Note: Google Colab does not official support R as of writing this tutorial, so this process may change with the official release. At the moment, we need to \"hack\" Google Colab to install R dependencies. 1 !Rscript -e \"install.packages('princurve')\" Installing package into \u2018 / usr / local / lib / R / site - library \u2019 ( as \u2018 lib \u2019 is unspecified ) trying URL 'https://cran.rstudio.com/src/contrib/princurve_2.1.4.tar.gz' Content type 'application/x-gzip' length 42249 bytes ( 41 KB ) ================================================== downloaded 41 KB * installing * source * package \u2018 princurve \u2019 ... ** package \u2018 princurve \u2019 successfully unpacked and MD5 sums checked ** using staged installation ** libs g ++ - std = gnu ++ 11 - I \"/usr/share/R/include\" - DNDEBUG - I \"/usr/lib/R/site-library/Rcpp/include\" - fpic - g - O2 - fdebug - prefix - map =/ build / r - base - uuRxut / r - base - 3.6 . 1 =. - fstack - protector - strong - Wformat - Werror = format - security - Wdate - time - D_FORTIFY_SOURCE = 2 - g - c RcppExports . cpp - o RcppExports . o g ++ - std = gnu ++ 11 - I \"/usr/share/R/include\" - DNDEBUG - I \"/usr/lib/R/site-library/Rcpp/include\" - fpic - g - O2 - fdebug - prefix - map =/ build / r - base - uuRxut / r - base - 3.6 . 1 =. - fstack - protector - strong - Wformat - Werror = format - security - Wdate - time - D_FORTIFY_SOURCE = 2 - g - c project_to_curve . cpp - o project_to_curve . o g ++ - std = gnu ++ 11 - shared - L / usr / lib / R / lib - Wl , - Bsymbolic - functions - Wl , - z , relro - o princurve . so RcppExports . o project_to_curve . o - L / usr / lib / R / lib - lR installing to / usr / local / lib / R / site - library / 00 LOCK - princurve / 00 new / princurve / libs ** R ** inst ** byte - compile and prepare package for lazy loading ** help *** installing help indices *** copying figures ** building package indices ** testing if installed package can be loaded from temporary location ** checking absolute paths in shared objects and dynamic libraries ** testing if installed package can be loaded from final location ** testing if installed package keeps a record of temporary installation path * DONE ( princurve ) The downloaded source packages are in \u2018 / tmp / RtmpNrrQA5 / downloaded_packages \u2019","title":"Install packages"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#import-packages","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import anndata import igraph import matplotlib import matplotlib.pyplot as plt import numpy as np import rpy2.robjects as robj import scanpy as sc import scipy import scipy.optimize import scvelo as scv import sklearn import velocyto as vcy from collections import Counter from IPython.core.display import display, HTML from numpy_groupies import aggregate, aggregate_np from rpy2.robjects.packages import importr from sklearn.decomposition import PCA from sklearn.neighbors import NearestNeighbors from scipy.spatial.distance import pdist, squareform matplotlib.rcParams.update({'font.size': 12}) %config InlineBackend.figure_format = 'retina'","title":"Import packages"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#import-h5ad-formatted-anndata-matrices","text":"1 2 adata_06 = anndata.read('SRR6470906/counts_unfiltered/adata.h5ad') adata_07 = anndata.read('SRR6470907/counts_unfiltered/adata.h5ad')","title":"Import H5AD-formatted Anndata matrices"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#combine-both-matrices-into-a-single-anndata-object","text":"1 2 3 4 5 6 7 8 9 10 # Before we do, we need to make sure we can trace each row back to its # original anndata object. adata_06.obs['run'] = '06' adata_07.obs['run'] = '07' adata_06.obs['bcs'] = adata_06.obs.index adata_07.obs['bcs'] = adata_07.obs.index adata_06.obs.index = adata_06.obs['bcs'] + '.' + adata_06.obs['run'] adata_07.obs.index = adata_07.obs['bcs'] + '.' + adata_07.obs['run'] adata = adata_06.concatenate(adata_07, batch_key='batch') Let's remove the -0 prefixes from the obs index. 1 adata.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } batch bcs run AAACCTGAGAAACCGC.06-0 0 AAACCTGAGAAACCGC 06 AAACCTGAGAAGGACA.06-0 0 AAACCTGAGAAGGACA 06 AAACCTGAGAAGGCCT.06-0 0 AAACCTGAGAAGGCCT 06 AAACCTGAGAAGGGTA.06-0 0 AAACCTGAGAAGGGTA 06 AAACCTGAGAAGGTTT.06-0 0 AAACCTGAGAAGGTTT 06 1 2 adata.obs.index = adata.obs.index.str.split('-').str[0] adata.obs.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } batch bcs run AAACCTGAGAAACCGC.06 0 AAACCTGAGAAACCGC 06 AAACCTGAGAAGGACA.06 0 AAACCTGAGAAGGACA 06 AAACCTGAGAAGGCCT.06 0 AAACCTGAGAAGGCCT 06 AAACCTGAGAAGGGTA.06 0 AAACCTGAGAAGGGTA 06 AAACCTGAGAAGGTTT.06 0 AAACCTGAGAAGGTTT 06 Let's also remove the gene versions from the var index. 1 adata.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } ENSG00000277400.1 ENSG00000274847.1 ENSG00000276256.1 ENSG00000278198.1 ENSG00000273496.1 1 2 adata.var.index = adata.var.index.str.split('.').str[0] adata.var.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } ENSG00000277400 ENSG00000274847 ENSG00000276256 ENSG00000278198 ENSG00000273496 1 adata AnnData object with n_obs \u00d7 n_vars = 374814 \u00d7 58367 obs : 'batch' , 'bcs' , 'run' layers : 'spliced' , 'unspliced'","title":"Combine both matrices into a single Anndata object"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#select-the-right-barcodes-and-genes","text":"Our Anndata matrix so far contains all genes and barcodes. Here, we will take the genes and barcodes present in our matrix and the matrix published with this dataset.","title":"Select the right barcodes and genes"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#download-the-matrix","text":"1 2 them = scv.read('data/hgForebrainGlut.loom', cleanup=True, sparse=True, cache=True, backup_url='http://pklab.med.harvard.edu/velocyto/hgForebrainGlut/hgForebrainGlut.loom') them.var_names_make_unique() HBox ( children = ( IntProgress ( value = 1 , bar_style = 'info' , description = 'hgForebrainGlut.loom' , max = 1 , style = Progres \u2026 Variable names are not unique . To make them unique , call ` . var_names_make_unique ` . ... storing 'Chromosome' as categorical ... storing 'Strand' as categorical Clean it up so that we can compare it to ours 1 2 3 4 them.obs[\"bcs\"] = them.obs.index.str.slice(11,-1) them.obs[\"bid\"] = them.obs.index.str.slice(8,10) them.obs[\"run\"] = them.obs.bid.map(lambda x: \"06\" if x==\"29\" else \"07\") them.obs.index = them.obs.bcs.values + \".\"+ them.obs[\"run\"]","title":"Download the matrix"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#take-the-intersection","text":"1 2 final = adata[adata.obs.index.isin(them.obs.index),:] final = final[:,final.var.index.isin(them.var.Accession)] 1 final View of AnnData object with n_obs \u00d7 n_vars = 1720 \u00d7 31029 obs : 'batch' , 'bcs' , 'run' layers : 'spliced' , 'unspliced' We also add an additional ambiguous layer, CellID and Clusters obs and Accession var, all of which are required by Velocyto . 1 2 3 4 final.layers[\"ambiguous\"] = scipy.sparse.csr_matrix(np.zeros(final.X.shape)) final.obs[\"CellID\"] = final.obs.index final.obs[\"Clusters\"] = final.obs.index.map(them.obs[\"Clusters\"]) final.var[\"Accession\"] = final.var.index 1 2 scv.pp.show_proportions(final) print(final) Abundance of [ 'spliced' , 'unspliced' ]: [ 0.61 0.39 ] AnnData object with n_obs \u00d7 n_vars = 1720 \u00d7 31029 obs : 'batch' , 'bcs' , 'run' , 'CellID' , 'Clusters' var : 'Accession' layers : 'spliced' , 'unspliced'","title":"Take the intersection"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#save-the-final-anndata-as-a-loom-file","text":"1 final.write_loom('final.loom') CPU times: user 4.74 s, sys: 237 ms, total: 4.98 s Wall time: 4.98 s","title":"Save the final Anndata as a Loom file"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#run-the-velocyto-python-pipeline","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 # Some helper functions def array_to_rmatrix(X): nr, nc = X.shape xvec = robj.FloatVector(X.transpose().reshape((X.size))) xr = robj.r.matrix(xvec, nrow=nr, ncol=nc) return xr def principal_curve(X, pca=True): \"\"\" input : numpy.array returns: Result::Object Methods: projections - the matrix of the projectiond ixsort - the order ot the points (as in argsort) arclength - the lenght of the arc from the beginning to the point \"\"\" # convert array to R matrix xr = array_to_rmatrix(X) if pca: #perform pca t = robj.r.prcomp(xr) #determine dimensionality reduction usedcomp = max( sum( np.array(t[t.names.index('sdev')]) > 1.1) , 4) usedcomp = min([usedcomp, sum( np.array(t[t.names.index('sdev')]) > 0.25), X.shape[0]]) Xpc = np.array(t[t.names.index('x')])[:,:usedcomp] # convert array to R matrix xr = array_to_rmatrix(Xpc) #import the correct namespace princurve = importr(\"princurve\", on_conflict=\"warn\") #call the function fit1 = princurve.principal_curve(xr) #extract the outputs class Results: pass results = Results() results.projections = np.array( fit1[0] ) results.ixsort = np.array( fit1[1] ) - 1 # R is 1 indexed results.arclength = np.array( fit1[2] ) results.dist = np.array( fit1[3] ) if pca: results.PCs = np.array(xr) #only the used components return results","title":"Run the Velocyto python pipeline"},{"location":"tutorials/kb_velocity/python/kb_velocity.html#read-the-saved-loom-file-with-velocyto","text":"1 vlm = vcy.VelocytoLoom(\"final.loom\") The rest of the notebook comes from the following notebook: https://github.com/velocyto-team/velocyto-notebooks/blob/master/python/hgForebrainGlutamatergic.ipynb 1 2 3 4 5 6 7 # Load an initial clustering (Louvein) labels = vlm.ca[\"Clusters\"] manual_annotation = {str(i):[i] for i in labels} annotation_dict = {v:k for k, values in manual_annotation.items() for v in values } clusters = np.array([annotation_dict[i] for i in labels]) colors20 = np.vstack((plt.cm.tab20b(np.linspace(0., 1, 20))[::2], plt.cm.tab20c(np.linspace(0, 1, 20))[1::2])) vlm.set_clusters(clusters, cluster_colors_dict={k:colors20[v[0] % 20,:] for k,v in manual_annotation.items()}) 1 2 3 # just to find the initial cell size vlm.normalize(\"S\", size=True, log=False) vlm.normalize(\"U\", size=True, log=False) 1 2 3 vlm.score_detection_levels(min_expr_counts=30, min_cells_express=20, min_expr_counts_U=0, min_cells_express_U=0) vlm.filter_genes(by_detection_levels=True) 1 2 vlm.score_cv_vs_mean(2000, plot=True, max_expr_avg=50, winsorize=True, winsor_perc=(1,99.8), svr_gamma=0.01, min_expr_cells=50) vlm.filter_genes(by_cv_vs_mean=True) 1 2 3 4 5 6 vlm.score_detection_levels(min_expr_counts=0, min_cells_express=0, min_expr_counts_U=25, min_cells_express_U=20) vlm.score_cluster_expression(min_avg_U=0.007, min_avg_S=0.06) vlm.filter_genes(by_detection_levels=True, by_cluster_expression=True) vlm.normalize_by_total(min_perc_U=0.5) vlm.adjust_totS_totU(normalize_total=True, fit_with_low_U=False, svr_C=1, svr_gamma=1e-04) 1 2 3 4 vlm.perform_PCA() plt.plot(np.cumsum(vlm.pca.explained_variance_ratio_)[:100]) n_comps = np.where(np.diff(np.diff(np.cumsum(vlm.pca.explained_variance_ratio_))>0.0055))[0][0] vlm.pcs[:,1] *= -1 # flip for consistency with previous version 1 2 3 4 5 6 7 nn = NearestNeighbors(50) nn.fit(vlm.pcs[:,:4]) knn_pca = nn.kneighbors_graph(mode='distance') knn_pca = knn_pca.tocoo() G = igraph.Graph(list(zip(knn_pca.row, knn_pca.col)), directed=False, edge_attrs={'weight': knn_pca.data}) VxCl = G.community_multilevel(return_levels=False, weights=\"weight\") labels = np.array(VxCl.membership) 1 2 3 pc_obj = principal_curve(vlm.pcs[:,:4], False) pc_obj.arclength = np.max(pc_obj.arclength) - pc_obj.arclength labels = np.argsort(np.argsort(aggregate_np(labels, pc_obj.arclength, func=np.median)))[labels] 1 2 3 4 5 manual_annotation = {str(i):[i] for i in labels} annotation_dict = {v:k for k, values in manual_annotation.items() for v in values } clusters = np.array([annotation_dict[i] for i in labels]) colors20 = np.vstack((plt.cm.tab20b(np.linspace(0., 1, 20))[::2], plt.cm.tab20c(np.linspace(0, 1, 20))[1::2])) vlm.set_clusters(clusters, cluster_colors_dict={k:colors20[v[0] % 20,:] for k,v in manual_annotation.items()}) 1 2 k = 550 vlm.knn_imputation(n_pca_dims=n_comps, k=k) 1 2 vlm.normalize_median() vlm.fit_gammas(maxmin_perc=[2,95], limit_gamma=True) 1 2 vlm.normalize(which=\"imputed\", size=False, log=True) vlm.Pcs = np.array(vlm.pcs[:,:2], order=\"C\") 1 2 3 4 vlm.predict_U() vlm.calculate_velocity() vlm.calculate_shift() vlm.extrapolate_cell_at_t(delta_t=1) 1 2 vlm.estimate_transition_prob(hidim=\"Sx_sz\", embed=\"Pcs\", transform=\"log\", psc=1, n_neighbors=150, knn_random=True, sampled_fraction=1) WARNING : root : Nans encountered in corrcoef and corrected to 1 s . If not identical cells were present it is probably a small isolated cluster converging after imputation . WARNING : root : Nans encountered in corrcoef_random and corrected to 1 s . If not identical cells were present it is probably a small isolated cluster converging after imputation . 1 vlm.calculate_embedding_shift(sigma_corr = 0.05, expression_scaling=False) 1 vlm.calculate_grid_arrows(smooth=0.9, steps=(25, 25), n_neighbors=200) 1 2 3 4 5 6 7 8 9 10 plt.figure(None,(9,9)) vlm.plot_grid_arrows(scatter_kwargs_dict={\"alpha\":0.7, \"lw\":0.7, \"edgecolor\":\"0.4\", \"s\":70, \"rasterized\":True}, min_mass=2.9, angles='xy', scale_units='xy', headaxislength=2.75, headlength=5, headwidth=4.8, quiver_scale=0.35, scale_type=\"absolute\") #plt.plot(pc_obj.projections[pc_obj.ixsort,0], pc_obj.projections[pc_obj.ixsort,1], c=\"w\", lw=6, zorder=1000000) #plt.plot(pc_obj.projections[pc_obj.ixsort,0], pc_obj.projections[pc_obj.ixsort,1], c=\"k\", lw=3, zorder=2000000) plt.gca().invert_xaxis() plt.axis(\"off\") plt.axis(\"equal\"); #plt.savefig(\"kallisto_velocity_forebrain_glut.pdf\") WARNING : root : The arrow scale was set to be 'absolute' make sure you know how to properly interpret the plots","title":"Read the saved Loom file with Velocyto"},{"location":"tutorials/kb_velocity_index/python/kb_velocity_index.html","text":"Constructing a velocity index with kb \u00b6 This tutorial provides instructions for how to generate a velocity index to use with kallisto | bustools using kb . Download reference files \u00b6 Download the genomic (DNA) FASTA and GTF annotations for your desired organism from the database of your choice. This tutorial uses mouse reference files downloaded from Ensembl . 1 2 3 %%time !wget ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz --2020-01-16 00:33:28-- ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz => \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/mus_musculus/dna ... done. ==> SIZE Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... 805984352 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... done. Length: 805984352 (769M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 768.65M 3.78MB/s in 4m 49s 2020-01-16 00:38:18 (2.66 MB/s) - \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 saved [805984352] --2020-01-16 00:38:18-- ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz => \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/mus_musculus ... done. ==> SIZE Mus_musculus.GRCm38.98.gtf.gz ... 30256597 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.98.gtf.gz ... done. Length: 30256597 (29M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 28.85M 17.6MB/s in 1.6s 2020-01-16 00:38:21 (17.6 MB/s) - \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 saved [30256597] CPU times: user 2.91 s, sys: 500 ms, total: 3.41 s Wall time: 4min 53s Install kb \u00b6 1 !pip install git+https://github.com/pachterlab/kb_python@count-kite Collecting git + https : // github . com / pachterlab / kb_python @ count - kite Cloning https : // github . com / pachterlab / kb_python ( to revision count - kite ) to / tmp / pip - req - build - 0 qd_9um1 Running command git clone - q https : // github . com / pachterlab / kb_python / tmp / pip - req - build - 0 qd_9um1 Running command git checkout - b count - kite -- track origin / count - kite Switched to a new branch 'count-kite' Branch 'count-kite' set up to track remote branch 'count-kite' from 'origin' . Requirement already satisfied : anndata >= 0.6 . 22. post1 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 0.6 . 22. post1 ) Requirement already satisfied : loompy >= 3.0 . 6 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 3.0 . 6 ) Requirement already satisfied : requests >= 2.19 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 2.21 . 0 ) Requirement already satisfied : tqdm >= 4.39 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 4.41 . 1 ) Requirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.8 . 0 ) Requirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 0.25 . 3 ) Requirement already satisfied : scipy ~= 1.0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.4 . 1 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 5.5 . 0 ) Requirement already satisfied : numpy ~= 1.14 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.17 . 5 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 42.0 . 2 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 7.0 ) Requirement already satisfied : numpy - groupies in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0 + unknown ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.47 . 0 ) Requirement already satisfied : certifi >= 2017.4 . 17 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2019.11 . 28 ) Requirement already satisfied : idna < 2.9 , >= 2.5 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2.8 ) Requirement already satisfied : chardet < 3.1 . 0 , >= 3.0 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 3.0 . 4 ) Requirement already satisfied : urllib3 < 1.25 , >= 1.21 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 1.24 . 3 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.12 . 0 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2018.9 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.6 . 1 ) Requirement already satisfied : llvmlite >= 0.31 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.31 . 0 ) Building wheels for collected packages : kb - python Building wheel for kb - python ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for kb - python : filename = kb_python - 0.24 . 4 - cp36 - none - any . whl size = 80991434 sha256 = 4 dc5ecd507f54a3aa99e9f4862f2ea29dd9a0ce442af305bf0eff1177f35e22f Stored in directory : / tmp / pip - ephem - wheel - cache - 7 b9entel / wheels / 8 e / 56 / 56 / c89223de74af26792675e82f4bb5223e7cf0d653a33038e34c Successfully built kb - python Installing collected packages : kb - python Successfully installed kb - python - 0.24 . 4 Build the index \u00b6 kb automatically splits the genome into cDNA and intron FASTA files. Because Google Colab has limited memory, we need to split the index into parts (here, we use -n 4 ). This will reduce the maximum memory kb uses, but the runtime of kb count will increase, which is a fair tradeoff in favor of less memory. 1 2 3 4 %%time !kb ref -i index.idx -g t2g.txt -f1 cdna.fa -f2 intron.fa -c1 cdna_t2c.txt -c2 intron_t2c.txt --workflow lamanno -n 8 \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz \\ Mus_musculus.GRCm38.98.gtf.gz [ 2020 - 01 - 16 03 : 31 : 03 , 222 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2020 - 01 - 16 03 : 31 : 03 , 222 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 03 : 31 : 30 , 853 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmpl3plby1k [ 2020 - 01 - 16 03 : 38 : 59 , 002 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 03 : 39 : 03 , 235 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmp7ebqamug [ 2020 - 01 - 16 03 : 40 : 00 , 940 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmp1zp3oo9w [ 2020 - 01 - 16 03 : 40 : 00 , 940 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: GL456213.1, JH584302.1, GL456392.1, JH584300.1, GL456396.1, GL456383.1, GL456389.1, GL456379.1, GL456378.1, GL456359.1, JH584301.1, GL456366.1, GL456360.1, GL456370.1, GL456368.1, GL456390.1, GL456393.1, GL456387.1, GL456382.1, GL456394.1, GL456367.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 03 : 41 : 14 , 163 ] INFO Wrote 142446 cDNA transcripts [ 2020 - 01 - 16 03 : 41 : 14 , 168 ] INFO Creating cDNA transcripts - to - capture at / content / tmp / tmpxjcopm_m [ 2020 - 01 - 16 03 : 41 : 15 , 248 ] INFO Splitting genome into introns at / content / tmp / tmpmo19l2ry [ 2020 - 01 - 16 03 : 45 : 44 , 829 ] INFO Wrote 647972 intron sequences [ 2020 - 01 - 16 03 : 45 : 44 , 836 ] INFO Creating intron transcripts - to - capture at / content / tmp / tmprztg9wry [ 2020 - 01 - 16 03 : 46 : 51 , 138 ] INFO Concatenating 1 cDNA FASTAs to cdna . fa [ 2020 - 01 - 16 03 : 46 : 55 , 954 ] INFO Concatenating 1 cDNA transcripts - to - captures to cdna_t2c . txt [ 2020 - 01 - 16 03 : 46 : 56 , 028 ] INFO Concatenating 1 intron FASTAs to intron . fa [ 2020 - 01 - 16 03 : 47 : 46 , 054 ] INFO Concatenating 1 intron transcripts - to - captures to intron_t2c . txt [ 2020 - 01 - 16 03 : 47 : 46 , 396 ] INFO Concatenating cDNA and intron FASTAs to / content / tmp / tmpn9ihglyn [ 2020 - 01 - 16 03 : 49 : 08 , 305 ] INFO Creating transcript - to - gene mapping at t2g . txt [ 2020 - 01 - 16 03 : 50 : 17 , 445 ] INFO Splitting / content / tmp / tmpn9ihglyn into 8 parts [ 2020 - 01 - 16 03 : 51 : 11 , 012 ] INFO Indexing / content / tmp / tmphffimvvn to index . idx . 0 [ 2020 - 01 - 16 04 : 09 : 50 , 394 ] INFO Indexing / content / tmp / tmpc8mhcmkw to index . idx . 1 [ 2020 - 01 - 16 04 : 25 : 30 , 897 ] INFO Indexing / content / tmp / tmpcpy9f0cj to index . idx . 2 [ 2020 - 01 - 16 04 : 41 : 43 , 273 ] INFO Indexing / content / tmp / tmp6bmc3x9s to index . idx . 3 [ 2020 - 01 - 16 04 : 57 : 03 , 671 ] INFO Indexing / content / tmp / tmpj3nyxnh1 to index . idx . 4 [ 2020 - 01 - 16 05 : 11 : 56 , 815 ] INFO Indexing / content / tmp / tmpwg6y882o to index . idx . 5 [ 2020 - 01 - 16 05 : 27 : 03 , 548 ] INFO Indexing / content / tmp / tmp00l853b4 to index . idx . 6 [ 2020 - 01 - 16 05 : 42 : 58 , 221 ] INFO Indexing / content / tmp / tmpijfn8tph to index . idx . 7 CPU times : user 50 . 3 s , sys : 6 . 14 s , total : 56 . 4 s Wall time : 2 h 27 min 11 s 1","title":"Python"},{"location":"tutorials/kb_velocity_index/python/kb_velocity_index.html#constructing-a-velocity-index-with-kb","text":"This tutorial provides instructions for how to generate a velocity index to use with kallisto | bustools using kb .","title":"Constructing a velocity index with kb"},{"location":"tutorials/kb_velocity_index/python/kb_velocity_index.html#download-reference-files","text":"Download the genomic (DNA) FASTA and GTF annotations for your desired organism from the database of your choice. This tutorial uses mouse reference files downloaded from Ensembl . 1 2 3 %%time !wget ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz !wget ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz --2020-01-16 00:33:28-- ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.primary_assembly.fa.gz => \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/fasta/mus_musculus/dna ... done. ==> SIZE Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... 805984352 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.dna.primary_assembly.fa.gz ... done. Length: 805984352 (769M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 768.65M 3.78MB/s in 4m 49s 2020-01-16 00:38:18 (2.66 MB/s) - \u2018Mus_musculus.GRCm38.dna.primary_assembly.fa.gz\u2019 saved [805984352] --2020-01-16 00:38:18-- ftp://ftp.ensembl.org/pub/release-98/gtf/mus_musculus/Mus_musculus.GRCm38.98.gtf.gz => \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 Resolving ftp.ensembl.org (ftp.ensembl.org)... 193.62.193.8 Connecting to ftp.ensembl.org (ftp.ensembl.org)|193.62.193.8|:21... connected. Logging in as anonymous ... Logged in! ==> SYST ... done. ==> PWD ... done. ==> TYPE I ... done. ==> CWD (1) /pub/release-98/gtf/mus_musculus ... done. ==> SIZE Mus_musculus.GRCm38.98.gtf.gz ... 30256597 ==> PASV ... done. ==> RETR Mus_musculus.GRCm38.98.gtf.gz ... done. Length: 30256597 (29M) (unauthoritative) Mus_musculus.GRCm38 100%[===================>] 28.85M 17.6MB/s in 1.6s 2020-01-16 00:38:21 (17.6 MB/s) - \u2018Mus_musculus.GRCm38.98.gtf.gz\u2019 saved [30256597] CPU times: user 2.91 s, sys: 500 ms, total: 3.41 s Wall time: 4min 53s","title":"Download reference files"},{"location":"tutorials/kb_velocity_index/python/kb_velocity_index.html#install-kb","text":"1 !pip install git+https://github.com/pachterlab/kb_python@count-kite Collecting git + https : // github . com / pachterlab / kb_python @ count - kite Cloning https : // github . com / pachterlab / kb_python ( to revision count - kite ) to / tmp / pip - req - build - 0 qd_9um1 Running command git clone - q https : // github . com / pachterlab / kb_python / tmp / pip - req - build - 0 qd_9um1 Running command git checkout - b count - kite -- track origin / count - kite Switched to a new branch 'count-kite' Branch 'count-kite' set up to track remote branch 'count-kite' from 'origin' . Requirement already satisfied : anndata >= 0.6 . 22. post1 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 0.6 . 22. post1 ) Requirement already satisfied : loompy >= 3.0 . 6 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 3.0 . 6 ) Requirement already satisfied : requests >= 2.19 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 2.21 . 0 ) Requirement already satisfied : tqdm >= 4.39 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from kb - python == 0.24 . 4 ) ( 4.41 . 1 ) Requirement already satisfied : h5py in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.8 . 0 ) Requirement already satisfied : pandas >= 0.23 . 0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 0.25 . 3 ) Requirement already satisfied : scipy ~= 1.0 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.4 . 1 ) Requirement already satisfied : natsort in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 5.5 . 0 ) Requirement already satisfied : numpy ~= 1.14 in / usr / local / lib / python3 . 6 / dist - packages ( from anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.17 . 5 ) Requirement already satisfied : setuptools in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 42.0 . 2 ) Requirement already satisfied : click in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 7.0 ) Requirement already satisfied : numpy - groupies in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0 + unknown ) Requirement already satisfied : numba in / usr / local / lib / python3 . 6 / dist - packages ( from loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.47 . 0 ) Requirement already satisfied : certifi >= 2017.4 . 17 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2019.11 . 28 ) Requirement already satisfied : idna < 2.9 , >= 2.5 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 2.8 ) Requirement already satisfied : chardet < 3.1 . 0 , >= 3.0 . 2 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 3.0 . 4 ) Requirement already satisfied : urllib3 < 1.25 , >= 1.21 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from requests >= 2.19 . 0 -> kb - python == 0.24 . 4 ) ( 1.24 . 3 ) Requirement already satisfied : six in / usr / local / lib / python3 . 6 / dist - packages ( from h5py -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 1.12 . 0 ) Requirement already satisfied : pytz >= 2017.2 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2018.9 ) Requirement already satisfied : python - dateutil >= 2.6 . 1 in / usr / local / lib / python3 . 6 / dist - packages ( from pandas >= 0.23 . 0 -> anndata >= 0.6 . 22. post1 -> kb - python == 0.24 . 4 ) ( 2.6 . 1 ) Requirement already satisfied : llvmlite >= 0.31 . 0 dev0 in / usr / local / lib / python3 . 6 / dist - packages ( from numba -> loompy >= 3.0 . 6 -> kb - python == 0.24 . 4 ) ( 0.31 . 0 ) Building wheels for collected packages : kb - python Building wheel for kb - python ( setup . py ) ... \u001b [ ? 25 l \u001b [ ? 25 hdone Created wheel for kb - python : filename = kb_python - 0.24 . 4 - cp36 - none - any . whl size = 80991434 sha256 = 4 dc5ecd507f54a3aa99e9f4862f2ea29dd9a0ce442af305bf0eff1177f35e22f Stored in directory : / tmp / pip - ephem - wheel - cache - 7 b9entel / wheels / 8 e / 56 / 56 / c89223de74af26792675e82f4bb5223e7cf0d653a33038e34c Successfully built kb - python Installing collected packages : kb - python Successfully installed kb - python - 0.24 . 4","title":"Install kb"},{"location":"tutorials/kb_velocity_index/python/kb_velocity_index.html#build-the-index","text":"kb automatically splits the genome into cDNA and intron FASTA files. Because Google Colab has limited memory, we need to split the index into parts (here, we use -n 4 ). This will reduce the maximum memory kb uses, but the runtime of kb count will increase, which is a fair tradeoff in favor of less memory. 1 2 3 4 %%time !kb ref -i index.idx -g t2g.txt -f1 cdna.fa -f2 intron.fa -c1 cdna_t2c.txt -c2 intron_t2c.txt --workflow lamanno -n 8 \\ Mus_musculus.GRCm38.dna.primary_assembly.fa.gz \\ Mus_musculus.GRCm38.98.gtf.gz [ 2020 - 01 - 16 03 : 31 : 03 , 222 ] INFO Preparing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz , Mus_musculus . GRCm38 . 98 . gtf . gz [ 2020 - 01 - 16 03 : 31 : 03 , 222 ] INFO Decompressing Mus_musculus . GRCm38 . dna . primary_assembly . fa . gz to tmp [ 2020 - 01 - 16 03 : 31 : 30 , 853 ] INFO Sorting tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa to / content / tmp / tmpl3plby1k [ 2020 - 01 - 16 03 : 38 : 59 , 002 ] INFO Decompressing Mus_musculus . GRCm38 . 98 . gtf . gz to tmp [ 2020 - 01 - 16 03 : 39 : 03 , 235 ] INFO Sorting tmp / Mus_musculus . GRCm38 . 98 . gtf to / content / tmp / tmp7ebqamug [ 2020 - 01 - 16 03 : 40 : 00 , 940 ] INFO Splitting genome tmp / Mus_musculus . GRCm38 . dna . primary_assembly . fa into cDNA at / content / tmp / tmp1zp3oo9w [ 2020 - 01 - 16 03 : 40 : 00 , 940 ] WARNING The following chromosomes were found in the FASTA but doens ' t have any \"transcript\" features in the GTF: GL456213.1, JH584302.1, GL456392.1, JH584300.1, GL456396.1, GL456383.1, GL456389.1, GL456379.1, GL456378.1, GL456359.1, JH584301.1, GL456366.1, GL456360.1, GL456370.1, GL456368.1, GL456390.1, GL456393.1, GL456387.1, GL456382.1, GL456394.1, GL456367.1. No sequences will be generated for these chromosomes. [ 2020 - 01 - 16 03 : 41 : 14 , 163 ] INFO Wrote 142446 cDNA transcripts [ 2020 - 01 - 16 03 : 41 : 14 , 168 ] INFO Creating cDNA transcripts - to - capture at / content / tmp / tmpxjcopm_m [ 2020 - 01 - 16 03 : 41 : 15 , 248 ] INFO Splitting genome into introns at / content / tmp / tmpmo19l2ry [ 2020 - 01 - 16 03 : 45 : 44 , 829 ] INFO Wrote 647972 intron sequences [ 2020 - 01 - 16 03 : 45 : 44 , 836 ] INFO Creating intron transcripts - to - capture at / content / tmp / tmprztg9wry [ 2020 - 01 - 16 03 : 46 : 51 , 138 ] INFO Concatenating 1 cDNA FASTAs to cdna . fa [ 2020 - 01 - 16 03 : 46 : 55 , 954 ] INFO Concatenating 1 cDNA transcripts - to - captures to cdna_t2c . txt [ 2020 - 01 - 16 03 : 46 : 56 , 028 ] INFO Concatenating 1 intron FASTAs to intron . fa [ 2020 - 01 - 16 03 : 47 : 46 , 054 ] INFO Concatenating 1 intron transcripts - to - captures to intron_t2c . txt [ 2020 - 01 - 16 03 : 47 : 46 , 396 ] INFO Concatenating cDNA and intron FASTAs to / content / tmp / tmpn9ihglyn [ 2020 - 01 - 16 03 : 49 : 08 , 305 ] INFO Creating transcript - to - gene mapping at t2g . txt [ 2020 - 01 - 16 03 : 50 : 17 , 445 ] INFO Splitting / content / tmp / tmpn9ihglyn into 8 parts [ 2020 - 01 - 16 03 : 51 : 11 , 012 ] INFO Indexing / content / tmp / tmphffimvvn to index . idx . 0 [ 2020 - 01 - 16 04 : 09 : 50 , 394 ] INFO Indexing / content / tmp / tmpc8mhcmkw to index . idx . 1 [ 2020 - 01 - 16 04 : 25 : 30 , 897 ] INFO Indexing / content / tmp / tmpcpy9f0cj to index . idx . 2 [ 2020 - 01 - 16 04 : 41 : 43 , 273 ] INFO Indexing / content / tmp / tmp6bmc3x9s to index . idx . 3 [ 2020 - 01 - 16 04 : 57 : 03 , 671 ] INFO Indexing / content / tmp / tmpj3nyxnh1 to index . idx . 4 [ 2020 - 01 - 16 05 : 11 : 56 , 815 ] INFO Indexing / content / tmp / tmpwg6y882o to index . idx . 5 [ 2020 - 01 - 16 05 : 27 : 03 , 548 ] INFO Indexing / content / tmp / tmp00l853b4 to index . idx . 6 [ 2020 - 01 - 16 05 : 42 : 58 , 221 ] INFO Indexing / content / tmp / tmpijfn8tph to index . idx . 7 CPU times : user 50 . 3 s , sys : 6 . 14 s , total : 56 . 4 s Wall time : 2 h 27 min 11 s 1","title":"Build the index"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html","text":"An introduction to single-cell RNA-seq \u00b6 Written by Sina Booeshaghi* and Lior Pachter*. Based on material taught in Caltech course Bi/BE/CS183 by Lior Pachter and Matt Thomson, with contributions from Sina Booeshaghi, Lambda Lu, Jialong Jiang, Eduardo Beltrame, Jase Gehring, Ingileif Hallgr\u00edmsd\u00f3ttir and Valentine Svensson. \u00b6 *Division of Biology and Biological Engineering, California Institute of Technology \u00b6 The rapid development of single-cell genomics methods starting in 2009 has created unprecedented opportunity for highly resolved measurements of cellular states. Among such methods, single-cell RNA-seq (scRNA-seq) is having a profound impact on biology. Here we introduce some of the key concepts of single-cell RNA-seq technologies, with a focus on droplet based methods. To learn how to pre-process and analyze single-cell RNA-seq explore the following Google Colab notebooks that explain how to go from reads to results: Pre-processing and quality control [ Python , R ] Getting started with analysis [ Python , R ] Building and annotating an atlas [ Python , R ] The kallistobus.tools tutorials site has a extensive list of tutorials and vignettes on single-cell RNA-seq. Setup \u00b6 This notebook is a \"living document\". It downloads data and performs computations. As such it requires the installation of some python packages, which are installed with the commands below. In addition to running on Google Colab, the notebook can be downloaded and run locally on any machine which has python3 installed. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #@title Install packages %%capture !pip install matplotlib !pip install scikit-learn !pip install numpy !pip install scipy !pip install anndata import numpy as np import matplotlib.cm as cm import matplotlib.pyplot as plt import matplotlib.colors as mplcol import matplotlib.font_manager import matplotlib as mpl import pandas as pd import io import anndata from scipy.stats import binom from scipy.stats import poisson from scipy.sparse import csr_matrix from scipy.io import mmread from sklearn import linear_model from IPython.display import HTML from mizani.breaks import date_breaks from mizani.formatters import date_format # Only pandas >= v0.25.0 supports column names with spaces in querys import plotnine as p import requests import warnings import colorsys warnings.filterwarnings(\"ignore\") # plotnine has a lot of MatplotlibDeprecationWarning's import seaborn as sns sns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5}) fsize=20 plt.rcParams.update({'font.size': fsize}) %config InlineBackend.figure_format = 'retina' Motivation \u00b6 The goal of single-cell transcriptomics is to measure the transcriptional states of large numbers of cells simultaneously. The input to a scRNA-seq method is a collection of cells, possibly from intact tissue, or in dissociated form. Formally, the desired output is a transcripts x cells or genes x cells matrix that describes, for each cell, the abundance of its constituent transcripts or genes. More generally, single-cell genomics methods seek to measure not just transcriptional state, but other modalities in cells, e.g. protein abundances, epigenetic states, cellular morphology, etc. The ideal single-cell technology should thus: Be universal in terms of cell size, type and state. Perform in situ measurements. Have no minimum input requirements. Assay every cell, i.e. have a 100% capture rate . Detect every transcript in every cell, i.e. have 100% sensitivity . Identify individual transcripts by their full-length sequence . Assign transcripts correctly to cells, e.g. no doublets . Be compatible with additional multimodal measurements . Be cost effective per cell. Be easy to use . Be open source so that it is transparent, and results from it reproducible. There is no method satisfying all of these requirements, however progress has been rapid. The development of single-cell RNA-seq technologies and their adoption by biologists, has been remarkable. Svensson et al. 2019 describes a database of articles which present single-cell RNA-seq experiments, and the graph below, rendered from the current version of the database , makes clear the exponential growth in single-cell transcriptomics: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #@title Growth of single-cell RNA-seq df = pd.read_csv('http://nxn.se/single-cell-studies/data.tsv', sep='\\t') # converts string to date format, can only be run once! df['Date'] = pd.to_datetime(df['Date'], format='%Y%m%d') # converts string of reported cells total to float, can only be run once! df['Reported cells total'] = df['Reported cells total'].str.replace(',', '').map(float) # plot number of studies over time fig, ax = plt.subplots(figsize=(12, 5)) papers = pd.read_csv('http://nxn.se/single-cell-studies/data.tsv', sep='\\t') papers['Datetime'] = pd.to_datetime(papers['Date'], format='%Y%m%d') papers = papers.sort_values(\"Date\") papers[\"count\"] = 1 x = papers.Datetime y = papers[\"count\"].groupby(papers.Datetime.dt.time).cumsum() ax.plot(x, y, color=\"k\") ax.set_xlabel(\"Date\") ax.set_ylabel(\"Cumulative number of studies\") plt.show() There are many different scRNA-seq technologies in use and under development, but broadly they fall into a few categories - well-based methods (e.g. Fluidigm SMARTer C1, Smart-seq2) - droplet-based methods (e.g. Drop-seq, InDrops, 10X Genomics Chromium) - spatial transcriptomics approaches (e.g. MERFISH, SEQFISH) At the time of initial writing of this document (2019), droplet-based approaches have become popular due to their relative low-cost, easy of use, and scalability. This is evident in a breakdown of articles by technology used: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 #@title Technologies used def tidy_split(df, column, sep='|', keep=False): indexes = list() new_values = list() df = df.dropna(subset=[column]) for i, presplit in enumerate(df[column].astype(str)): values = presplit.split(sep) if keep and len(values) > 1: indexes.append(i) new_values.append(presplit) for value in values: indexes.append(i) new_values.append(value) new_df = df.iloc[indexes, :].copy() new_df[column] = new_values return new_df ts = pd.Timestamp tdf = tidy_split(df, 'Technique', ' & ') t_dict = {k: k for k in tdf['Technique'].value_counts().head(5).index} tdf['Technique'] = tdf['Technique'].map(lambda s: t_dict.get(s, 'Other')) techs = list( tdf['Technique'] .value_counts() .sort_index() .index .difference(['Other']) ) techs.append('Other') tdf['Technique'] = ( pd.Categorical( tdf['Technique'], categories=techs, ordered=True ) ) def desaturate(color, prop): # Check inputs # if not 0 <= prop <= 1: # raise ValueError(\"prop must be between 0 and 1\") # Get rgb tuple rep rgb = mplcol.colorConverter.to_rgb(color) # Convert to hls h, l, s = colorsys.rgb_to_hls(*rgb) # Desaturate the saturation channel # l *= prop l = 0.8 # Convert back to rgb new_color = colorsys.hls_to_rgb(h, l, s) hex_color = '#{:02x}{:02x}{:02x}'.format(*map(lambda c: int(c * 255), new_color)) return hex_color # lighten matplotlib default colors clrs = list(map(lambda c: desaturate(c, 1.2), ['C0', 'C1', 'C2', 'C3', 'C4', 'black'])) #### Plot number of studies per month by technique per_month = ( tdf .groupby('Technique') .resample('1M', on='Date') .count()['DOI'] .reset_index() ) p.options.figure_size = (9, 2) fig = ( p.ggplot( p.aes(x='Date', y='DOI', fill='Technique'), data=per_month.query('Date > @ts(\"20130101T010101\")') ) + p.geom_bar(stat='identity', color='grey') + p.theme_minimal(base_family='DejaVu Sans') + p.scale_x_datetime( breaks=date_breaks('1 years'), labels=date_format('%Y') ) + p.labs(y='Number of studies') + p.scale_fill_manual(clrs) ) fig <ggplot: (8732704734453)> We therefore restrict this exposition to droplet-based technologies. Droplet-based methods \u00b6 Droplet based single-cell RNA-seq methods were popularized by a pair of papers published concurrently in 2015: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 - describes Drop-seq. - Klein et al., Droplet barcoding for single-cell transcriptomics applied to embryonic stem cells , 2015. DOI:10.1016/j.cell.2015.04.044 - descibes inDrops. Both of the methods makes use of developments in microfluidics published in: - Song, Chen, Ismagilov, Reactions in droplets in microfluidic channels , 2006. DOI:10.1002/anie.200601554 - Guo, Rotem, Heyman and Weitz, Droplet microfluidics for high-throughput biological assays , 2012. DOI:10.1039/C2LC21147E Overview \u00b6 An overview of how a droplet based scRNA-seq method works is illustrated in a figure from the Drop-seq Macosko et al. 2015 paper: A microfluidic device is used to generate an emulsion, which consists of aqueous droplets in oil. The droplets are used to encapsulate cells, beads and reagents. In other words, each droplet is a \"mini laboratory\" in which the RNA from a single-cell can be captured and prepared for identification. Thus, the consistuent parts are as follows: an emulsion (white circles containing beads and cells on the right hand-side of the figure). dissociated cells (depicted as odd-shaped colored objects in the figure). beads (flowing in from the left hand side of the figure). Emulsions \u00b6 The foundation of droplet based single-cell RNA-seq methods are mono-dispersed emulsions . Mono-dispersed refers to the requirements that droplets are of (near) uniform size. Mono-dispersed emulsions can be generated with a microfluidic device, as shown below. The droplets are being \"pinched off\" at the junction, and one can see a polystyrene bead being captured in one droplet, while others are empty. The movie is from the McCarolll Drop-seq tutorial courtesy of Patrick Stumpf, Matthew Rose-Zerilli, Rosanna Smith, Martin Fischlechner & Jonathan West at the Centre for Hybrid Biodevices & Cancer Sciences Unit at the University of Southampton. Beads \u00b6 The figure above, reproduce from Klein et al. 2015, shows the procedure used to make hydrogel beads for inDrops. Every bead contains the same barcode sequence, while the barcode sequences on two different beads are distinct. The barcode and UMI structure for a variety of technologies is viewable in a compilation by Xi Chen. Single cell suspensions \u00b6 In order to assay the transcriptomes of individual cells with droplet-based single-cell RNA-seq technologies, it is necessary to first dissociate tissue. Procedures for tissue dissociation are varied, and highly dependent on the organism, type of tissue, and many other factors. Protocols may be be enzymatic, but can also utilize mechanical dissociators. The talk below provides an introduction to tissue handling and dissociation. 1 2 3 #@title Tissue handling and dissociation from IPython.display import HTML HTML('<iframe width=\"882\" height=\"496\" src=\"https://www.youtube.com/embed/ARozvI4AbS8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>') Statistics of beads & cells in droplets \u00b6 The binomial distribution \u00b6 An understanding of droplet-based single-cell RNA-seq requires consideration of the statistics describing the capture of cells and beads in droplets. Suppose that in an experiment multiple droplets have been formed, and focus on one of the droplets. Assume that the probability that any single one of $n$ cells were captured inside it is $p$. We can calculate the probability that $k$ cells have been captured in the droplet as follows: $$ \\mathbb{P}({\\mbox Droplet\\ contains\\ k\\ cells}) = \\binom{n}{k}p^k(1-p)^{n-k}.$$ The expected number of cells in the droplet is $$\\lambda := \\sum_{k=0}^n k \\binom{n}{k}p^k(1-p)^{n-k} = n \\cdot p.$$ We plot this distribution on number of cells in a droplet below. It is called the Binomial distribution and has two parameters: $n$ and $p$. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #@title Binomial distribution { run: \"auto\" } n = 10#@param {type:\"integer\"} p = 0.02 #@param {type:\"slider\", min:0, max:1, step:0.01} fig, ax = plt.subplots(figsize=(7, 4)) s = 10 x = np.arange(s) y = binom.pmf(x,n,p) ax.bar(x, y, color=\"k\", label=\"Binomial n, p = ({}, {})\".format(n,p)) ax.set_xlabel(\"Number of Trials\") ax.set_ylabel(\"Probability\") ax.set_xticks(x) ax.legend() plt.show() With $n=10$ and $p=0.02$, it's quite probable that the droplet is empty, and while possible that it contains one cell, unlikely that it has 2 or more. This is a good regime for a single-cell experiment; we will see that it is problematic if two cells are captured in a single droplet. Empty droplets are not problematic in the sense that they will not lead to data, and can therefore be ignored. The Poisson distribution \u00b6 The Binomial distribution can be difficult to work with in practice. Suppose, for example, that $n=1000$ and $p=0.002$. Suppose that we are interested in the probability of seeing 431 cells in a droplet. This probability is given by $$\\binom{1000}{421}0.02^{421}(1-0.02)^{1000-431},$$ which is evidently a difficult number to calculate exactly. A practical alternative to the binmomial is the Poisson distribution. The Poisson distribution has one parameter, and its support is the non-negative integers. A random variable $X$ is Poisson distributed if $$\\mathbb{P}(X=k)\\quad = \\quad \\frac{e^{-\\lambda}\\lambda^k}{k!}.$$ The Poisson limit theorem states that if $p_n$ is a sequence of real numbers in $[0,1]$ with the sequence $np_n$ converging to to a finite limit $\\lambda$, then $${\\mbox lim}_{n \\rightarrow \\infty} \\binom{n}{k}p_n^{k}(1-p_n)^{n-k} = e^{-\\lambda}\\frac{\\lambda^k}{k!}.$$ Thus, the Poisson distribution serves as a useful, tractable distribution to work with in lieu of the Binomial distribution for large $n$ and small $p$. The histogram below can be used to explore the Poisson and its relationship to the binomial 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #@title Binomial - Poisson comparison { run: \"auto\" } n = 10#@param {type:\"integer\"} p = 0.02 #@param {type:\"slider\", min:0, max:1, step:0.01} s = 10 lambda_param = n*p fig, ax = plt.subplots(figsize=(14, 4), ncols=2) x = np.arange(s) y = poisson.pmf(x, lambda_param) ax[0].bar(x, y, color=\"k\", label=\"Binomial n, p = ({}, {})\".format(n,p)) ax[0].set_xlabel(\"Number of Trials\") ax[0].set_ylabel(\"Probability\") ax[0].set_xticks(x) ax[0].legend() x = np.arange(s) y = binom.pmf(x,n,p) ax[1].bar(x, y, color=\"k\", label=\"Poisson $\\lambda$={}\".format(lambda_param)) ax[1].set_xlabel(\"Number of Trials\") ax[1].set_ylabel(\"Probability\") ax[1].set_xticks(x) ax[1].legend() plt.show() We therefore posit that $$ \\mathbb{P}({\\mbox Droplet\\ contains\\ k\\ cells}) = \\frac{e^{-\\lambda}\\lambda^k}{k!}$$ and $$ \\mathbb{P}({\\mbox Droplet\\ contains\\ j\\ beads}) = \\frac{e^{-\\mu}\\mu^j}{j!}.$$ Droplet tuning \u00b6 Cell capture and bead overload \u00b6 The cell capture rate is the probability that a droplet has at least one bead, and is given by $1-e^{-\\mu}$. The bead overload rate is the rate at which captured single cells are associated with two or more different barcodes, which will happen when multiple beads are loaded into a droplet with one cell. The probability this happens is $$\\frac{1-e^{-\\mu}-\\mu e^{-\\mu}}{1-e^{-\\mu}}.$$ This leads to a tradeoff, as shown below. 1 2 3 4 5 6 7 8 9 10 11 12 13 #@title Tradeoff { run: \"auto\" } fig, ax = plt.subplots(figsize=(5,5)) mu = np.arange(0, 10, 0.1) x = 1 - np.exp(-mu) y = (1 - np.exp(-mu)-mu*np.exp(-mu))/(1-np.exp(-mu)) ax.plot(x, y, color='k') ax.set_xlabel(\"Cell capture rate\") ax.set_ylabel(\"Bead overload rate\") plt.show() Sub-Poisson loading \u00b6 In order to circumvent the limit posed by a Poisson process for beads in droplets, the inDrops method uses tightly packed hydrogel beads that can be injected into droplets without loss. This approach, which leads to \" sub-Poisson loading \" is also used by 10X Genomics, and allows for increased capture rate. The difference is shown in two videos from the Abate lab linked to below. The first video, shows beads loaded being loaded in droplets with Poisson statistics: 1 2 #@title Poisson loading HTML('<iframe width=\"688\" height=\"387\" src=\"https://www.youtube.com/embed/usK71SG30t0?autoplay=1&loop=1&playlist=usK71SG30t0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>') The next video shows sub-Poisson loading with hydrogel beads. In this case the flow rate has been set so that exactly two beads are situated in each droplet. 1 2 #@title Sub-Poisson loading { run: \"auto\" } HTML('<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2q1Lt9DWmRQ?autoplay=1&loop=1&playlist=2q1Lt9DWmRQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>') The following shows the types of beads used for different droplet-based scRNA-seq methods, and associated properties: Property Drop-seq inDrops 10x genomics Bead material Polystyrene Hydrogel Hydrogel Loading dynamics Poisson sub-Poisson sub-Poisson Dissolvable No No Yes Barcode release No UV release Chemical release Customizable Demonstrated Not shown Feasible Licensing Open source Open Source Proprietary Availability Beads are sold Commercial Commercial Barcode collisions \u00b6 Barcode collisions arise when two cells are separately encapsulated with beads that happen to contain identical barcodes. For $n$ assayed cells with $m$ barcodes, the barcode collision rate is the expected proportion of assayed cells that did not receive a unique barcode, i.e. $$1-\\frac{\\mathbb{E}[\\mbox{cells with a unique barcode}]}{\\mbox{number of cells}}$$ $$= 1-(1-\\frac{1}{m})^{n-1} \\approx 1-\\left(\\frac{1}{e}\\right)^\\frac{n}{m}.$$ Avoiding barcode collisions requires high barcode diversity, i.e. a small ratio of $\\frac{n}{m}$. 1 2 3 4 5 6 7 8 9 10 11 12 13 #@title Diversity and collisions { run: \"auto\" } fig, ax = plt.subplots(figsize=(5,5)) bc = np.arange(0, 1, 0.01) x = bc y = 1 - np.exp(-bc) ax.plot(x, y, color='k') ax.set_xlabel(\"n/m\") ax.set_ylabel(\"Barcode collision rate\") plt.show() Barcode diversity and length \u00b6 A 1% barcode collision rate requires a barcode diversity of ~1%, i.e. the number of barcodes should be 100 times the number of cells. The number of barcodes from a sequence of length $L$ is $4^L$. Therefore, to assay $n$ cells, the barcode sequence must be of length at least $log_4n+3\\frac{1}{3}$. This is a minimum and does not account for the need to be robust to sequencing errors. Technical doublets \u00b6 Technical doublets arise when two or more cells are captured in a droplet with a single bead. The technical doublet rate is therefore the probability of capturing two or more cells in a droplet given that at least one cell has been captured in a droplet: $\\frac{1-e^{-\\lambda}-\\lambda e^{-\\lambda}}{1-e^{-\\lambda}}$. Note that \"overloading\" a droplet-based single-cell experiment by loading more cells while keeping flow rates constant will increase the number of technical doublets due to an effective increase in $\\lambda$ and also the number of synthetic doublets due to an increase in barcode diversity. The barnyard plot \u00b6 Technical doublet rates can be measured by experiments in which a mixture of cells from two different species are assayed together. For example, if mouse and human cells are pooled prior to single-cell RNA-seq, the resultant reads ought to be assignable to either human or mouse. If a droplet contained a \"mixed\" doublet, i.e. two cells one of which is from human and the other from mouse, it will generate reads some of which can be aligned to mouse, and some to human. An example from a 10X Genomics dataset ( 5k 1:1 mixture of fresh frozen human (HEK293T) and mouse (NIH3T3) cells ) is shown in the plot below, which is called a Barnyard plot in Macosko et al. 2015 . 1 2 3 4 %%capture # Download a matrix of human and mouse !wget http://cf.10xgenomics.com/samples/cell-exp/3.0.0/hgmm_1k_v2/hgmm_1k_v2_filtered_feature_bc_matrix.tar.gz !tar -xvf hgmm_1k_v2_filtered_feature_bc_matrix.tar.gz 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #@title Human & mouse PBMCs mtx = csr_matrix(mmread(\"/content/filtered_feature_bc_matrix/matrix.mtx.gz\").T) genes = pd.read_csv(\"/content/filtered_feature_bc_matrix/features.tsv.gz\", header=None, names=[\"gene_id\", \"gene_name\", \"extra\"], sep=\"\\t\") cells = pd.read_csv(\"/content/filtered_feature_bc_matrix/barcodes.tsv.gz\", header=None, names=[\"cell_barcode\"], sep=\"\\t\") adata = anndata.AnnData(X=mtx, var=genes, obs=cells) adata.var[\"human\"] = adata.var[\"gene_id\"].str.contains(\"hg19\").values x = (mtx[:,adata.var[\"human\"].values]).sum(axis=1) y = (mtx[:,~adata.var[\"human\"].values]).sum(axis=1) fig, ax = plt.subplots(figsize=(5,5)) x = np.asarray(x).reshape(-1) y = np.asarray(y).reshape(-1) ax.scatter(x, y, color='k') ax.set_xlabel(\"Human UMI counts per cell\") ax.set_ylabel(\"Mouse UMI counts per cell\") ax.xaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}')) ax.yaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}')) plt.show() THe plot shows that there are only 7 doublets out of 5,000 cells in this experiment. This is an unusually small number and atypical of most experiments, where doublet rates are between 5%--15% (see DePasquale et al. 2018 ); perhaps the 5k human mouse PBMC dataset data is articularly \"clean\" as it is an advertisement distributed by 10X Genomics. Bloom's correction \u00b6 The 7 doublets identifiable by eye in the plot above are all mixed doublets , i.e. they contain one human and one mouse cell. However doublets may consist of two mouse cells, or two human cells. If the number of droplets containing at least one human cells is $n_1$, the number containing at least one mouse cell is $n_2$, and the number of mixed doublets is $n_{1,2}$, then an estimate for the actual doublet rate can be obtained from the calculation below ( Bloom 2018 ): Given $n_1, n_2$ and $n_{1,2}$ as described above (note that $n_1$ is the number of cells on the x axis + the number of mixed doublets and $n_2$ is the number of cells on the y axis + the number of mixed doublets), then in expectation $$\\frac{n_1}{N} \\cdot \\frac{n_2}{N} = \\frac{n_{1,2}}{N}, $$ where $N$ is the total number of droplets. From this we see that $$ \\hat{N} = \\frac{n_1 \\cdot n_2}{n_{1,2}}.$$ This is the maximum likelihood Lincoln-Petersen estimator for population size from mark and recapture. Let $\\mu_1$ nad $\\mu_2$ be the Poisson rates for the respective types of cells, i.e. the average number of cells of each type per droplet. Then $$ \\hat{\\mu}_1 = -\\mbox{ln } \\left( \\frac{N-n_1}{N} \\right)$$ and $$ \\hat{\\mu}_2 = -\\mbox{ln } \\left( \\frac{N-n_2}{N} \\right).$$ From this the doublet rate $D$ can be estimated as $$\\hat{D} = 1 - \\frac{(\\mu_1+\\mu_2)e^{-\\mu_1+\\mu_2}}{1-e^{-\\mu_1-\\mu_2}}.$$ Biological doublets \u00b6 Biological doublets arise when two cells form a discrete unit that does not break apart during disruption to form a single-cell suspension. Note that biological doublets cannot be detected in barnyard plots. One approach to avoiding biological doublets is to perform single-nuclei RNA-seq. See, e.g. Habib et al., 2017 . However, biological doublets are not necessarily just a technical artifact to be avoided. Halpern et al., 2018 utilizes biological doublets of hepatocytes and liver endothelial cells to assign tissue coordinates to liver endothelial cells via imputation from their hepatocyte partners. Unique Molecular Identifiers \u00b6 The number of distinct UMIs on a bead in a droplet is at most $4^L$ where $L$ is the number of UMI bases. For example, for 10X Genomics v2 technology $L=10$ and for 10X Genomics v3 technology $L=12$. Melsted, Booeshaghi et al. 2019 show how to estimate the number of the actual distinct UMIs on each bead for which data is obtained in a scRNA-seq experiment. Summary \u00b6 Selection of a single-cell RNA-seq method requires choosing among many tradeoffs that reflect the underlying technologies. The table below, from From Zhang et al. 2019. DOI:10.1016/j.molcel.2018.10.020 , summarizes the three most popular droplet-based single-cell RNA-seq assays: The generation of single-cell RNA-seq data is just the first step in understanding the transcriptomes cells. To interpret the data reads must be aligned or pseudoaligned, UMIs counted, and large cell x gene matrices examined. The growth in single-cell RNA-seq analysis tools for these tasks has been breathtaking. The graph below, plotted from real-time data downloaded from the scRNA-seq tools database , shows the number of tools published since 2016. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #@title Growth of single-cell tools { run: \"auto\" } tools = pd.read_csv('https://raw.githubusercontent.com/Oshlack/scRNA-tools/master/database/tools.tsv', sep='\\t') tools[\"Datetime\"] = pd.to_datetime(tools[\"Added\"]) tools = tools.sort_values(\"Added\") tools[\"count\"] = 1 fig, ax = plt.subplots(figsize=(12, 5)) x = tools.Datetime y = tools[\"count\"].groupby(tools.Datetime.dt.time).cumsum() ax.plot(x, y, color=\"k\") ax.set_xlabel(\"Date\") ax.set_ylabel(\"Number of tools\") ax.tick_params(axis='x', rotation=45) plt.show() In fact, the rate of growth of single-cell RNA-seq tools is similar to that of single-cell RNA-seq studies : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #@title scRNA-seq tools vs. studies linear regression date_papers = papers.groupby(\"Datetime\")[\"count\"].sum() date_tools = tools.groupby(\"Datetime\")[\"count\"].sum() dates = pd.date_range(start='7/26/2002', end='01/01/2025') combined = pd.DataFrame(index=dates) combined[\"tool_counts\"] = combined.index.map(date_tools) combined[\"paper_counts\"] = combined.index.map(date_papers) combined = combined.fillna(0) combined[\"Datetime\"] = combined.index.values fig, ax = plt.subplots(figsize=(5,5)) x = combined[\"paper_counts\"].groupby(combined.Datetime.dt.time).cumsum() y = combined[\"tool_counts\"].groupby(combined.Datetime.dt.time).cumsum() ax.scatter(x, y, color=\"k\") regr = linear_model.LinearRegression() x = x.values[:, np.newaxis] regr.fit(x, y.values) xx = np.linspace(0, max(x), 200) yy = regr.intercept_ + regr.coef_*xx ax.plot(xx, yy, color=\"r\", label=f\"{regr.intercept_:,.2f} + {regr.coef_[0]:,.2f}*x\") lims = [np.min([ax.get_xlim(), ax.get_ylim()]), # min of both axes np.max([ax.get_xlim(), ax.get_ylim()])] # max of both axes ax.plot(lims, lims, 'k-', alpha=0.75, zorder=0) ax.set_aspect('equal') ax.set_xlim(lims) ax.set_ylim(lims) ax.set_xlabel(\"Cumulative Papers\") ax.set_ylabel(\"Cumulative Tools\") ax.legend() plt.show() Next step: to learn how to analyze single-cell RNA-seq data, visit the kallistobus.tools site tutorials site and explore the \"Introduction 1: pre-processing and quality control\" notebook in Python or R . Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"Python"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#an-introduction-to-single-cell-rna-seq","text":"","title":"An introduction to single-cell RNA-seq"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#written-by-sina-booeshaghi-and-lior-pachter-based-on-material-taught-in-caltech-course-bibecs183-by-lior-pachter-and-matt-thomson-with-contributions-from-sina-booeshaghi-lambda-lu-jialong-jiang-eduardo-beltrame-jase-gehring-ingileif-hallgrimsdottir-and-valentine-svensson","text":"","title":"Written by Sina Booeshaghi* and Lior Pachter*. Based on material taught in Caltech course Bi/BE/CS183 by Lior Pachter and Matt Thomson, with contributions from Sina Booeshaghi, Lambda Lu, Jialong Jiang, Eduardo Beltrame, Jase Gehring, Ingileif Hallgr\u00edmsd\u00f3ttir and Valentine Svensson."},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#division-of-biology-and-biological-engineering-california-institute-of-technology","text":"The rapid development of single-cell genomics methods starting in 2009 has created unprecedented opportunity for highly resolved measurements of cellular states. Among such methods, single-cell RNA-seq (scRNA-seq) is having a profound impact on biology. Here we introduce some of the key concepts of single-cell RNA-seq technologies, with a focus on droplet based methods. To learn how to pre-process and analyze single-cell RNA-seq explore the following Google Colab notebooks that explain how to go from reads to results: Pre-processing and quality control [ Python , R ] Getting started with analysis [ Python , R ] Building and annotating an atlas [ Python , R ] The kallistobus.tools tutorials site has a extensive list of tutorials and vignettes on single-cell RNA-seq.","title":"*Division of Biology and Biological Engineering, California Institute of Technology"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#setup","text":"This notebook is a \"living document\". It downloads data and performs computations. As such it requires the installation of some python packages, which are installed with the commands below. In addition to running on Google Colab, the notebook can be downloaded and run locally on any machine which has python3 installed. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #@title Install packages %%capture !pip install matplotlib !pip install scikit-learn !pip install numpy !pip install scipy !pip install anndata import numpy as np import matplotlib.cm as cm import matplotlib.pyplot as plt import matplotlib.colors as mplcol import matplotlib.font_manager import matplotlib as mpl import pandas as pd import io import anndata from scipy.stats import binom from scipy.stats import poisson from scipy.sparse import csr_matrix from scipy.io import mmread from sklearn import linear_model from IPython.display import HTML from mizani.breaks import date_breaks from mizani.formatters import date_format # Only pandas >= v0.25.0 supports column names with spaces in querys import plotnine as p import requests import warnings import colorsys warnings.filterwarnings(\"ignore\") # plotnine has a lot of MatplotlibDeprecationWarning's import seaborn as sns sns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5}) fsize=20 plt.rcParams.update({'font.size': fsize}) %config InlineBackend.figure_format = 'retina'","title":"Setup"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#motivation","text":"The goal of single-cell transcriptomics is to measure the transcriptional states of large numbers of cells simultaneously. The input to a scRNA-seq method is a collection of cells, possibly from intact tissue, or in dissociated form. Formally, the desired output is a transcripts x cells or genes x cells matrix that describes, for each cell, the abundance of its constituent transcripts or genes. More generally, single-cell genomics methods seek to measure not just transcriptional state, but other modalities in cells, e.g. protein abundances, epigenetic states, cellular morphology, etc. The ideal single-cell technology should thus: Be universal in terms of cell size, type and state. Perform in situ measurements. Have no minimum input requirements. Assay every cell, i.e. have a 100% capture rate . Detect every transcript in every cell, i.e. have 100% sensitivity . Identify individual transcripts by their full-length sequence . Assign transcripts correctly to cells, e.g. no doublets . Be compatible with additional multimodal measurements . Be cost effective per cell. Be easy to use . Be open source so that it is transparent, and results from it reproducible. There is no method satisfying all of these requirements, however progress has been rapid. The development of single-cell RNA-seq technologies and their adoption by biologists, has been remarkable. Svensson et al. 2019 describes a database of articles which present single-cell RNA-seq experiments, and the graph below, rendered from the current version of the database , makes clear the exponential growth in single-cell transcriptomics: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #@title Growth of single-cell RNA-seq df = pd.read_csv('http://nxn.se/single-cell-studies/data.tsv', sep='\\t') # converts string to date format, can only be run once! df['Date'] = pd.to_datetime(df['Date'], format='%Y%m%d') # converts string of reported cells total to float, can only be run once! df['Reported cells total'] = df['Reported cells total'].str.replace(',', '').map(float) # plot number of studies over time fig, ax = plt.subplots(figsize=(12, 5)) papers = pd.read_csv('http://nxn.se/single-cell-studies/data.tsv', sep='\\t') papers['Datetime'] = pd.to_datetime(papers['Date'], format='%Y%m%d') papers = papers.sort_values(\"Date\") papers[\"count\"] = 1 x = papers.Datetime y = papers[\"count\"].groupby(papers.Datetime.dt.time).cumsum() ax.plot(x, y, color=\"k\") ax.set_xlabel(\"Date\") ax.set_ylabel(\"Cumulative number of studies\") plt.show() There are many different scRNA-seq technologies in use and under development, but broadly they fall into a few categories - well-based methods (e.g. Fluidigm SMARTer C1, Smart-seq2) - droplet-based methods (e.g. Drop-seq, InDrops, 10X Genomics Chromium) - spatial transcriptomics approaches (e.g. MERFISH, SEQFISH) At the time of initial writing of this document (2019), droplet-based approaches have become popular due to their relative low-cost, easy of use, and scalability. This is evident in a breakdown of articles by technology used: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 #@title Technologies used def tidy_split(df, column, sep='|', keep=False): indexes = list() new_values = list() df = df.dropna(subset=[column]) for i, presplit in enumerate(df[column].astype(str)): values = presplit.split(sep) if keep and len(values) > 1: indexes.append(i) new_values.append(presplit) for value in values: indexes.append(i) new_values.append(value) new_df = df.iloc[indexes, :].copy() new_df[column] = new_values return new_df ts = pd.Timestamp tdf = tidy_split(df, 'Technique', ' & ') t_dict = {k: k for k in tdf['Technique'].value_counts().head(5).index} tdf['Technique'] = tdf['Technique'].map(lambda s: t_dict.get(s, 'Other')) techs = list( tdf['Technique'] .value_counts() .sort_index() .index .difference(['Other']) ) techs.append('Other') tdf['Technique'] = ( pd.Categorical( tdf['Technique'], categories=techs, ordered=True ) ) def desaturate(color, prop): # Check inputs # if not 0 <= prop <= 1: # raise ValueError(\"prop must be between 0 and 1\") # Get rgb tuple rep rgb = mplcol.colorConverter.to_rgb(color) # Convert to hls h, l, s = colorsys.rgb_to_hls(*rgb) # Desaturate the saturation channel # l *= prop l = 0.8 # Convert back to rgb new_color = colorsys.hls_to_rgb(h, l, s) hex_color = '#{:02x}{:02x}{:02x}'.format(*map(lambda c: int(c * 255), new_color)) return hex_color # lighten matplotlib default colors clrs = list(map(lambda c: desaturate(c, 1.2), ['C0', 'C1', 'C2', 'C3', 'C4', 'black'])) #### Plot number of studies per month by technique per_month = ( tdf .groupby('Technique') .resample('1M', on='Date') .count()['DOI'] .reset_index() ) p.options.figure_size = (9, 2) fig = ( p.ggplot( p.aes(x='Date', y='DOI', fill='Technique'), data=per_month.query('Date > @ts(\"20130101T010101\")') ) + p.geom_bar(stat='identity', color='grey') + p.theme_minimal(base_family='DejaVu Sans') + p.scale_x_datetime( breaks=date_breaks('1 years'), labels=date_format('%Y') ) + p.labs(y='Number of studies') + p.scale_fill_manual(clrs) ) fig <ggplot: (8732704734453)> We therefore restrict this exposition to droplet-based technologies.","title":"Motivation"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#droplet-based-methods","text":"Droplet based single-cell RNA-seq methods were popularized by a pair of papers published concurrently in 2015: - Macosko et al., Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets , 2015. DOI:10.1016/j.cell.2015.05.002 - describes Drop-seq. - Klein et al., Droplet barcoding for single-cell transcriptomics applied to embryonic stem cells , 2015. DOI:10.1016/j.cell.2015.04.044 - descibes inDrops. Both of the methods makes use of developments in microfluidics published in: - Song, Chen, Ismagilov, Reactions in droplets in microfluidic channels , 2006. DOI:10.1002/anie.200601554 - Guo, Rotem, Heyman and Weitz, Droplet microfluidics for high-throughput biological assays , 2012. DOI:10.1039/C2LC21147E","title":"Droplet-based methods"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#overview","text":"An overview of how a droplet based scRNA-seq method works is illustrated in a figure from the Drop-seq Macosko et al. 2015 paper: A microfluidic device is used to generate an emulsion, which consists of aqueous droplets in oil. The droplets are used to encapsulate cells, beads and reagents. In other words, each droplet is a \"mini laboratory\" in which the RNA from a single-cell can be captured and prepared for identification. Thus, the consistuent parts are as follows: an emulsion (white circles containing beads and cells on the right hand-side of the figure). dissociated cells (depicted as odd-shaped colored objects in the figure). beads (flowing in from the left hand side of the figure).","title":"Overview"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#emulsions","text":"The foundation of droplet based single-cell RNA-seq methods are mono-dispersed emulsions . Mono-dispersed refers to the requirements that droplets are of (near) uniform size. Mono-dispersed emulsions can be generated with a microfluidic device, as shown below. The droplets are being \"pinched off\" at the junction, and one can see a polystyrene bead being captured in one droplet, while others are empty. The movie is from the McCarolll Drop-seq tutorial courtesy of Patrick Stumpf, Matthew Rose-Zerilli, Rosanna Smith, Martin Fischlechner & Jonathan West at the Centre for Hybrid Biodevices & Cancer Sciences Unit at the University of Southampton.","title":"Emulsions"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#beads","text":"The figure above, reproduce from Klein et al. 2015, shows the procedure used to make hydrogel beads for inDrops. Every bead contains the same barcode sequence, while the barcode sequences on two different beads are distinct. The barcode and UMI structure for a variety of technologies is viewable in a compilation by Xi Chen.","title":"Beads"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#single-cell-suspensions","text":"In order to assay the transcriptomes of individual cells with droplet-based single-cell RNA-seq technologies, it is necessary to first dissociate tissue. Procedures for tissue dissociation are varied, and highly dependent on the organism, type of tissue, and many other factors. Protocols may be be enzymatic, but can also utilize mechanical dissociators. The talk below provides an introduction to tissue handling and dissociation. 1 2 3 #@title Tissue handling and dissociation from IPython.display import HTML HTML('<iframe width=\"882\" height=\"496\" src=\"https://www.youtube.com/embed/ARozvI4AbS8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>')","title":"Single cell suspensions"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#statistics-of-beads-cells-in-droplets","text":"","title":"Statistics of beads &amp; cells in droplets"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#the-binomial-distribution","text":"An understanding of droplet-based single-cell RNA-seq requires consideration of the statistics describing the capture of cells and beads in droplets. Suppose that in an experiment multiple droplets have been formed, and focus on one of the droplets. Assume that the probability that any single one of $n$ cells were captured inside it is $p$. We can calculate the probability that $k$ cells have been captured in the droplet as follows: $$ \\mathbb{P}({\\mbox Droplet\\ contains\\ k\\ cells}) = \\binom{n}{k}p^k(1-p)^{n-k}.$$ The expected number of cells in the droplet is $$\\lambda := \\sum_{k=0}^n k \\binom{n}{k}p^k(1-p)^{n-k} = n \\cdot p.$$ We plot this distribution on number of cells in a droplet below. It is called the Binomial distribution and has two parameters: $n$ and $p$. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #@title Binomial distribution { run: \"auto\" } n = 10#@param {type:\"integer\"} p = 0.02 #@param {type:\"slider\", min:0, max:1, step:0.01} fig, ax = plt.subplots(figsize=(7, 4)) s = 10 x = np.arange(s) y = binom.pmf(x,n,p) ax.bar(x, y, color=\"k\", label=\"Binomial n, p = ({}, {})\".format(n,p)) ax.set_xlabel(\"Number of Trials\") ax.set_ylabel(\"Probability\") ax.set_xticks(x) ax.legend() plt.show() With $n=10$ and $p=0.02$, it's quite probable that the droplet is empty, and while possible that it contains one cell, unlikely that it has 2 or more. This is a good regime for a single-cell experiment; we will see that it is problematic if two cells are captured in a single droplet. Empty droplets are not problematic in the sense that they will not lead to data, and can therefore be ignored.","title":"The binomial distribution"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#the-poisson-distribution","text":"The Binomial distribution can be difficult to work with in practice. Suppose, for example, that $n=1000$ and $p=0.002$. Suppose that we are interested in the probability of seeing 431 cells in a droplet. This probability is given by $$\\binom{1000}{421}0.02^{421}(1-0.02)^{1000-431},$$ which is evidently a difficult number to calculate exactly. A practical alternative to the binmomial is the Poisson distribution. The Poisson distribution has one parameter, and its support is the non-negative integers. A random variable $X$ is Poisson distributed if $$\\mathbb{P}(X=k)\\quad = \\quad \\frac{e^{-\\lambda}\\lambda^k}{k!}.$$ The Poisson limit theorem states that if $p_n$ is a sequence of real numbers in $[0,1]$ with the sequence $np_n$ converging to to a finite limit $\\lambda$, then $${\\mbox lim}_{n \\rightarrow \\infty} \\binom{n}{k}p_n^{k}(1-p_n)^{n-k} = e^{-\\lambda}\\frac{\\lambda^k}{k!}.$$ Thus, the Poisson distribution serves as a useful, tractable distribution to work with in lieu of the Binomial distribution for large $n$ and small $p$. The histogram below can be used to explore the Poisson and its relationship to the binomial 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #@title Binomial - Poisson comparison { run: \"auto\" } n = 10#@param {type:\"integer\"} p = 0.02 #@param {type:\"slider\", min:0, max:1, step:0.01} s = 10 lambda_param = n*p fig, ax = plt.subplots(figsize=(14, 4), ncols=2) x = np.arange(s) y = poisson.pmf(x, lambda_param) ax[0].bar(x, y, color=\"k\", label=\"Binomial n, p = ({}, {})\".format(n,p)) ax[0].set_xlabel(\"Number of Trials\") ax[0].set_ylabel(\"Probability\") ax[0].set_xticks(x) ax[0].legend() x = np.arange(s) y = binom.pmf(x,n,p) ax[1].bar(x, y, color=\"k\", label=\"Poisson $\\lambda$={}\".format(lambda_param)) ax[1].set_xlabel(\"Number of Trials\") ax[1].set_ylabel(\"Probability\") ax[1].set_xticks(x) ax[1].legend() plt.show() We therefore posit that $$ \\mathbb{P}({\\mbox Droplet\\ contains\\ k\\ cells}) = \\frac{e^{-\\lambda}\\lambda^k}{k!}$$ and $$ \\mathbb{P}({\\mbox Droplet\\ contains\\ j\\ beads}) = \\frac{e^{-\\mu}\\mu^j}{j!}.$$","title":"The Poisson distribution"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#droplet-tuning","text":"","title":"Droplet tuning"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#cell-capture-and-bead-overload","text":"The cell capture rate is the probability that a droplet has at least one bead, and is given by $1-e^{-\\mu}$. The bead overload rate is the rate at which captured single cells are associated with two or more different barcodes, which will happen when multiple beads are loaded into a droplet with one cell. The probability this happens is $$\\frac{1-e^{-\\mu}-\\mu e^{-\\mu}}{1-e^{-\\mu}}.$$ This leads to a tradeoff, as shown below. 1 2 3 4 5 6 7 8 9 10 11 12 13 #@title Tradeoff { run: \"auto\" } fig, ax = plt.subplots(figsize=(5,5)) mu = np.arange(0, 10, 0.1) x = 1 - np.exp(-mu) y = (1 - np.exp(-mu)-mu*np.exp(-mu))/(1-np.exp(-mu)) ax.plot(x, y, color='k') ax.set_xlabel(\"Cell capture rate\") ax.set_ylabel(\"Bead overload rate\") plt.show()","title":"Cell capture and bead overload"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#sub-poisson-loading","text":"In order to circumvent the limit posed by a Poisson process for beads in droplets, the inDrops method uses tightly packed hydrogel beads that can be injected into droplets without loss. This approach, which leads to \" sub-Poisson loading \" is also used by 10X Genomics, and allows for increased capture rate. The difference is shown in two videos from the Abate lab linked to below. The first video, shows beads loaded being loaded in droplets with Poisson statistics: 1 2 #@title Poisson loading HTML('<iframe width=\"688\" height=\"387\" src=\"https://www.youtube.com/embed/usK71SG30t0?autoplay=1&loop=1&playlist=usK71SG30t0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>') The next video shows sub-Poisson loading with hydrogel beads. In this case the flow rate has been set so that exactly two beads are situated in each droplet. 1 2 #@title Sub-Poisson loading { run: \"auto\" } HTML('<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2q1Lt9DWmRQ?autoplay=1&loop=1&playlist=2q1Lt9DWmRQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>') The following shows the types of beads used for different droplet-based scRNA-seq methods, and associated properties: Property Drop-seq inDrops 10x genomics Bead material Polystyrene Hydrogel Hydrogel Loading dynamics Poisson sub-Poisson sub-Poisson Dissolvable No No Yes Barcode release No UV release Chemical release Customizable Demonstrated Not shown Feasible Licensing Open source Open Source Proprietary Availability Beads are sold Commercial Commercial","title":"Sub-Poisson loading"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#barcode-collisions","text":"Barcode collisions arise when two cells are separately encapsulated with beads that happen to contain identical barcodes. For $n$ assayed cells with $m$ barcodes, the barcode collision rate is the expected proportion of assayed cells that did not receive a unique barcode, i.e. $$1-\\frac{\\mathbb{E}[\\mbox{cells with a unique barcode}]}{\\mbox{number of cells}}$$ $$= 1-(1-\\frac{1}{m})^{n-1} \\approx 1-\\left(\\frac{1}{e}\\right)^\\frac{n}{m}.$$ Avoiding barcode collisions requires high barcode diversity, i.e. a small ratio of $\\frac{n}{m}$. 1 2 3 4 5 6 7 8 9 10 11 12 13 #@title Diversity and collisions { run: \"auto\" } fig, ax = plt.subplots(figsize=(5,5)) bc = np.arange(0, 1, 0.01) x = bc y = 1 - np.exp(-bc) ax.plot(x, y, color='k') ax.set_xlabel(\"n/m\") ax.set_ylabel(\"Barcode collision rate\") plt.show()","title":"Barcode collisions"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#barcode-diversity-and-length","text":"A 1% barcode collision rate requires a barcode diversity of ~1%, i.e. the number of barcodes should be 100 times the number of cells. The number of barcodes from a sequence of length $L$ is $4^L$. Therefore, to assay $n$ cells, the barcode sequence must be of length at least $log_4n+3\\frac{1}{3}$. This is a minimum and does not account for the need to be robust to sequencing errors.","title":"Barcode diversity and length"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#technical-doublets","text":"Technical doublets arise when two or more cells are captured in a droplet with a single bead. The technical doublet rate is therefore the probability of capturing two or more cells in a droplet given that at least one cell has been captured in a droplet: $\\frac{1-e^{-\\lambda}-\\lambda e^{-\\lambda}}{1-e^{-\\lambda}}$. Note that \"overloading\" a droplet-based single-cell experiment by loading more cells while keeping flow rates constant will increase the number of technical doublets due to an effective increase in $\\lambda$ and also the number of synthetic doublets due to an increase in barcode diversity.","title":"Technical doublets"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#the-barnyard-plot","text":"Technical doublet rates can be measured by experiments in which a mixture of cells from two different species are assayed together. For example, if mouse and human cells are pooled prior to single-cell RNA-seq, the resultant reads ought to be assignable to either human or mouse. If a droplet contained a \"mixed\" doublet, i.e. two cells one of which is from human and the other from mouse, it will generate reads some of which can be aligned to mouse, and some to human. An example from a 10X Genomics dataset ( 5k 1:1 mixture of fresh frozen human (HEK293T) and mouse (NIH3T3) cells ) is shown in the plot below, which is called a Barnyard plot in Macosko et al. 2015 . 1 2 3 4 %%capture # Download a matrix of human and mouse !wget http://cf.10xgenomics.com/samples/cell-exp/3.0.0/hgmm_1k_v2/hgmm_1k_v2_filtered_feature_bc_matrix.tar.gz !tar -xvf hgmm_1k_v2_filtered_feature_bc_matrix.tar.gz 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #@title Human & mouse PBMCs mtx = csr_matrix(mmread(\"/content/filtered_feature_bc_matrix/matrix.mtx.gz\").T) genes = pd.read_csv(\"/content/filtered_feature_bc_matrix/features.tsv.gz\", header=None, names=[\"gene_id\", \"gene_name\", \"extra\"], sep=\"\\t\") cells = pd.read_csv(\"/content/filtered_feature_bc_matrix/barcodes.tsv.gz\", header=None, names=[\"cell_barcode\"], sep=\"\\t\") adata = anndata.AnnData(X=mtx, var=genes, obs=cells) adata.var[\"human\"] = adata.var[\"gene_id\"].str.contains(\"hg19\").values x = (mtx[:,adata.var[\"human\"].values]).sum(axis=1) y = (mtx[:,~adata.var[\"human\"].values]).sum(axis=1) fig, ax = plt.subplots(figsize=(5,5)) x = np.asarray(x).reshape(-1) y = np.asarray(y).reshape(-1) ax.scatter(x, y, color='k') ax.set_xlabel(\"Human UMI counts per cell\") ax.set_ylabel(\"Mouse UMI counts per cell\") ax.xaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}')) ax.yaxis.set_major_formatter(mpl.ticker.StrMethodFormatter('{x:,.0f}')) plt.show() THe plot shows that there are only 7 doublets out of 5,000 cells in this experiment. This is an unusually small number and atypical of most experiments, where doublet rates are between 5%--15% (see DePasquale et al. 2018 ); perhaps the 5k human mouse PBMC dataset data is articularly \"clean\" as it is an advertisement distributed by 10X Genomics.","title":"The barnyard plot"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#blooms-correction","text":"The 7 doublets identifiable by eye in the plot above are all mixed doublets , i.e. they contain one human and one mouse cell. However doublets may consist of two mouse cells, or two human cells. If the number of droplets containing at least one human cells is $n_1$, the number containing at least one mouse cell is $n_2$, and the number of mixed doublets is $n_{1,2}$, then an estimate for the actual doublet rate can be obtained from the calculation below ( Bloom 2018 ): Given $n_1, n_2$ and $n_{1,2}$ as described above (note that $n_1$ is the number of cells on the x axis + the number of mixed doublets and $n_2$ is the number of cells on the y axis + the number of mixed doublets), then in expectation $$\\frac{n_1}{N} \\cdot \\frac{n_2}{N} = \\frac{n_{1,2}}{N}, $$ where $N$ is the total number of droplets. From this we see that $$ \\hat{N} = \\frac{n_1 \\cdot n_2}{n_{1,2}}.$$ This is the maximum likelihood Lincoln-Petersen estimator for population size from mark and recapture. Let $\\mu_1$ nad $\\mu_2$ be the Poisson rates for the respective types of cells, i.e. the average number of cells of each type per droplet. Then $$ \\hat{\\mu}_1 = -\\mbox{ln } \\left( \\frac{N-n_1}{N} \\right)$$ and $$ \\hat{\\mu}_2 = -\\mbox{ln } \\left( \\frac{N-n_2}{N} \\right).$$ From this the doublet rate $D$ can be estimated as $$\\hat{D} = 1 - \\frac{(\\mu_1+\\mu_2)e^{-\\mu_1+\\mu_2}}{1-e^{-\\mu_1-\\mu_2}}.$$","title":"Bloom's correction"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#biological-doublets","text":"Biological doublets arise when two cells form a discrete unit that does not break apart during disruption to form a single-cell suspension. Note that biological doublets cannot be detected in barnyard plots. One approach to avoiding biological doublets is to perform single-nuclei RNA-seq. See, e.g. Habib et al., 2017 . However, biological doublets are not necessarily just a technical artifact to be avoided. Halpern et al., 2018 utilizes biological doublets of hepatocytes and liver endothelial cells to assign tissue coordinates to liver endothelial cells via imputation from their hepatocyte partners.","title":"Biological doublets"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#unique-molecular-identifiers","text":"The number of distinct UMIs on a bead in a droplet is at most $4^L$ where $L$ is the number of UMI bases. For example, for 10X Genomics v2 technology $L=10$ and for 10X Genomics v3 technology $L=12$. Melsted, Booeshaghi et al. 2019 show how to estimate the number of the actual distinct UMIs on each bead for which data is obtained in a scRNA-seq experiment.","title":"Unique Molecular Identifiers"},{"location":"tutorials/scRNA-seq_intro/python/scRNA-seq_intro.html#summary","text":"Selection of a single-cell RNA-seq method requires choosing among many tradeoffs that reflect the underlying technologies. The table below, from From Zhang et al. 2019. DOI:10.1016/j.molcel.2018.10.020 , summarizes the three most popular droplet-based single-cell RNA-seq assays: The generation of single-cell RNA-seq data is just the first step in understanding the transcriptomes cells. To interpret the data reads must be aligned or pseudoaligned, UMIs counted, and large cell x gene matrices examined. The growth in single-cell RNA-seq analysis tools for these tasks has been breathtaking. The graph below, plotted from real-time data downloaded from the scRNA-seq tools database , shows the number of tools published since 2016. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #@title Growth of single-cell tools { run: \"auto\" } tools = pd.read_csv('https://raw.githubusercontent.com/Oshlack/scRNA-tools/master/database/tools.tsv', sep='\\t') tools[\"Datetime\"] = pd.to_datetime(tools[\"Added\"]) tools = tools.sort_values(\"Added\") tools[\"count\"] = 1 fig, ax = plt.subplots(figsize=(12, 5)) x = tools.Datetime y = tools[\"count\"].groupby(tools.Datetime.dt.time).cumsum() ax.plot(x, y, color=\"k\") ax.set_xlabel(\"Date\") ax.set_ylabel(\"Number of tools\") ax.tick_params(axis='x', rotation=45) plt.show() In fact, the rate of growth of single-cell RNA-seq tools is similar to that of single-cell RNA-seq studies : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #@title scRNA-seq tools vs. studies linear regression date_papers = papers.groupby(\"Datetime\")[\"count\"].sum() date_tools = tools.groupby(\"Datetime\")[\"count\"].sum() dates = pd.date_range(start='7/26/2002', end='01/01/2025') combined = pd.DataFrame(index=dates) combined[\"tool_counts\"] = combined.index.map(date_tools) combined[\"paper_counts\"] = combined.index.map(date_papers) combined = combined.fillna(0) combined[\"Datetime\"] = combined.index.values fig, ax = plt.subplots(figsize=(5,5)) x = combined[\"paper_counts\"].groupby(combined.Datetime.dt.time).cumsum() y = combined[\"tool_counts\"].groupby(combined.Datetime.dt.time).cumsum() ax.scatter(x, y, color=\"k\") regr = linear_model.LinearRegression() x = x.values[:, np.newaxis] regr.fit(x, y.values) xx = np.linspace(0, max(x), 200) yy = regr.intercept_ + regr.coef_*xx ax.plot(xx, yy, color=\"r\", label=f\"{regr.intercept_:,.2f} + {regr.coef_[0]:,.2f}*x\") lims = [np.min([ax.get_xlim(), ax.get_ylim()]), # min of both axes np.max([ax.get_xlim(), ax.get_ylim()])] # max of both axes ax.plot(lims, lims, 'k-', alpha=0.75, zorder=0) ax.set_aspect('equal') ax.set_xlim(lims) ax.set_ylim(lims) ax.set_xlabel(\"Cumulative Papers\") ax.set_ylabel(\"Cumulative Tools\") ax.legend() plt.show() Next step: to learn how to analyze single-cell RNA-seq data, visit the kallistobus.tools site tutorials site and explore the \"Introduction 1: pre-processing and quality control\" notebook in Python or R . Feedback : please report any issues, or submit pull requests for improvements, in the Github repository where this notebook is located .","title":"Summary"}]}